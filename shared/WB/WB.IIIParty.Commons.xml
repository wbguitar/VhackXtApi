<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WB.IIIParty.Commons</name>
    </assembly>
    <members>
        <member name="T:WB.IIIParty.Commons.Collections.ProdConsQueueEx`1">
            <summary>
            Implementa una coda con produttori multipli e singolo consumatore
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Collections.ProdConsQueueEx`1.dObjectDequeue">
            <summary>
            Delega la ricezione dello scodamento di un oggetto dalla coda
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.ProdConsQueueEx`1.#ctor(System.Int32,WB.IIIParty.Commons.Collections.ProdConsQueueEx{`0}.dObjectDequeue)">
            <summary>
            Costruttore
            </summary>
            <param name="_max_el">Numero massimo di elementi sulla coda</param>
            <param name="callback">Callback di ricezione degli elementi scodati</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.ProdConsQueueEx`1.Enqueue(`0)">
            <summary>
            Inserisce un oggetto sulla coda
            </summary>
            <param name="obj">Oggetto da inserire sulla coda</param>
            <returns>Ritorna l'esito dell'operazione</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.ProdConsQueueEx`1.Clear">
            <summary>
            Remove all items from the queue
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Collections.ProdConsQueueEx`1.IsEmpty">
            <summary>
            Ritorna se la coda è vuota
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Collections.ProdConsQueueEx`1.QueueLength">
            <summary>
            Ritorna il numero di elementi in coda
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Collections.ProdConsQueueEx`1.Capacity">
            <summary>
            Ritorna il numero massimo di elementi in coda
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.ProdConsQueueEx`1.Dispose">
            <summary>
            Libera le risorse
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Collections.EnqueueResult">
            <summary>
            Enumerato del risultato di Enqueue
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Collections.EnqueueResult.OK">
            <summary>
            L'oggetto è stato inserito correttamente nella coda.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Collections.EnqueueResult.LISTFULL">
            <summary>
            Non è stato possibile inserire l'oggetto nella coda perchè ha raggiuntto il numero massimo di elementi.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Collections.EnqueueResult.EXCEPTION">
            <summary>
            Si è verificata un eccezione.
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Collections.ProdConsPriorityQueue`1">
            <summary>
            Implementa una coda con produttori multipli e singolo consumatore
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.ProdConsPriorityQueue`1.#ctor(System.Boolean,System.Int32)">
            <summary>
            Costruttore
            </summary>
            <param name="_max_el">Numero massimo di elementi sulla coda</param>
            <param name="_orderPriorityCresc">Definisce se l'ordinamento della priorità è crescente o decrescente</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.ProdConsPriorityQueue`1.Enqueue(System.UInt32,`0)">
            <summary>
            Inserisce un oggetto sulla coda
            </summary>
            <param name="value">Oggetto da inserire sulla coda</param>
            <param name="priority">Priorità dell'oggetto</param>
            <returns>Ritorna l'esito dell'operazione</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.ProdConsPriorityQueue`1.Dequeue(`0@)">
            <summary>
            
            </summary>
            <returns></returns> 
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.ProdConsPriorityQueue`1.TryDequeue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:WB.IIIParty.Commons.Collections.ProdConsPriorityQueue`1.IsEmpty">
            <summary>
            Ritorna se la coda è vuota
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Collections.ProdConsPriorityQueue`1.QueueLength">
            <summary>
            Ritorna il numero di elementi in coda
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Collections.ProdConsPriorityQueue`1.Capacity">
            <summary>
            Ritorna il numero massimo di elementi in coda
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.ProdConsPriorityQueue`1.Dispose">
            <summary>
            Libera le risorse
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Collections.ProdConsQueueEx">
            <summary>
            Implementa una coda con produttori multipli e singolo consumatore
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Collections.ProdConsQueueEx.dObjectDequeue">
            <summary>
            Delega la ricezione dello scodamento di un oggetto dalla coda
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.ProdConsQueueEx.#ctor(System.Int32,WB.IIIParty.Commons.Collections.ProdConsQueueEx.dObjectDequeue)">
            <summary>
            Costruttore
            </summary>
            <param name="_max_el">Numero massimo di elementi sulla coda</param>
            <param name="callback">Callback di ricezione degli elementi scodati</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.ProdConsQueueEx.Enqueue(System.Object)">
            <summary>
            Inserisce un oggetto sulla coda
            </summary>
            <param name="obj">Oggetto da inserire sulla coda</param>
            <returns>Ritorna l'esito dell'operazione</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.ProdConsQueueEx.Clear">
            <summary>
            Remove all items from the queue
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Collections.ProdConsQueueEx.IsEmpty">
            <summary>
            Ritorna se la coda è vuota
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Collections.ProdConsQueueEx.QueueLength">
            <summary>
            Ritorna il numero di elementi in coda
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Collections.ProdConsQueueEx.Capacity">
            <summary>
            Ritorna il numero massimo di elementi in coda
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.ProdConsQueueEx.Dispose">
            <summary>
            Libera le risorse
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Collections.Array">
            <summary>
            Consente la gestione di array e liste generiche
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitSet(System.Byte@,System.Int32,System.Boolean)">
            <summary>
            Set bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitSet">Indice del bit</param>
            <param name="value">Valore del bit</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitGet(System.Byte,System.Int32)">
            <summary>
            Get Bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitGet">Indice del bit</param>
            <returns>Valore del bit</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitSet(System.Char@,System.Int32,System.Boolean)">
            <summary>
            Set bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitSet">Indice del bit</param>
            <param name="value">Valore del bit</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitGet(System.Char,System.Int32)">
            <summary>
            Get Bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitGet">Indice del bit</param>
            <returns>Valore del bit</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitSet(System.Double@,System.Int32,System.Boolean)">
            <summary>
            Set bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitSet">Indice del bit</param>
            <param name="value">Valore del bit</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitGet(System.Double,System.Int32)">
            <summary>
            Get Bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitGet">Indice del bit</param>
            <returns>Valore del bit</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitSet(System.Single@,System.Int32,System.Boolean)">
            <summary>
            Set bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitSet">Indice del bit</param>
            <param name="value">Valore del bit</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitGet(System.Single,System.Int32)">
            <summary>
            Get Bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitGet">Indice del bit</param>
            <returns>Valore del bit</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitSet(System.Int32@,System.Int32,System.Boolean)">
            <summary>
            Set bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitSet">Indice del bit</param>
            <param name="value">Valore del bit</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitGet(System.Int32,System.Int32)">
            <summary>
            Get Bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitGet">Indice del bit</param>
            <returns>Valore del bit</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitSet(System.Int64@,System.Int32,System.Boolean)">
            <summary>
            Set bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitSet">Indice del bit</param>
            <param name="value">Valore del bit</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitGet(System.Int64,System.Int32)">
            <summary>
            Get Bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitGet">Indice del bit</param>
            <returns>Valore del bit</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitSet(System.Int16@,System.Int32,System.Boolean)">
            <summary>
            Set bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitSet">Indice del bit</param>
            <param name="value">Valore del bit</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitGet(System.Int16,System.Int32)">
            <summary>
            Get Bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitGet">Indice del bit</param>
            <returns>Valore del bit</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitSet(System.UInt32@,System.Int32,System.Boolean)">
            <summary>
            Set bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitSet">Indice del bit</param>
            <param name="value">Valore del bit</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitGet(System.UInt32,System.Int32)">
            <summary>
            Get Bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitGet">Indice del bit</param>
            <returns>Valore del bit</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitSet(System.UInt64@,System.Int32,System.Boolean)">
            <summary>
            Set bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitSet">Indice del bit</param>
            <param name="value">Valore del bit</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitGet(System.UInt64,System.Int32)">
            <summary>
            Get Bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitGet">Indice del bit</param>
            <returns>Valore del bit</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitSet(System.UInt16@,System.Int32,System.Boolean)">
            <summary>
            Set bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitSet">Indice del bit</param>
            <param name="value">Valore del bit</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitGet(System.UInt16,System.Int32)">
            <summary>
            Get Bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitGet">Indice del bit</param>
            <returns>Valore del bit</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitSet(System.Byte[]@,System.Int32,System.Boolean)">
            <summary>
            Set bit
            </summary>
            <param name="data">Dati</param>
            <param name="bitSet">Indice del bit</param>
            <param name="value">Valore del bit</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.BitGet(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="bitGet "></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.ToByteArray(System.Collections.BitArray)">
            <summary>
            
            </summary>
            <param name="bits"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.Equals``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{``0})">
            <summary>
            Compara due liste di tipo T
            </summary>
            <param name="dataA">Lista A</param>
            <param name="dataB">Lista B</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Collections.Array.Equals``1(``0[],``0[])">
            <summary>
            Compara due array di tipo T
            </summary>
            <param name="dataA">Array A</param>
            <param name="dataB">Array B</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Csv.CSV">
            <summary>
            Summary description for CSV
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Csv.CSV.#ctor(System.String[],System.String)">
            <summary>
            Nuovo Oggetto
            </summary>
            <param name="header">Formattazione dell'intestazione del File CSV</param>
            <param name="filepath">Path e Nome del file CSV</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Csv.CSV.#ctor">
            <summary>
            Nuovo Oggetto
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Csv.CSV.Header">
            <summary>
            Formattazione dell'intestazione del File CSV
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Csv.CSV.FilePath">
            <summary>
            Path e Nome del file CSV
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Csv.CSV.IsOpen">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Csv.CSV.LastException">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Csv.CSV.OpenFileAppend(System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="encoding"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Csv.CSV.OpenFile(System.Boolean,System.Text.Encoding)">
            <summary>
            Apre il File impostato sulla Proprietà FilePath
            </summary>
            <param name="_createnew">Crea o Sovrascrive un File</param>
            <param name="encoding"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Csv.CSV.CloseFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Csv.CSV.WriteHeader(System.Char)">
            <summary>
            Scrive una linea sul File CSV contenente l'Header
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Csv.CSV.WriteLine(System.String[],System.Char)">
            <summary>
            Scrive una linea sul File CSV
            </summary>
            <param name="currentline"></param>
            <param name="separator"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Csv.CSV.WriteData(System.Collections.ArrayList,System.Char)">
            <summary>
            Scrive Array di linee su File CSV
            </summary>
            <param name="dataexport"></param>
            <param name="separator"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Csv.CSV.ReadData(System.Char[])">
            <summary>
            Legge da un file CSV i campi specificati sulla Proprietà Header
            </summary>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.NoRedundantCommandToTables.NoRedundantCommandToTables">
            <summary>
            Gestisce le operazioni di aggiornamento e select
            di dati presenti su tabelle di database ridondati o no.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantCommandToTables.NoRedundantCommandToTables.#ctor(WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo,System.Int32,System.Boolean)">
            <summary>
            Permette di eseguire operazioni sul database.
            </summary>
            <param name="_server">Inforamzioni di configurazione sul server</param>
            <param name="_capacityQueue">Numero massimo di elementi gestiti dalla coda.</param>
            <param name="_pooling">Abilita o disabilita il pooling</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantCommandToTables.NoRedundantCommandToTables.Log(WB.IIIParty.Commons.Logger.LogLevels,System.String)">
            <summary>
            Metodo di utilizzo di messageLog.
            </summary>
            <param name="logLevel"></param>
            <param name="logMessage"></param>
            
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantCommandToTables.NoRedundantCommandToTables.Insert(WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.InsertDataRow)">
            <summary>
            Inserisce la riga _row nella tabella.
            </summary>
            <param name="_row">Riga da inserire nella tabella.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantCommandToTables.NoRedundantCommandToTables.Insert(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object})">
            <summary>
            Inserisce unariga nella tabella.
            </summary>
            <param name="_dbName">Nome database.</param>
            <param name="_schema">Schema di apparteneza della tabella.</param>
            <param name="_tableName">Nome tabella.</param>
            <param name="_columnsNameList">Elenco delle colonne oggetto della insert.</param>
            <param name="_values">Valori da inserire.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantCommandToTables.NoRedundantCommandToTables.InsertSync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object})">
            <summary>
            Inserisce una riga nella tabella in modo sincrono
            </summary>
            <param name="_dbName">Nome database.</param>
            <param name="_schema">Schema di apparteneza della tabella.</param>
            <param name="_tableName">Nome tabella.</param>
            <param name="_columnsNameList">Elenco delle colonne oggetto della insert.</param>
            <param name="_values">Valori da inserire.</param>
            <returns>True in caso di esito positivo, False altrimenti</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantCommandToTables.NoRedundantCommandToTables.Update(WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.UpdateDataRow)">
            <summary>
            Aggiorna i valori della riga _row.
            </summary>
            <param name="_row">Riga da aggiornare.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantCommandToTables.NoRedundantCommandToTables.Update(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Esegue l'update di una riga.
            </summary>
            <param name="_dbName">Nome database</param>
            <param name="_schema">Nome schema</param>
            <param name="_tableName">Nome tabella</param>
            <param name="_columnsNameToUpdate">Elenco delle colonne da aggiornare</param>
            <param name="_newvalues">Elenco dei nuovi valori.</param>
            <param name="_columnsNameCondition">Elenco delle colonne da inserire
            nella Where</param>
            <param name="_valuesCondition">Elenco dei valori da inserire nella Where</param>
            <param name="_comparisonOperator">Elenco degli operatori di confronto 
            da utilizzare nella Where</param>
            <param name="_logicalOperator">Elenco degli operatori logici da inserire nella Where</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantCommandToTables.NoRedundantCommandToTables.UpdateSync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Esegue l'update di una riga in modo sincrono
            </summary>
            <param name="_dbName">Nome database</param>
            <param name="_schema">Nome schema</param>
            <param name="_tableName">Nome tabella</param>
            <param name="_columnsNameToUpdate">Elenco delle colonne da aggiornare</param>
            <param name="_newvalues">Elenco dei nuovi valori.</param>
            <param name="_columnsNameCondition">Elenco delle colonne da inserire
            nella Where</param>
            <param name="_valuesCondition">Elenco dei valori da inserire nella Where</param>
            <param name="_comparisonOperator">Elenco degli operatori di confronto 
            da utilizzare nella Where</param>
            <param name="_logicalOperator">Elenco degli operatori logici da inserire nella Where</param>
            <returns> True in caso di esito positivo, False altrimenti</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantCommandToTables.NoRedundantCommandToTables.Delete(WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.DeleteDataRow)">
            <summary>
            Cancella, logicamente, la riga _row dalla tabella.
            </summary>
            <param name="_row">Riga da cancellare.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantCommandToTables.NoRedundantCommandToTables.Delete(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Elimina, logicamente, una riga dalla tabella.
            </summary>
            <param name="_dbName">Nome database.</param>
            <param name="_schema">Schema di appartenenza della tabella.</param>
            <param name="_tableName">Nome tabella.</param>
            <param name="_columnsNameCondition">Elenco dei nomi delle colonne 
            da utlizzare per la condizione di "where".</param>
            <param name="_valuesCondition">Elenco dei valori per creare la "where".</param>
            <param name="_comparisonOperator"> Elenco degli operatori di confronto per creare la "where"</param>
            <param name="_logicalOperator">Elenco degli operatori logici per creare la condizione di "where"</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantCommandToTables.NoRedundantCommandToTables.DeleteSync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Elimina, logicamente, una riga dalla tabella in modo sincrono
            </summary>
            <param name="_dbName">Nome database.</param>
            <param name="_schema">Schema di appartenenza della tabella.</param>
            <param name="_tableName">Nome tabella.</param>
            <param name="_columnsNameCondition">Elenco dei nomi delle colonne 
            da utlizzare per la condizione di "where".</param>
            <param name="_valuesCondition">Elenco dei valori per creare la "where".</param>
            <param name="_comparisonOperator"> Elenco degli operatori di confronto per creare la "where"</param>
            <param name="_logicalOperator">Elenco degli operatori logici per creare la condizione di "where"</param>
            <returns>True in caso di esito positivo, False altrimenti</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantCommandToTables.NoRedundantCommandToTables.Select(WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SelectDataRow)">
            <summary>
            Restituisce i valori della tabella _row.tableName.
            </summary>
            <param name="_row">Indica la tabella da dui estrarre i valori,
            le colonne e la condizione del filtro.</param>
            <returns>Valori della tabella.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantCommandToTables.NoRedundantCommandToTables.Select(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Estrae righe dalla tabella.
            </summary>
            <param name="_dbName">Nome del database.</param>
            <param name="_schema">Schema di appartenenza della tabella.</param>
            <param name="_tableName">Nome della tabella.</param>
            <param name="_columnsNameToSelect">Elenco delle colonne oggetto della "select".</param>
            <param name="_columnsNameCondition">Elenco dei nomi delle colonne 
            da utlizzare per la condizione di "where".</param>
            <param name="_valuesCondition">Elenco dei valori per creare la "where".</param>
            <param name="_comparisonOperator">Elenco degli operatori di confronto da inserire
            nella condizione di Where.</param>
            <param name="_logicalOperator">Elenco delgi operatori logici da inserire
            nella condizione di Where.</param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantCommandToTables.NoRedundantCommandToTables.Select(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Consente la lettura di una tabella
            </summary>
            <param name="_dbName">Nome del Database</param>
            <param name="_schema">Nome del gestore del database</param>
            <param name="_tableName">Nome della tabella</param>
            <param name="_columnsNameToSelect">Elenco delle colonne da Selezionare</param>
            <param name="_columnsNameCondition">Elenco dei nomi delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_columnsType">Elenco dei tipi delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_valuesCondition">Elenco dei valori delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_comparisonOperator">Elenco delle operazioni di comparazione tra la condizione ed il valore</param>
            <param name="_logicalOperator">Elenco delle operazioni logiche tra condizioni</param>        
            <returns>Dati letti</returns>    
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantCommandToTables.NoRedundantCommandToTables.Select(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum},System.Int32,System.Collections.Generic.List{WB.IIIParty.Commons.Data.OrderClause})">
            <summary>
            Consente la lettura di una tabella
            </summary>
            <param name="_dbName">Nome del Database</param>
            <param name="_schema">Nome del gestore del database</param>
            <param name="_tableName">Nome della tabella</param>
            <param name="_columnsNameToSelect">Elenco delle colonne da Selezionare</param>
            <param name="_columnsNameCondition">Elenco dei nomi delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_columnsType">Elenco dei tipi delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_valuesCondition">Elenco dei valori delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_comparisonOperator">Elenco delle operazioni di comparazione tra la condizione ed il valore</param>
            <param name="_logicalOperator">Elenco delle operazioni logiche tra condizioni</param>  
            <param name="_n">Numero di righe per la clausola TOP</param>
            <param name="_clause">Clausola ORDER BY</param>
            <returns>Dati letti</returns>    
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantCommandToTables.NoRedundantCommandToTables.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantDatabase">
            <summary>
            Oggetto database.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantDatabase.server">
            <summary>
            Server ove è definito il database.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantDatabase.name">
            <summary>
            Nome del database
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantDatabase.#ctor(WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo,System.String)">
            <summary>
            Costruttore.
            </summary>
            <param name="_servers"></param>
            <param name="_name"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantDatabase.ExtractViewList(System.String,System.Data.SqlClient.SqlCommand@)">
            <returns>Elenco delle tabelle definite.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantDatabase.ExtractTableList(System.String,System.Data.SqlClient.SqlCommand@)">
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantDatabase.GetValueExtProperty(System.String,System.Data.SqlClient.SqlCommand@,System.String,System.String,System.String,System.String)">
            <summary>
            Estrae dal database il valore della proprietà estesa
            "_extPropertyName".
            </summary>
            <param name="_conn">Stringa di connessione al database </param>
            <param name="_cmd">Istruzione sql da eseguire</param>
            <param name="_extPropertyName">Nome della extended property da leggere</param>
            <param name="_schema">Schema di appartenenza della tabella o della vista</param>
            <param name="_table">Nome della tabella o della vista</param>
            <param name="_objType">Specifica il tipo di oggetto: "TABLE" o "VIEW"</param>
            <returns>Restituisce il valore della proprietà estesa "_extPropertyName"</returns>
                   
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantDatabase.GetPrimaryKey(System.String,System.Data.SqlClient.SqlCommand@,System.String)">
            <summary>
            Estrae l'elenco dei nomi delle colonne
            che compongono la chiave primaria della tabella.
            </summary>
            <param name="_conn"></param>
            <param name="_cmd"></param>
            <param name="_tableName"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantDatabase.GetAllColumns(System.String,System.Data.SqlClient.SqlCommand@,System.String)">
            <summary>
            Estrae l'elenco dei nomi delle colonne
            che compongono la chiave primaria della tabella.
            </summary>
            <param name="_conn"></param>
            <param name="_cmd"></param>
            <param name="_tableName"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantDatabase.Dispose">
            <summary>
            Dispose dell'oggetto. 
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantTable">
            <summary>
            Rappresenta una tabella di database.
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantTable.Name">
            <summary>
            Nome della tabella
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantTable.Schema">
            <summary>
            Schema al quale la tabella appartiene
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantTable.Db">
            <summary>
            Nome del database al quale la tabella appartiene.
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantTable.CompleteName">
            <summary>
            Nome completo della tabella: 
            "DbName.SchemaName.TableName".
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantTable.#ctor(WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantDatabase,System.String,System.String)">
            <summary>
            Costruttore
            </summary>
            <param name="_db">Database di appartenenza</param>
            <param name="_schema">Schema di appartenenza</param>
            <param name="_name">Nome della tabella</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantTable.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantView">
            <summary>
            Rappresenta una vista su una tabella
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantView.Name">
            <summary>
            Nome della tabella
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantView.Schema">
            <summary>
            Schema al quale la tabella appartiene
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantView.Db">
            <summary>
            Nome del database al quale la tabella appartiene.
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantView.CompleteName">
            <summary>
            Nome completo della tabella: 
            "DbName.SchemaName.TableName".
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantView.#ctor(WB.IIIParty.Commons.Data.Sql.NoRedundantTables.NoRedundantDatabase,System.String,System.String)">
            <summary>
            Costruttore
            </summary>
            <param name="_db">Nome del database</param>
            <param name="_schema">Nome dello schema</param>
            <param name="_name">Nome della vista</param>       
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo">
            <summary>
            Rappresenta un'istanza Sql
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo.localName">
            <summary>
            Nome dell'istanza del server sql 
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo.password">
            <summary>
            Password per la connessione 
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo.userName">
            <summary>
            Nome utente per la connessione
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo.failoverPartner">
            <summary>
            Nome dell'istanza del server sql di failover
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo.status">
            <summary>
            Indica lo stato di connessione
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo.commandTimeOut">
            <summary>
            TimeOut di esecuzione dei comandi,
            espresso in secondi.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo.periodicTime">
            <summary>
            Intervallo di tempo tra due verifiche successive,di raggiungibilità
            dei server espresso in secondi.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo.pooling">
            <summary>
            Disabilita l'utilizzo del pool delle connessioni
            al database
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Costruttore
            </summary>
            <param name="_localName">Nome dell'istanza del server sql </param>
            <param name="_userName">Nome utente per la connessione</param>
            <param name="_password">Password per la connessione </param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Costruttore
            </summary>
            <param name="_localName">Nome dell'istanza del server sql </param>
            <param name="_userName">Nome utente per la connessione</param>
            <param name="_password">Password per la connessione </param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo.#ctor(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Costruttore
            </summary>
            <param name="_localName">Nome dell'istanza del server sql </param>
            <param name="_userName">Nome utente per la connessione</param>
            <param name="_password">Password per la connessione </param>
            <param name="_commandTimeOutDefault">Timeout di connessione in secondi</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            Costruttore
            </summary>
            <param name="_localName">Nome dell'istanza del server sql </param>
            <param name="_userName">Nome utente per la connessione</param>
            <param name="_password">Password per la connessione </param>
            <param name="_commandTimeOutDefault">Timeout di connessione in secondi</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo.#ctor">
            <summary>
            Costruttore
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo.EnableControllerConnection(System.UInt32)">
            <summary>
            Abilita il processo di verifica della raggiungibilità
            del server.
            </summary>
            <param name="_time">Intervallo di tempo, espresso in secondi, 
            tra una verifica e l'altra.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo.DisableControllerConnection">
            <summary>
            Disabilita il processo di verifica della raggiungibilità 
            del server.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo.WaitForReady(System.Int32)">
            <summary>
            Attende la fine dell'inizializzazione delgi oggetti.
            </summary>
            <param name="_timeOut">Timeout in millisecondi</param>
            <returns>True: se l'inizializzazione è finita prima del timeout,
            false altrimenti.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo.GetLocalDbList(System.String,System.Byte)">
            <summary>
            Estrae la lista dei database appartenenti al server
            </summary>   
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo.ControllerConnection">
            <summary>
            Verifica lo stato di connessione con il server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.NoRedundantTables.SingleServerInfo.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.TableCompare">
            <summary>
            Confronta due oggetti Table
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.TableCompare.Compare(WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table,WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConfigurationInfo">
            <summary>
            Contiene i parametri di configurazione
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConfigurationInfo.localServer">
            <summary>
            Server locale
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConfigurationInfo.remoteServer">
            <summary>
            Server remoto
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConfigurationInfo.intervalSync">
            <summary>
            Periodo di esecuzione della sincronizzazione, 
            epsresso in secondi.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConfigurationInfo.intervalConnectionController">
            <summary>
            Periodo del controllo di connettività
            ai server, espresso in millisecondi.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConfigurationInfo.tableSyncName">
            <summary>
            Nome della tabella che registra gli eventi di sincronizzazione.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConfigurationInfo.tableSyncColumnTableName">
            <summary>
            Nome della colonna della tabella di sincronizzazione,
            che contiene il nome della tabella.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConfigurationInfo.tableSyncColumnDateTimeNameInsert">
            <summary>
            Nome della colonna della tabella di sincronizzazione,
            che contiene l'istante in cui è avvenuta la sincronizzazione "Insert".
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConfigurationInfo.tableSyncColumnDateTimeNameUpdate">
            <summary>
            Nome della colonna della tabella di sincronizzazione,
            che contiene l'istante in cui è avvenuta la sincronizzazione "Update".
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConfigurationInfo.maxRows">
            <summary>
            Numero massimo di righe oggetto della sincronizzazione
            periodica.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConfigurationInfo.extPropertyNameSync">
            <summary>
            Nome della extended property che indica se la tabella/database
            è oggetto del processo di sincronizzazione.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConfigurationInfo.extPropertyNameType">
            <summary>
            Nome della extended property che indica il tipo di tabella
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConfigurationInfo.extPropertyNameIsDeleted">
            <summary>
            Nome della extended property che indica se riga è cancellata oppure no.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConfigurationInfo.extPropertyLastUpdate">
            <summary>
            Nome della extended property che contiene l'istante dell'ultimo
            aggiornamento.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConfigurationInfo.#ctor(WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo,WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo,WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ParamTable)">
            <summary>
            Costruttore.
            </summary>
            <param name="_localServer">Server definito come locale</param>
            <param name="_remoteServer">Server definito come remoto</param>
            <param name="_paramTable">Tabella dei parametri</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConfigurationInfo.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConnectionStatus">
            <summary>
            Indica i possibili stati di connessione al server sql
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConnectionStatus.Bad">
            <summary>
            Non raggiungibile
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConnectionStatus.Good">
            <summary>
            Raggiungibile
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConnectionStatus.Unkown">
            <summary>
            Non conosciuto
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Database">
            <summary>
            Oggetto database.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Database.servers">
            <summary>
            Coppia di server ove è definito il database.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Database.name">
            <summary>
            Nome del database
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Database.SyncTable">
            <summary>
            Tabella riepilogo dei processi di sincronizzazione
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Database.#ctor(WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SyncServers,System.String)">
            <summary>
            Costruttore.
            </summary>
            <param name="_servers"></param>
            <param name="_name"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Database.GetLocalViewList(System.String)">
            <summary>
            Restituisce l'elenco delle viste.
            </summary>
            <param name="_propertyIsDeleted"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Database.GetLocalTableList(System.String,System.Byte,System.String,WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.TableType,System.String,System.String)">
            <summary>
            Estrae l'elenco delle tabelle definite nel database.
            </summary>
            <param name="_propertySyncName">Nome della extended property che indica se la tabella
            è soggetta a sincronizzazione oppure no.</param>
            <param name="_syncValue">Valore della extended property '_propertySyncName'</param>
            <param name="_propertyTypeName">Nome extended property che indica il tipo di tabella</param>
            <param name="_typeValue">Valore della extended '_propertyTypeName'</param>
            <param name="_propertyLastUpdate">Nome della extended property che indica il nome della colonna
            che contiene dell'istante dell'ultimo aggiornamento della riga </param>
            <param name="_propertyIsDeleted">Nome della extended property che indica il nome della colonna
            che indica se la riga è cancellata.</param>
            <returns>Elenco delle tabelle definite.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Database.ExtractTableList(System.String,System.Data.SqlClient.SqlCommand@,System.String,System.Byte,System.String,WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.TableType)">
            <summary>
            Legge dal database i nomi e gli schema,
            delle tabelle con:
            _propertySyncName = _syncValue e
            _propertyTypeName = _typeValue
            </summary>
            <param name="_conn"></param>
            <param name="_cmd"></param>
            <param name="_propertySyncName"></param>
            <param name="_syncValue"></param>
            <param name="_propertyTypeName"></param>
            <param name="_typeValue"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Database.GetValueExtProperty(System.String,System.Data.SqlClient.SqlCommand@,System.String,System.String,System.String,System.String)">
            <summary>
            Estrae dal database il valore della proprietà estesa
            "_extPropertyName".
            </summary>
            <param name="_conn">Stringa di connessione al database </param>
            <param name="_cmd">Istruzione sql da eseguire</param>
            <param name="_extPropertyName">Nome della extended property da leggere</param>
            <param name="_schema">Schema di appartenenza della tabella o della vista</param>
            <param name="_table">Nome della tabella o della vista</param>
            <param name="_objType">Specifica il tipo di oggetto: "TABLE" o "VIEW"</param>
            <returns>Restituisce il valore della proprietà estesa "_extPropertyName"</returns>
                   
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Database.GetPrimaryKey(System.String,System.Data.SqlClient.SqlCommand@,System.String)">
            <summary>
            Estrae l'elenco dei nomi delle colonne
            che compongono la chiave primaria della tabella.
            </summary>
            <param name="_conn"></param>
            <param name="_cmd"></param>
            <param name="_tableName"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Database.GetAllColumns(System.String,System.Data.SqlClient.SqlCommand@,System.String)">
            <summary>
            Estrae l'elenco dei nomi delle colonne
            che compongono la chiave primaria della tabella.
            </summary>
            <param name="_conn"></param>
            <param name="_cmd"></param>
            <param name="_tableName"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Database.Dispose">
            <summary>
            Dispose dell'oggetto. 
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Row">
            <summary>
            Rappresenta una riga di tabella.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Row.dbName">
            <summary>
            Nome del database al quale appartiene la tabella
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Row.schema">
            <summary>
            Nome dello schema al quale appartiene la tabella
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Row.tableName">
            <summary>
            Nome della tabella alla quale appartiene la riga
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Row.#ctor(System.String,System.String,System.String)">
            <summary>
            Costruttore
            </summary>
            <param name="_dbName">Nome del database</param>
            <param name="_schema">Nome dello schema</param>
            <param name="_tableName">Nome della tabella</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Row.#ctor">
            <summary>
            Costruttore
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.DeleteDataRow">
            <summary>
            Rappresenta una riga che deve essere cancellata dalla tabella
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.DeleteDataRow.columnsNameCondition">
            <summary>
            Elenco delle colonne presenti nella condizione di "where"
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.DeleteDataRow.valuesCondition">
            <summary>
            Elenco dei valori presenti nella condizione di "where"
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.DeleteDataRow.comparisonOperator">
            <summary>
            Elenco degli operatiri di confronto presenti nella condizione
            di "where"
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.DeleteDataRow.logicalOperator">
            <summary>
            Elenco degli operatori logici presenti nella condizione
            di "where"
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.DeleteDataRow.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Costruttore
            </summary>
            <param name="_dbName">Nome del database</param>
            <param name="_schema">Nome dello schema</param>
            <param name="_tableName">Nome della tabella</param>
            <param name="_columnsNameCondition">Elenco delle colonne presenti nella condizione di "where"</param>
            <param name="_valuesCondition">Elenco dei valori presenti nella condizione di "where"</param>
            <param name="_comparisonOperator">Elenco degli operatiri di confronto presenti nella condizione
            di "where"</param>
            <param name="_logicalOperator">Elenco degli operatori logici presenti nella condizione
            di "where"</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.InsertDataRow">
            <summary>
            Rappresenta una riga da inserire 
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.InsertDataRow.columnsName">
            <summary>
            Elenco delle colonne oggetto della insert
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.InsertDataRow.values">
            <summary>
            Elenco dei valori da inserire 
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.InsertDataRow.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object})">
            <summary>
            Costruttore
            </summary>
            <param name="_dbName">Nome del database</param>
            <param name="_dbSchema">Nome dello schema</param>
            <param name="_tableName">Nome della tabella di destinazione</param>
            <param name="_columnsName">Elenco delle colonne oggetto della insert</param>
            <param name="_values">Elenco dei valori da inserire</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.OperatorConvert">
            <summary>
            Convertitore da enumerato a stringa degli operatori
            logici e di confronto.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.OperatorConvert.#ctor">
            <summary>
            Costruttore
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.OperatorConvert.GetStringFromEnum(WB.IIIParty.Commons.Data.LogicalOperatorEnum)">
            <summary>
            Convertitore di un enumerato in stringa
            </summary>
            <param name="_operator">Operatore logico in forma di enumerato</param>
            <returns>Operatore logico</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.OperatorConvert.GetStringFromEnum(WB.IIIParty.Commons.Data.ComparisonOperatorEnum)">
            <summary>
            Convertitore di un enumerato in stringa
            </summary>
            <param name="_operator">Operatore di confronto in forma di enumerato</param>
            <returns>operatore di confronto</returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ParamsName">
            <summary>
            Elenco dei parametri da leggere dalla tabella dei Parametri
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ParamsName.Interval">
            <summary>
            Periodi di sincronizzazione espresso in secondi
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ParamsName.Synchronize">
            <summary>
            Nome della proprietà estesa che indica se il database/tabella 
            è soggetta al processo di sincronizzazione
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ParamsName.Type">
            <summary>
            Nome della proprietà estesa che indica il tipo della tabella
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ParamsName.TableSync">
            <summary>
            Nome della tabella che registra gli eventi di sincronizzazione
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ParamsName.TableName">
            <summary>
            Nome della colonna, della tabella TableSync, che contiene
            il nome delle tabelle da sincronizzare
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ParamsName.DateTimeNameInsert">
            <summary>
            Nome della colonna, della tabella TableSync, che contiene la data-ora
            della sincronizzazione con esito positivo dovuta ad insert
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ParamsName.DateTimeNameUpdate">
            <summary>
            Nome della colonna, della tabella TableSync, che contiene la data-ora
            della sincronizzazione con esito positivo dovuta ad update
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ParamsName.MaxRows">
            <summary>
            Numero massimo di linee da prendere in considerazione durante il
            processo di sincronizzazione periodico
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ParamsName.IsDeleted">
            <summary>
            Nome della proprietà estesa che indica il della colonna
            Cancellata
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ParamsName.LastUpdate">
            <summary>
            Nome della proprietà estesa che indica il della colonna
            dell'istante dell'ultimo aggiornamento della riga
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ParamsName.IntervalConnectionController">
            <summary>
            Intervallo di tempo, espresso in secondi, che intercorre tra due
            verifiche consecutive di raggiungibilità del server
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ParamTable">
            <summary>
            Tabella dei parametri di configurazione
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ParamTable.DbName">
            <summary>
            Nome del databese
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ParamTable.Schema">
            <summary>
            Nome dello schema
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ParamTable.TableName">
            <summary>
            Nome della tabella 
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ParamTable.#ctor(System.String,System.String,System.String)">
            <summary>
            Tabella dei parametri di configurazione.
            </summary>
            <param name="_dbName">Nome del database di appartenenza.</param>
            <param name="_schema">Nome dello schema.</param>
            <param name="_tableName">Nome della tabella.</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.RegistryKeys">
            <summary>
            Permette la lettura di chiavi di registro
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.RegistryKeys.#ctor">
            <summary>
            Costruttore
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.RegistryKeys.GetLocalServer">
            <summary>
            Restituisce un oggetto ServerInfo che rappresnta
            il server locale.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.RegistryKeys.GetRemoteServer">
            <summary>
            Restituisce un oggetto ServerInfo che rappresnta
            il server locale.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.RegistryKeys.GetParamDbName">
            <summary>
            Resituisce il nome del database dei parametri.
            </summary>
            <returns>Nome del database dei parametri o stringa vuota in
            caso di errore.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.RegistryKeys.GetParamSchemaName">
            <summary>
            Resituisce il nome dello schema del database dei parametri.
            </summary>
            <returns>Nome dello schema o stringa vuota in caso di errore.
            </returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.RegistryKeys.GetParamTableName">
            <summary>
            Resituisce il nome della tabella dei parametri.
            </summary>
            <returns>Nome della tabella o stringa vuota in caso di errore.
            </returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.RegistryKeys.GetServer(System.String,System.String)">
            <summary>
            Legge le chiavi di registro relative ad un'istanza Sql.
            </summary>
            <param name="_name">Nome istanza sql</param>
            <param name="_linkedName">Nome dell'instanza sql "linked".</param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.RegistryKeys.Dispose">
            <summary>
            Dispose dell'oggetto
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SelectDataRow">
            <summary>
            Rappresenta le righe che devono essere estratte
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SelectDataRow.columnsNameToSelect">
            <summary>
            Elenco delle colonne oggetto dell'istruzione select
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SelectDataRow.columnsNameCondition">
            <summary>
            Elenco delle colonne presenti nella condizione di "where"
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SelectDataRow.valuesCondition">
            <summary>
            Elenco dei valori presenti nella condizione di "where"
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SelectDataRow.comparisonOperator">
            <summary>
            Elenco degli operatiri di confronto presenti nella condizione
            di "where"
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SelectDataRow.logicalOperator">
            <summary>
            Elenco degli operatori logici presenti nella condizione
            di "where"
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SelectDataRow.columnsType">
            <summary>
            Tipi di dato delle colonne
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SelectDataRow.rowNumber">
             <summary>
            Numero di righe della clausola TOP 
             </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SelectDataRow.orderClause">
             <summary>
            Clausola ORDER BY 
             </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SelectDataRow.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Costruttore
            </summary>
            <param name="_dbName">Nome del database</param>
            <param name="_schema">Nome dello schema</param>
            <param name="_tableName">Nome della tabella</param>
            <param name="_columnsNameToSelect"> Elenco delle colonne oggetto dell'istruzione select</param>
            <param name="_columnsNameCondition">Elenco delle colonne presenti nella condizione di "where"</param>
            <param name="_valuesCondition">Elenco dei valori presenti nella condizione di "where"</param>
            <param name="_comparisonOperator">Elenco degli operatiri di confronto presenti nella condizione
            di "where"</param>
            <param name="_columnsType"></param>
            <param name="_logicalOperator">Elenco degli operatori logici presenti nella condizione
            di "where"</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SelectDataRow.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum},System.Int32,System.Collections.Generic.List{WB.IIIParty.Commons.Data.OrderClause})">
            <summary>
            Costruttore
            </summary>
            <param name="_dbName">Nome del database</param>
            <param name="_schema">Nome dello schema</param>
            <param name="_tableName">Nome della tabella</param>
            <param name="_columnsNameToSelect"> Elenco delle colonne oggetto dell'istruzione select</param>
            <param name="_columnsNameCondition">Elenco delle colonne presenti nella condizione di "where"</param>
            <param name="_valuesCondition">Elenco dei valori presenti nella condizione di "where"</param>
            <param name="_comparisonOperator">Elenco degli operatiri di confronto presenti nella condizione di "where"</param>
            <param name="_columnsType">Elenco dei tipi delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_logicalOperator">Elenco degli operatori logici presenti nella condizione di "where"</param>
            <param name="_n">Numero di righe per la clausola TOP</param>
            <param name="_clause">Clausola ORDER BY</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SelectDataRow.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Costruttore
            </summary>
            <param name="_dbName">Nome del database</param>
            <param name="_schema">Nome dello schema</param>
            <param name="_tableName">Nome della tabella</param>
            <param name="_columnsNameToSelect"> Elenco delle colonne oggetto dell'istruzione select</param>
            <param name="_columnsNameCondition">Elenco delle colonne presenti nella condizione di "where"</param>
            <param name="_valuesCondition">Elenco dei valori presenti nella condizione di "where"</param>
            <param name="_comparisonOperator">Elenco degli operatiri di confronto presenti nella condizione
            di "where"</param>
            <param name="_logicalOperator">Elenco degli operatori logici presenti nella condizione
            di "where"</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo">
            <summary>
            Rappresenta un'istanza Sql
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo.localName">
            <summary>
            Nome dell'istanza del server sql 
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo.localLinkedName">
            <summary>
            Nome dell'istanza del server collegato, utilizzato per 
            query distribuite
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo.password">
            <summary>
            Password per la connessione 
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo.userName">
            <summary>
            Nome utente per la connessione
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo.status">
            <summary>
            Indica lo stato di connessione
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo.commandTimeOut">
            <summary>
            TimeOut di esecuzione dei comandi,
            espresso in secondi.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo.periodicTime">
            <summary>
            Intervallo di tempo tra due verifiche successive,di raggiungibilità
            dei server espresso in secondi.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo.pooling">
            <summary>
            Disabilita l'utilizzo del pool delle connessioni
            al database
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Costruttore
            </summary>
            <param name="_localName">Nome dell'istanza del server sql </param>
            <param name="_linkedName">Nome dell'istanza del server collegato, utilizzato per 
            query distribuite</param>
            <param name="_userName">Nome utente per la connessione</param>
            <param name="_password">Password per la connessione </param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo.#ctor(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Costruttore
            </summary>
            <param name="_localName">Nome dell'istanza del server sql </param>
            <param name="_linkedName">Nome dell'istanza del server collegato, utilizzato per 
            query distribuite</param>
            <param name="_userName">Nome utente per la connessione</param>
            <param name="_password">Password per la connessione </param>
            <param name="_commandTimeOutDefault">Timeout di connessione in secondi</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo.#ctor">
            <summary>
            Costruttore
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo.EnableControllerConnection(System.UInt32)">
            <summary>
            Abilita il processo di verifica della raggiungibilità
            del server.
            </summary>
            <param name="_time">Intervallo di tempo, espresso in secondi, 
            tra una verifica e l'altra.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo.DisableControllerConnection">
            <summary>
            Disabilita il processo di verifica della raggiungibilità 
            del server.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo.WaitForReady(System.Int32)">
            <summary>
            Attende la fine dell'inizializzazione delgi oggetti.
            </summary>
            <param name="_timeOut">Timeout in millisecondi</param>
            <returns>True: se l'inizializzazione è finita prima del timeout,
            false altrimenti.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo.ControllerConnection">
            <summary>
            Verifica lo stato di connessione con il server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SyncServers">
            <summary>
            Reppresenta la coppia di database oggetto
            del processo di sincronizzazione.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SyncServers.localServer">
            <summary>
            Server definito come locale
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SyncServers.remoteServer">
            <summary>
            Server definito come remoto
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SyncServers.#ctor(WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo,WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ServerInfo)">
            <summary>
            Coppia di server oggetto del processo di sincronizzazione.
            </summary>
            <param name="_localServer">Server definito come locale</param>
            <param name="_remoteServer">Server definito come remoto</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SyncServers.GetLocalDbList(System.String,System.Byte)">
            <summary>
            Estrae la lista dei database appartenenti ad un server
            con extended property pari a "_propertySyncName" il 
            cui valore è "_syncValue"
            </summary>
            <param name="_propertySyncName">Nome extended property.</param>
            <param name="_syncValue">Valore della extended property.</param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SyncServers.Dispose">
            <summary>
            Dispose dell'oggetto.
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SyncTableProcess">
            <summary>
            Rappresenta la tabella che contiene le 
            informazioni relative ai processi di sincronizzazione
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SyncTableProcess.name">
            <summary>
            Nome della tabella
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SyncTableProcess.colTable">
            <summary>
            Nome della colonna che contiene il nome della tabella oggetto del 
            processo di sincronizzazione
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SyncTableProcess.colDateTimeInsert">
            <summary>
            Nome della colonna che contiene la data-ora della sincronizzazione
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SyncTableProcess.colDateTimeUpdate">
            <summary>
            Nome della colonna che contiene l'esito del processo di sincronizzazione         
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SyncTableProcess.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Costruttore
            </summary>
            <param name="_name">Nome della tabella</param>
            <param name="_colTable">Nome della colonna che contiene il nome 
            della tabella oggetto del processo di sincronizzazione</param>
            <param name="_colDateTimeInsert">Nome della colonna che contine 
            la data-ora della sincronizzazione dovuta ad insert</param>
            <param name="_colDateTimeUpdate">Nome della colonna che contine 
            la data-ora della sincronizzazione dovuta ad update</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SyncTableProcess.#ctor">
            <summary>
            Costruttore
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table">
            <summary>
            Rappresenta una tabella di database.
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.Name">
            <summary>
            Nome della tabella
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.Schema">
            <summary>
            Schema al quale la tabella appartiene
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.Db">
            <summary>
            Nome del database al quale la tabella appartiene.
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.Type">
            <summary>
            Tipo della tabella 
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.CompleteName">
            <summary>
            Nome completo della tabella: 
            "DbName.SchemaName.TableName".
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.Level">
            <summary>
            Livello di relazione fra tabelle in un db
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.primaryKeys">
            <summary>
            Elenco delle colonne che compongono la chiave primaria.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.allColumns">
            <summary>
            Elenco di tutte le colonne.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.lastUpdateColumnName">
            <summary>
            Nome della colonna che contiene la data 
            dell'ultimo aggiornamento della riga.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.isDeletedColumnName">
            <summary>
            Nome della colonna che indica se la riga è
            cancellata.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.maxRowToSync">
            <summary>
            Numero massimo di righe oggetto della 
            sincronizzazione.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.#ctor(WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Database,System.String,System.String,WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.TableType,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            Costruttore
            </summary>
            <param name="_db">Database di appartenenza</param>
            <param name="_schema">Schema di appartenenza</param>
            <param name="_name">Nome della tabella</param>
            <param name="_type">Tipo</param>
            <param name="_primaryKeys">Elenco delle colonne che costituiscono la chiave primaria</param>
            <param name="_allColumns">Elenco di tutte le colonne</param>
            <param name="_lastUpdateColumnName">Nome della colonna che indica l'istante dell'ultimo 
            aggiornamento</param>
            <param name="_isDeletedColumnName">Nome della colonna che indica se la riga è cancellata</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.#ctor(WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Database,System.String,System.String,WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.TableType,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="_db"></param>
            <param name="_schema"></param>
            <param name="_name"></param>
            <param name="_type"></param>
            <param name="_primaryKeys"></param>
            <param name="_allColumns"></param>
            <param name="_lastUpdateColumnName"></param>
            <param name="_isDeletedColumnName"></param>
            <param name="_level"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.Synchronize(System.Boolean,System.UInt32,System.Boolean)">
            <summary>
            Sincronizza le rgihe delle due tabelle presenti nelle
            due istanze server.
            </summary>
            <param name="_periodic">Indica se il processo è periodico oppure no.</param>
            <param name="_maxRows">Numero massimo di righe oggetto di ogni processo di sincronizzazione.</param>
            <param name="_onlyDelete">True nel caso di sola conacellazione delle righe con isDeleted=1,
            False altrimenti</param>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.commandTimeout">
            <summary>
            Timeout meggiorato per le operazioni di update 
            che sono più lunghe
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.SincrUpdate(System.Data.SqlClient.SqlCommand,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Aggiorna le righe, del server di destinazione, con data inferiore 
            rispetto a quelle del server sorgente.
            </summary>
            <param name="_cmd">Connessione al db.</param>
            <param name="_serverSrc">Server sorgente</param>
            <param name="_serverDst">Server destinazione</param>
            <param name="_lastSyncTime">Istante dell'ultima sincronizzazione</param>
            <param name="_maxTime">Limite superiore dell'intervallo di tempo da considerare</param>
            <returns>Numero di righe aggiornate.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.SetDateMax(System.Data.SqlClient.SqlCommand,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Aggiorna la tabella che registra gli eventi di sincronizzazione
            </summary>
            <param name="_cmd">Comando per la connessione </param>
            <param name="_server">Nome del server su cui fare l'aggiornamento</param>
            <param name="_syncTimeStampInsert">Istante dell'ultima sincronizzazione per insert</param>
            <param name="_syncTimeStampUpdate">Istante dell'ultima sincronizzazione per update</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.SincrInsert(System.Data.SqlClient.SqlCommand,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Inserisce nella tabella Standby le righe presenti in serverSrc e non presenti 
            in serverDst
            </summary>
            <param name="_cmd">Comando per la connessione al server </param>
            <param name="_serverSrc">Server sorgente da cui estrarre le righe</param>
            <param name="_serverDst">Server destinazione in cui copiare le righe</param>
            <param name="_lastSyncTime">Istante in cui è avvenuta l'ultima sincronizzazione</param>
            <param name="_maxTime">Limite superiore per l'ultimo aggiornamento delle righe</param>
            <returns>Restituisce il numero di righe inserite.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.GetLastSyncTime(System.Data.SqlClient.SqlCommand,System.String,System.Boolean)">
            <summary>
            Estrae la data della precedente sincronizzazione 
            </summary>
            <returns>DateTime.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.GetCurrentMaxTime(System.Data.SqlClient.SqlCommand,System.String,System.String,System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            
            </summary>
            <param name="_cmd">Comando per la connessione al server</param>
            <param name="_server1">nome server sorgente</param>
            <param name="_server2">nome server destinazione</param>
            <param name="_lastSyncTime">istante dell'ultima sincronizzazione</param>
            <param name="_isInsert">Indica se l'attuale processo di sincronizzazione è
            per insert o per update</param>
            <returns>Data massima dell'intervallo di righe da sincronizzare</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.DelDeletedRows(System.Data.SqlClient.SqlCommand,System.String,System.Nullable{System.DateTime})">
            <summary>
            Elimina le righe definite come "cancellate"
            dalla coppia di tabelle presenti sui due server.
            </summary>
            <param name="_cmd">Comando sql</param>
            <param name="_serverName">Nome del server su cui eseguire il comando</param>        
            <param name="_lastSyncTime">Istante dell'ultima sincronizzazione</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Table.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.TableType">
            <summary>
            Tipi di tabella gestiti
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.TableType.OnEnable">
            <summary>
            OnEnable
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.TableType.OnStart">
            <summary>
            OnStart
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.TableType.History">
            <summary>
            History
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.TableType.NoRedundant">
            <summary>
            NoRedundant
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.TimeOutServerInfoException">
            <summary>
            Eccezione di TimeOut per connessione al server
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.TimeOutServerInfoException.errorMessage">
            <summary>
            Messaggio di errore
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.TimeOutServerInfoException.#ctor(System.String)">
            <summary>
            Costruttore
            </summary>
            <param name="_message"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.UpdateDataRow">
            <summary>
            Rappresenta una riga di tabella che deve essere aggiornata.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.UpdateDataRow.columnsNameToUpdate">
            <summary>
            Elenco delle colonne oggetto dell'aggiornamento
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.UpdateDataRow.newValues">
            <summary>
            Elenco dei nuovi valori
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.UpdateDataRow.columnsNameCondition">
            <summary>
            Elenco delle colonne presenti nella condizione di "where" 
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.UpdateDataRow.valuesCondition">
            <summary>
            Elenco dei valori presenti nella condizione di "where"
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.UpdateDataRow.comparisonOperator">
            <summary>
            Elenco degli operatori di confronto presenti nella condizione di "where"
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.UpdateDataRow.logicalOperator">
            <summary>
            Elenco degli operatori logici presenti nella condizione di "where"
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.UpdateDataRow.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Costruttore
            </summary>
            <param name="_dbName">Nome del database</param>
            <param name="_schema">Nome dello schema</param>
            <param name="_tableName">Nome della tabella</param>
            <param name="_columnsNameToUpdate">Elenco delle colonne oggetto dell'aggiornamento</param>
            <param name="_newValues">Elenco dei nuovi valori</param>
            <param name="_columnsNameCondition">Elenco delle colonne presenti nella condizione di "where" </param>
            <param name="_valuesCondition">Elenco dei nuovi valori</param>
            <param name="_comparisonOperator">Elenco degli operatori di confronto presenti nella condizione di "where"</param>
            <param name="_logicalOperator">Elenco degli operatori logici presenti nella condizione di "where"</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.View">
            <summary>
            Rappresenta una vista su una tabella
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.View.Name">
            <summary>
            Nome della tabella
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.View.Schema">
            <summary>
            Schema al quale la tabella appartiene
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.View.Db">
            <summary>
            Nome del database al quale la tabella appartiene.
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.View.CompleteName">
            <summary>
            Nome completo della tabella: 
            "DbName.SchemaName.TableName".
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.View.allColumns">
            <summary>
            Elenco di tutte le colonne presenti nella vista
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.View.isDeletedColumnName">
            <summary>
            Nome della colonna che indica che una riga è cancellata
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.View.#ctor(WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.Database,System.String,System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Costruttore
            </summary>
            <param name="_db">Nome del database</param>
            <param name="_schema">Nome dello schema</param>
            <param name="_name">Nome della vista</param>
            <param name="_allColumns">Elenco di tutte le colonne presenti nella vista</param>
            <param name="_isDeletedColumnName">Nome della colonna che indica che una riga è cancellata</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.CommandToTables.CommandToTables">
            <summary>
            Gestisce le operazioni di aggiornamento e select
            di dati presenti su tabelle di database ridondati
            o no.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.CommandToTables.CommandToTables.#ctor(WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConfigurationInfo,System.Int32,System.Boolean)">
            <summary>
            Permette di eseguire operazioni sul database.
            </summary>
            <param name="_configData">Inforamzioni di configurazione</param>
            <param name="_capacityQueue">Numero massimo di elementi gestiti dalla coda.</param>
            <param name="_pooling">Abilita o disabilita il pooling</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.CommandToTables.CommandToTables.Insert(WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.InsertDataRow)">
            <summary>
            Inserisce la riga _row nella tabella.
            </summary>
            <param name="_row">Riga da inserire nella tabella.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.CommandToTables.CommandToTables.Insert(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object})">
            <summary>
            Inserisce una riga nella tabella.
            </summary>
            <param name="_dbName">Nome database.</param>
            <param name="_schema">Schema di apparteneza della tabella.</param>
            <param name="_tableName">Nome tabella.</param>
            <param name="_columnsNameList">Elenco delle colonne oggetto della insert.</param>
            <param name="_values">Valori da inserire.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.CommandToTables.CommandToTables.InsertSync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object})">
            <summary>
            Inserisce una riga nella tabella in modo sincrono
            </summary>
            <param name="_dbName">Nome database.</param>
            <param name="_schema">Schema di apparteneza della tabella.</param>
            <param name="_tableName">Nome tabella.</param>
            <param name="_columnsNameList">Elenco delle colonne oggetto della insert.</param>
            <param name="_values">Valori da inserire.</param>
            <returns>True in caso di esito positivo, False altrimenti</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.CommandToTables.CommandToTables.Update(WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.UpdateDataRow)">
            <summary>
            Aggiorna i valori della riga _row.
            </summary>
            <param name="_row">Riga da aggiornare.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.CommandToTables.CommandToTables.Update(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Esegue l'update di una riga.
            </summary>
            <param name="_dbName">Nome database</param>
            <param name="_schema">Nome schema</param>
            <param name="_tableName">Nome tabella</param>
            <param name="_columnsNameToUpdate">Elenco delle colonne da aggiornare</param>
            <param name="_newvalues">Elenco dei nuovi valori.</param>
            <param name="_columnsNameCondition">Elenco delle colonne da inserire
            nella Where</param>
            <param name="_valuesCondition">Elenco dei valori da inserire nella Where</param>
            <param name="_comparisonOperator">Elenco degli operatori di confronto 
            da utilizzare nella Where</param>
            <param name="_logicalOperator">Elenco degli operatori logici da inserire nella Where</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.CommandToTables.CommandToTables.UpdateSync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Esegue l'update di una riga in modo sincrono
            </summary>
            <param name="_dbName">Nome database</param>
            <param name="_schema">Nome schema</param>
            <param name="_tableName">Nome tabella</param>
            <param name="_columnsNameToUpdate">Elenco delle colonne da aggiornare</param>
            <param name="_newvalues">Elenco dei nuovi valori.</param>
            <param name="_columnsNameCondition">Elenco delle colonne da inserire
            nella Where</param>
            <param name="_valuesCondition">Elenco dei valori da inserire nella Where</param>
            <param name="_comparisonOperator">Elenco degli operatori di confronto 
            da utilizzare nella Where</param>
            <param name="_logicalOperator">Elenco degli operatori logici da inserire nella Where</param>
            <returns> True in caso di esito positivo, False altrimenti</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.CommandToTables.CommandToTables.Delete(WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.DeleteDataRow)">
            <summary>
            Cancella, logicamente, la riga _row dalla tabella.
            </summary>
            <param name="_row">Riga da cancellare.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.CommandToTables.CommandToTables.Delete(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Elimina, logicamente, una riga dalla tabella.
            </summary>
            <param name="_dbName">Nome database.</param>
            <param name="_schema">Schema di appartenenza della tabella.</param>
            <param name="_tableName">Nome tabella.</param>
            <param name="_columnsNameCondition">Elenco dei nomi delle colonne 
            da utlizzare per la condizione di "where".</param>
            <param name="_valuesCondition">Elenco dei valori per creare la "where".</param>
            <param name="_comparisonOperator"> Elenco degli operatori di confronto per creare la "where"</param>
            <param name="_logicalOperator">Elenco degli operatori logici per creare la condizione di "where"</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.CommandToTables.CommandToTables.DeleteSync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Elimina, logicamente, una riga dalla tabella in modo sincrono
            </summary>
            <param name="_dbName">Nome database.</param>
            <param name="_schema">Schema di appartenenza della tabella.</param>
            <param name="_tableName">Nome tabella.</param>
            <param name="_columnsNameCondition">Elenco dei nomi delle colonne 
            da utlizzare per la condizione di "where".</param>
            <param name="_valuesCondition">Elenco dei valori per creare la "where".</param>
            <param name="_comparisonOperator"> Elenco degli operatori di confronto per creare la "where"</param>
            <param name="_logicalOperator">Elenco degli operatori logici per creare la condizione di "where"</param>
            <returns>True in caso di esito positivo, False altrimenti</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.CommandToTables.CommandToTables.Select(WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.SelectDataRow)">
            <summary>
            Restituisce i valori della tabella _row.tableName.
            </summary>
            <param name="_row">Indica la tabella da dui estrarre i valori,
            le colonne e la condizione del filtro.</param>
            <returns>Valori della tabella.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.CommandToTables.CommandToTables.Select(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Estrae righe dalla tabella.
            </summary>
            <param name="_dbName">Nome del database.</param>
            <param name="_schema">Schema di appartenenza della tabella.</param>
            <param name="_tableName">Nome della tabella.</param>
            <param name="_columnsNameToSelect">Elenco delle colonne oggetto della "select".</param>
            <param name="_columnsNameCondition">Elenco dei nomi delle colonne 
            da utlizzare per la condizione di "where".</param>
            <param name="_valuesCondition">Elenco dei valori per creare la "where".</param>
            <param name="_comparisonOperator">Elenco degli operatori di confronto da inserire
            nella condizione di Where.</param>
            <param name="_logicalOperator">Elenco delgi operatori logici da inserire
            nella condizione di Where.</param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.CommandToTables.CommandToTables.Select(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Consente la lettura di una tabella
            </summary>
            <param name="_dbName">Nome del Database</param>
            <param name="_schema">Nome del gestore del database</param>
            <param name="_tableName">Nome della tabella</param>
            <param name="_columnsNameToSelect">Elenco delle colonne da Selezionare</param>
            <param name="_columnsNameCondition">Elenco dei nomi delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_columnsType">Elenco dei tipi delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_valuesCondition">Elenco dei valori delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_comparisonOperator">Elenco delle operazioni di comparazione tra la condizione ed il valore</param>
            <param name="_logicalOperator">Elenco delle operazioni logiche tra condizioni</param>        
            <returns>Dati letti</returns>    
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.CommandToTables.CommandToTables.Select(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum},System.Int32,System.Collections.Generic.List{WB.IIIParty.Commons.Data.OrderClause})">
            <summary>
            Consente la lettura di una tabella
            </summary>
            <param name="_dbName">Nome del Database</param>
            <param name="_schema">Nome del gestore del database</param>
            <param name="_tableName">Nome della tabella</param>
            <param name="_columnsNameToSelect">Elenco delle colonne da Selezionare</param>
            <param name="_columnsNameCondition">Elenco dei nomi delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_columnsType">Elenco dei tipi delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_valuesCondition">Elenco dei valori delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_comparisonOperator">Elenco delle operazioni di comparazione tra la condizione ed il valore</param>
            <param name="_logicalOperator">Elenco delle operazioni logiche tra condizioni</param>  
            <param name="_n">Numero di righe per la clausola TOP</param>
            <param name="_clause">Clausola ORDER BY</param>
            <returns>Dati letti</returns>    
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.CommandToTables.CommandToTables.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.Sql.SyncTables.SyncTables">
            <summary>
            Gestisce la sincronizzazione di tabelle.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTables.SyncTables.periodic">
            <summary>
            TRUE se il processo di sincronizzazione è periodico, FALSE altrimenti
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTables.SyncTables.enable">
            <summary>
            TRUE se il processo di sincronizzazione è attivo, FALSE altrimenti
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTables.SyncTables.configData">
            <summary>
            Dati di configurazione.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.Sql.SyncTables.SyncTables.tableList">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTables.SyncTables.#ctor(System.Boolean,System.Boolean,WB.IIIParty.Commons.Data.Sql.SyncTablesCommons.ConfigurationInfo)">
            <summary>
            Costruttore
            </summary>
            <param name="_periodic">TRUE se il processo di sincronizzazione è periodico, FALSE altrimenti</param>
            <param name="_enable">TRUE se il processo di sincronizzazione è attivo, FALSE altrimenti</param>
            <param name="_configData">Dati di configurazione</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTables.SyncTables.SynchronizeTables">
            <summary>
            Abilita il processo di sincronizzazione
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.Sql.SyncTables.SyncTables.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.OrderClause">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.OrderClause.ColumnName">
            <summary>
            Nome della colonna su cui fare l'ordinamento
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.OrderClause.Direction">
            <summary>
            Direzione dell'ordinamento
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.DirectionEnum">
            <summary>
            Enumera le direzioni possibili della clausola ORDER BY
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.DirectionEnum.DESC">
            <summary>
            Discendente
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.DirectionEnum.ASC">
            <summary>
            Ascendente
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.ComparisonOperatorEnum">
            <summary>
            Enumera un elenco di operatori di comparazione
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.ComparisonOperatorEnum.Equals">
            <summary>
            Uguale
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.ComparisonOperatorEnum.Greater">
            <summary>
            Maggiore
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.ComparisonOperatorEnum.Less">
            <summary>
            Minore
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.ComparisonOperatorEnum.GreaterEqual">
            <summary>
            Maggiore uguale
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.ComparisonOperatorEnum.LessEqual">
            <summary>
            Minore uguale
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.ComparisonOperatorEnum.NotEqual">
            <summary>
            Diverso
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.ComparisonOperatorEnum.Is">
            <summary>
            Is [null]
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.ComparisonOperatorEnum.NotIs">
            <summary>
            Not is [null]
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.LogicalOperatorEnum">
            <summary>
            Enumera un elenco di operatori logici
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.LogicalOperatorEnum.AND">
            <summary>
            And 
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.LogicalOperatorEnum.OR">
            <summary>
            Or
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Data.LogicalOperatorEnum.NONE">
            <summary>
            Nessun Operatore
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Data.ICommandToTable">
            <summary>
            Definisce l'interfaccia delle operazioni eseguibili su una tabella generica
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.ICommandToTable.Insert(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object})">
            <summary>
            Inserisce una riga su una taballa in un database
            </summary>
            <param name="_dbName">Nome del Database</param>
            <param name="_schema">Nome del gestore del database</param>
            <param name="_tableName">Nome della tabella</param>
            <param name="_columnsNameList">Lista dei Nomi delle colonne</param>
            <param name="_values">Lista dei valori</param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.ICommandToTable.InsertSync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object})">
            <summary>
            Inserisce una riga nella tabella in modo sincrono
            </summary>
            <param name="_dbName">Nome database.</param>
            <param name="_schema">Schema di apparteneza della tabella.</param>
            <param name="_tableName">Nome tabella.</param>
            <param name="_columnsNameList">Elenco delle colonne oggetto della insert.</param>
            <param name="_values">Valori da inserire.</param>
            <returns>True in caso di esito positivo, False altrimenti</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.ICommandToTable.Update(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Consente la modifica di valori di una riga esistente in una tabella in un database
            </summary>
            <param name="_dbName">Nome del Database</param>
            <param name="_schema">Nome del gestore del database</param>
            <param name="_tableName">Nome della tabella</param>
            <param name="_columnsNameToUpdate">Elenco dei nomi delle colonne della tabella che devono essere aggiornate</param>
            <param name="_newvalues">Elenco nuovi valori</param>
            <param name="_columnsNameCondition">Elenco dei nomi delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione UPDATE</param>
            <param name="_valuesCondition">Elenco dei valori delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione UPDATE</param>
            <param name="_comparisonOperator">Elenco delle operazioni di comparazione tra la condizione ed il valore</param>
            <param name="_logicalOperator">Elenco delle operazioni logiche tra condizioni</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.ICommandToTable.UpdateSync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Esegue l'update di una riga in modo sincrono
            </summary>
            <param name="_dbName">Nome database</param>
            <param name="_schema">Nome schema</param>
            <param name="_tableName">Nome tabella</param>
            <param name="_columnsNameToUpdate">Elenco delle colonne da aggiornare</param>
            <param name="_newvalues">Elenco dei nuovi valori.</param>
            <param name="_columnsNameCondition">Elenco delle colonne da inserire
            nella Where</param>
            <param name="_valuesCondition">Elenco dei valori da inserire nella Where</param>
            <param name="_comparisonOperator">Elenco degli operatori di confronto 
            da utilizzare nella Where</param>
            <param name="_logicalOperator">Elenco degli operatori logici da inserire nella Where</param>
            <returns> True in caso di esito positivo, False altrimenti</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.ICommandToTable.Delete(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Consente la cancellazione di righe da una tabella in un database
            </summary>
            <param name="_dbName">Nome del Database</param>
            <param name="_schema">Nome del gestore del database</param>
            <param name="_tableName">Nome della tabella</param>
            <param name="_columnsNameCondition">Elenco dei nomi delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione DELETE</param>
            <param name="_valuesCondition">Elenco dei valori delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione DELETE</param>
            <param name="_comparisonOperator">Elenco delle operazioni di comparazione tra la condizione ed il valore</param>
            <param name="_logicalOperator">Elenco delle operazioni logiche tra condizioni</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.ICommandToTable.DeleteSync(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Elimina, logicamente, una riga dalla tabella in modo sincrono
            </summary>
            <param name="_dbName">Nome database.</param>
            <param name="_schema">Schema di appartenenza della tabella.</param>
            <param name="_tableName">Nome tabella.</param>
            <param name="_columnsNameCondition">Elenco dei nomi delle colonne 
            da utlizzare per la condizione di "where".</param>
            <param name="_valuesCondition">Elenco dei valori per creare la "where".</param>
            <param name="_comparisonOperator"> Elenco degli operatori di confronto per creare la "where"</param>
            <param name="_logicalOperator">Elenco degli operatori logici per creare la condizione di "where"</param>
            <returns>True in caso di esito positivo, False altrimenti</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Data.ICommandToTable.Select(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Consente la lettura di una tabella
            </summary>
            <param name="_dbName">Nome del Database</param>
            <param name="_schema">Nome del gestore del database</param>
            <param name="_tableName">Nome della tabella</param>
            <param name="_columnsNameToSelect">Elenco delle colonne da Selezionare</param>
            <param name="_columnsNameCondition">Elenco dei nomi delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_columnsType">Elenco dei tipi delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_valuesCondition">Elenco dei valori delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_comparisonOperator">Elenco delle operazioni di comparazione tra la condizione ed il valore</param>
            <param name="_logicalOperator">Elenco delle operazioni logiche tra condizioni</param>        
            <returns>Dati letti</returns>    
        </member>
        <member name="M:WB.IIIParty.Commons.Data.ICommandToTable.Select(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum})">
            <summary>
            Consente la lettura di una tabella
            </summary>
            <param name="_dbName">Nome del Database</param>
            <param name="_schema">Nome del gestore del database</param>
            <param name="_tableName">Nome della tabella</param>
            <param name="_columnsNameToSelect">Elenco delle colonne da Selezionare</param>
            <param name="_columnsNameCondition">Elenco dei nomi delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_valuesCondition">Elenco dei valori delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_comparisonOperator">Elenco delle operazioni di comparazione tra la condizione ed il valore</param>
            <param name="_logicalOperator">Elenco delle operazioni logiche tra condizioni</param>        
            <returns>Dati letti</returns>    
        </member>
        <member name="M:WB.IIIParty.Commons.Data.ICommandToTable.Select(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{WB.IIIParty.Commons.Data.ComparisonOperatorEnum},System.Collections.Generic.List{WB.IIIParty.Commons.Data.LogicalOperatorEnum},System.Int32,System.Collections.Generic.List{WB.IIIParty.Commons.Data.OrderClause})">
            <summary>
            Consente la lettura di una tabella
            </summary>
            <param name="_dbName">Nome del Database</param>
            <param name="_schema">Nome del gestore del database</param>
            <param name="_tableName">Nome della tabella</param>
            <param name="_columnsNameToSelect">Elenco delle colonne da Selezionare</param>
            <param name="_columnsNameCondition">Elenco dei nomi delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_columnsType">Elenco dei tipi delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_valuesCondition">Elenco dei valori delle colonne da utilizzare per costruire le condizioni di WHERE dell'istruzione SELECT</param>
            <param name="_comparisonOperator">Elenco delle operazioni di comparazione tra la condizione ed il valore</param>
            <param name="_logicalOperator">Elenco delle operazioni logiche tra condizioni</param>
            <param name="_n">Numero di righe per la clausola TOP (0 se non c'è la clausola TOP)</param>
            <param name="_clause">Elenco dei campi per la clausola ORDER BY</param>
            <returns>Dati letti</returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Sql.DbFileStore">
            <summary>
            Consente l'import e l'esport di file sulla tabella FileStore
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Sql.DbFileStore.ImportFile(System.String,System.String,System.Boolean)">
            <summary>
            Importa il file nella tabella FileStore
            </summary>
            <param name="filePath">Path e FileName di input</param>
            <param name="connectionString">Stringa di Connessione al database</param>
            <param name="useCompression">Utilizza compressione GZipStream</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Sql.DbFileStore.ExportFile(System.String,System.String,System.String)">
            <summary>
            Esporta il file dalla tabella FileStore
            </summary>
            <param name="fileName">Nome del file su FileStore</param>
            <param name="destFilePath">Path e FileName di output</param>
            <param name="connectionString">Stringa di Connessione al database</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Sql.DbFileStore.RemoveFile(System.String,System.String)">
            <summary>
            Rimuove un file dal FileStore
            </summary>
            <param name="fileName">Nome del file da eliminare</param>
            <param name="connectionString">Stringa di Connessione al database</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Sql.DbFileStore.Clear(System.String)">
            <summary>
            Cancella tutti i files sul FileStore
            </summary>
            <param name="connectionString">Stringa di Connessione al database</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Sql.LoggerToFile">
            <summary>
            Log su fle di testo
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Sql.LoggerToFile.LoggerToFile_singleton">
            <summary>
            Restituisce un puntatore al file di log
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Sql.LoggerToFile.#ctor">
            <summary>
            Costruttore
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Sql.LoggerToFile.GetLogger">
            <summary>
            Restiutisce il logger
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Sql.LoggerToFile.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Globalization.LanguageManager_v2">
            <summary>
            Consente la gestione di testi multilingua
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Globalization.LanguageManager_v2.DefaultLanguage">
            <summary>
            
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Globalization.LanguageManager_v2.CurrentLanguageChanged">
            <summary>
            Notifica della variazione della lingua corrente
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Globalization.LanguageManager_v2.BeforeCurrentLanguageChanged">
            <summary>
            Notifica della variazione della lingua corrente
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Globalization.LanguageManager_v2.AfterCurrentLanguageChanged">
            <summary>
            Notifica della variazione della lingua corrente
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Globalization.LanguageManager_v2.Instance">
            <summary>
            Istanza di LanguageManager
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager_v2.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager_v2.#ctor(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager_v2.Load(System.String)">
            <summary>
            Carica il file xml di configurazione specificato
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager_v2.Translate(System.String)">
            <summary>
            Ritorna il testo tradotto nella lingua corrente
            </summary>
            <param name="text">Testo da tradurre</param>
            <returns>testo tradotto</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager_v2.TranslateToText(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager_v2.Translate(System.String,System.String)">
            <summary>
            Ritorna il testo tradotto nella lingua specificata
            </summary>
            <param name="text">Testo da tradurre</param>
            <param name="language">Lingua specifica</param>
            <returns>testo tradotto</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager_v2.Add(WB.IIIParty.Commons.Globalization.LanguageManager.Text)">
            <summary>
            Aggiunge un testo con la relativa traduzione
            </summary>
            <param name="text"></param>
        </member>
        <member name="P:WB.IIIParty.Commons.Globalization.LanguageManager_v2.CurrentLanguage">
            <summary>
            Imposta o ritorna la lingua corrente
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager_v2.ReloadKeyboardLanguage">
            <summary>
            Ricarica la lingua corrente alla tastiera
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Globalization.LanguageManager_v2.CurrentKeyboardLanguage">
            <summary>
            Imposta o ritorna la tastiera corrente
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Globalization.LanguageManager_v2.RightToLeft">
            <summary>
            Ritorna l'orientamento della lingua
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager_v2.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager_v2.SetLanguage(System.String)">
            <summary>
            Aggiorna la lingua corrente su chiave di registro
            </summary>
            <param name="language"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager_v2.GetText(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Globalization.ILanguageManager">
            <summary>
            Consente la gestione di testi multilingua
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Globalization.ILanguageManager.CurrentLanguageChanged">
            <summary>
            Notifica della variazione della lingua corrente
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Globalization.ILanguageManager.BeforeCurrentLanguageChanged">
            <summary>
            Notifica della variazione della lingua corrente
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Globalization.ILanguageManager.AfterCurrentLanguageChanged">
            <summary>
            Notifica della variazione della lingua corrente
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.ILanguageManager.Load(System.String)">
            <summary>
            Carica le traduzioni da un file di configurazione
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.ILanguageManager.Translate(System.String)">
            <summary>
            Ritorna il testo tradotto nella lingua corrente
            </summary>
            <param name="text">Testo da tradurre</param>
            <returns>testo tradotto</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.ILanguageManager.TranslateToText(System.String)">
            <summary>
            Ritorna il testo tradotto nella lingua corrente
            </summary>
            <param name="text">Testo da tradurre</param>
            <returns>testo tradotto</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.ILanguageManager.GetText(System.String)">
            <summary>
            Ritorna tutte le informazioni di traduzione del testo di input
            </summary>
            <param name="text">Testo di ricerca</param>
            <returns>Traduzione completa</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.ILanguageManager.Translate(System.String,System.String)">
            <summary>
            Ritorna il testo tradotto nella lingua specificata
            </summary>
            <param name="text">Testo da tradurre</param>
            <param name="language">Lingua specifica</param>
            <returns>testo tradotto</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.ILanguageManager.Add(WB.IIIParty.Commons.Globalization.LanguageManager.Text)">
            <summary>
            Aggiunge un testo con la relativa traduzione
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.ILanguageManager.SetLanguage(System.String)">
            <summary>
            Aggiorna la lingua corrente su chiave di registro
            </summary>
            <param name="??"></param>
        </member>
        <member name="P:WB.IIIParty.Commons.Globalization.ILanguageManager.CurrentLanguage">
            <summary>
            Imposta o ritorna la lingua corrente
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Globalization.ILanguageManager.RightToLeft">
            <summary>
            Ritorna l'orientamento della lingua
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Globalization.LanguageManager">
            <summary>
            Consente la gestione di testi multilingua
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Globalization.LanguageManager.DefaultLanguage">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Globalization.LanguageManager.TextTranslated">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Globalization.LanguageManager.TextTranslated.language">
            <summary>
            Identificativo lingua
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Globalization.LanguageManager.TextTranslated.text">
            <summary>
            Testo tradotto
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Globalization.LanguageManager.TextTranslated.abbreviatedtext">
            <summary>
            Testo tradotto in versione contratta
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Globalization.LanguageManager.TextDefault">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Globalization.LanguageManager.TextDefault.id">
            <summary>
            Testo identifier
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Globalization.LanguageManager.TextDefault.text">
            <summary>
            Testo default
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Globalization.LanguageManager.TextDefault.abbreviatedtext">
            <summary>
            Testo default in versione contratta
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Globalization.LanguageManager.Text">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Globalization.LanguageManager.Text.Default">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Globalization.LanguageManager.Text.Languages">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Globalization.LanguageManager.dCurrentLanguageChanged">
            <summary>
            Delega la notifica della variazione della lingua corrente
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Globalization.LanguageManager.CurrentLanguageChanged">
            <summary>
            Notifica della variazione della lingua corrente
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Globalization.LanguageManager.dBeforeCurrentLanguageChanged">
            <summary>
            Delega la notifica della variazione della lingua corrente
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Globalization.LanguageManager.BeforeCurrentLanguageChanged">
            <summary>
            Notifica della variazione della lingua corrente
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Globalization.LanguageManager.dAfterCurrentLanguageChanged">
            <summary>
            Delega la notifica della variazione della lingua corrente
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Globalization.LanguageManager.AfterCurrentLanguageChanged">
            <summary>
            Notifica della variazione della lingua corrente
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Globalization.LanguageManager.Instance">
            <summary>
            Istanza di LanguageManager
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager.#ctor(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager.Load(System.String)">
            <summary>
            Carica il file xml di configurazione specificato
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager.Translate(System.String)">
            <summary>
            Ritorna il testo tradotto nella lingua corrente
            </summary>
            <param name="text">Testo da tradurre</param>
            <returns>testo tradotto</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager.TranslateToText(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager.Translate(System.String,System.String)">
            <summary>
            Ritorna il testo tradotto nella lingua specificata
            </summary>
            <param name="text">Testo da tradurre</param>
            <param name="language">Lingua specifica</param>
            <returns>testo tradotto</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager.Add(WB.IIIParty.Commons.Globalization.LanguageManager.Text)">
            <summary>
            Aggiunge un testo con la relativa traduzione
            </summary>
            <param name="text"></param>
        </member>
        <member name="P:WB.IIIParty.Commons.Globalization.LanguageManager.CurrentLanguage">
            <summary>
            Imposta o ritorna la lingua corrente
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager.ReloadKeyboardLanguage">
            <summary>
            Ricarica la lingua corrente alla tastiera
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Globalization.LanguageManager.CurrentKeyboardLanguage">
            <summary>
            Imposta o ritorna la tastiera corrente
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Globalization.LanguageManager.RightToLeft">
            <summary>
            Ritorna l'orientamento della lingua
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager.SetLanguage(System.String)">
            <summary>
            Aggiorna la lingua corrente su chiave di registro
            </summary>
            <param name="language"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Globalization.LanguageManager.GetText(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.ILoggerConfig">
            <summary>
            Interfaccia generica di Log di Debug
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Logger.ILoggerConfig.Name">
            <summary>
            Nome del logger.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.ILoggerConfig.Create">
            <summary>
            Implementa l'interfaccia per creare un instanza dell'oggetto logger.
            </summary>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.RegistryKeyChanged">
            <summary>
            Summary description for RegistryKeyChanged.
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.RegistryKeyChanged.dKEyValues">
            <summary>
            Delegato stato Key.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.RegistryKeyChanged.#ctor(System.String)">
            <summary>
            Costruttore.
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.RegistryKeyChanged.AddNotify(WB.IIIParty.Commons.Logger.RegistryKeyChanged.dKEyValues)">
            <summary>
            Attiva controllo stato chiave.
            </summary>
            <param name="deleg"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.RegistryKeyChanged.RemoveNotify(WB.IIIParty.Commons.Logger.RegistryKeyChanged.dKEyValues)">
            <summary>
            Disattiva controllo stato chiave.
            </summary>
            <param name="deleg"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.RegistryKeyChanged.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.SqlBaseLogger">
            <summary>
            Classe base per la creazione del logger
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.SqlBaseLogger.columnsNameList">
            <summary>
            Lista dei nomi delle colonne
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.SqlBaseLogger.database">
            <summary>
            Nome database
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.SqlBaseLogger.userName">
            <summary>
            Utente database
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.SqlBaseLogger.password">
            <summary>
            Password database
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.SqlBaseLogger.tableName">
            <summary>
            Nome Tabella database
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.SqlBaseLogger.schema">
            <summary>
            Nome schema database
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.SqlBaseLogger.logLevelFilter">
            <summary>
            Livello di loglevel per filtri
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.SqlBaseLogger.commandToTable">
            <summary>
            CommandToTable per la insert dei log
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.SqlBaseLogger.thisLock">
            <summary>
            Oggetto utlizzato per il controllo delle lock
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.SqlBaseLogger.registryKeyChanged">
            <summary>
            Oggetto per il controolo delle chiavi di registro e loro stato di cambiamento.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlBaseLogger.#ctor(System.String,WB.IIIParty.Commons.Logger.LogLevels,WB.IIIParty.Commons.Logger.SqlBaseLoggerConfig,System.Boolean)">
            <summary>
            Costruttore.
            </summary>
            <param name="_name">Nome del logger</param>
            <param name="_initialLevel">Livello iniziale del logger</param>
            <param name="_config">Base Logger Config</param>
            <param name="_activeLogLevelFromRegistry">Base Logger Config</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlBaseLogger.Log(System.Collections.Generic.List{System.Object})">
            <summary>
            Inserisce un log di un flusso di dati
            </summary>
            <param name="_valueTable">Lista valori da passare per la insert</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlBaseLogger.SetLogLevelFromRegistryKey(System.Collections.Hashtable)">
            <summary>
            Riceve la notifica di cambiamento delle chiave di regsitro del LogLevel di un logger.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlBaseLogger.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.SqlBaseLoggerConfig">
            <summary>
            Oggetto base per la creazione dei logger config.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlBaseLoggerConfig.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,WB.IIIParty.Commons.Data.ICommandToTable)">
            <summary>
            Costruttore
            </summary>
            <param name="_loggerName">Nome del logger</param>
            <param name="_schema">Nome del gestore del database</param>
            <param name="_database">Database contenente la tabella di storicizzazione</param>
            <param name="_userName">Utente Sql</param>
            <param name="_password">Password dell'utente Sql</param>
            <param name="_tableName">Nome della tabella di storicizzazione</param>
            <param name="_commandToTable">Interfaccia di comunicazione con l'istanza Sql</param>
        </member>
        <member name="P:WB.IIIParty.Commons.Logger.SqlBaseLoggerConfig.CommandToTable">
            <summary>
            Ritorna l'interfaccia di comunicazione con l'istanza Sql
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Logger.SqlBaseLoggerConfig.Schema">
            <summary>
            Nome del gestore del database
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Logger.SqlBaseLoggerConfig.Database">
            <summary>
            Ritorna il nome del Database corrente
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Logger.SqlBaseLoggerConfig.UserName">
            <summary>
            Ritorna il nome utente Sql
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Logger.SqlBaseLoggerConfig.Password">
            <summary>
            Ritorna la password Sql
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Logger.SqlBaseLoggerConfig.TableName">
            <summary>
            Ritorna il nome della tabella di Log
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.SqlTraceLogger">
            <summary>
            Implementa un Logger su un database SqlServer con interfaccia ILog
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlTraceLogger.#ctor(System.String,WB.IIIParty.Commons.Logger.LogLevels,WB.IIIParty.Commons.Logger.SqlTraceLoggerConfig)">
            <summary>
            Costruttore SqlTraceLogger
            </summary>
            <param name="_name">Nome del logger</param>
            <param name="_initialLevel">Livello iniziale del logger</param>
            <param name="_config">SqlTraceLoggerConfig</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlTraceLogger.Log(System.String,System.String,System.Byte[],WB.IIIParty.Commons.Logger.TraceDirections,System.String,WB.IIIParty.Commons.Logger.PrintTypeByteArray)">
            <summary>
            Inserisce un log di un flusso di dati
            </summary>
            <param name="_currentDevice">Dispositivo locale</param>
            <param name="_remoteDevice">Dispositivo remoto</param>
            <param name="_data">Dati da storicizzare</param>
            <param name="_direction">Direzione dei dati rispetto al Dispositivo locale</param>
            <param name="_description">Descrizione aggiuntiva</param>
            <param name="_printTypeByteArray">Formattazione di stampa</param>        
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.SqlTraceLoggerConfig">
            <summary>
            Implementa un LoggerConfig per il logger SqlTraceLogger
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlTraceLoggerConfig.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,WB.IIIParty.Commons.Data.ICommandToTable)">
            <summary>
            Costruttore
            </summary>
            <param name="_loggerName">Nome del logger</param>
            <param name="_schema">Nome del gestore del database</param>
            <param name="_database">Database contenente la tabella di storicizzazione</param>
            <param name="_userName">Utente Sql</param>
            <param name="_password">Password dell'utente Sql</param>
            <param name="_tableName">Nome della tabella di storicizzazione</param>
            <param name="_commandToTable">Interfaccia di comunicazione con l'istanza Sql</param>
        </member>
        <member name="P:WB.IIIParty.Commons.Logger.SqlTraceLoggerConfig.WB#IIIParty#Commons#Logger#ILoggerConfig#Name">
            <summary>
            Nome del logger.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlTraceLoggerConfig.WB#IIIParty#Commons#Logger#ILoggerConfig#Create">
            <summary>
            Crea un'istanza di SqlLogger relativa al LoggerConfig corrente
            </summary>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.PrintTypeByteArray">
            <summary>
            Enumera le formattazioni di stampa
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.PrintTypeByteArray.Ascii">
            <summary>
            ASCII
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.PrintTypeByteArray.Hexadecimal">
            <summary>
            Esadecimale
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.PrintTypeByteArray.Decimal">
            <summary>
            Decimale senza segno
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.TraceDirections">
            <summary>
            Enumera le direzioni dei dati in uno stream
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.TraceDirections.Input">
            <summary>
            Dati in ingresso
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.TraceDirections.Output">
            <summary>
            Dati in uscita
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.ITraceLog">
            <summary>
            Interfaccia generica di Log di uno stream di dati
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.ITraceLog.Log(System.String,System.String,System.Byte[],WB.IIIParty.Commons.Logger.TraceDirections,System.String,WB.IIIParty.Commons.Logger.PrintTypeByteArray)">
            <summary>
            Inserisce un log di un flusso di dati
            </summary>
            <param name="_currentDevice">Dispositivo locale</param>
            <param name="_remoteDevice">Dispositivo remoto</param>
            <param name="_data">Dati da storicizzare</param>
            <param name="_direction">Direzione dei dati rispetto al Dispositivo locale</param>
            <param name="_description">Descrizione aggiuntiva</param>
            <param name="_printTypeByteArray">Formattazione di stampa</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.SqlUserAccessLogger">
            <summary>
            Implementa un Logger su un database SqlServer con interfaccia ILog
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlUserAccessLogger.#ctor(System.String,WB.IIIParty.Commons.Logger.LogLevels,WB.IIIParty.Commons.Logger.SqlUserAccessLoggerConfig,System.Boolean)">
            <summary>
            Costruttore SqlTraceLogger
            </summary>
            <param name="_name">Nome del logger</param>
            <param name="_initialLevel">Livello iniziale del logger</param>
            <param name="_config">SqlTraceLoggerConfig</param>
            <param name="_activeLogLevelFromRegistry">Abilita la possibilità di modificare il livello di log da registro</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlUserAccessLogger.Log(System.String,System.Int32,System.String,System.String,WB.IIIParty.Commons.Logger.UserAccessResults)">
            <summary>
            
            </summary>
            <param name="userName"></param>
            <param name="group"></param>
            <param name="workstationInfo"></param>
            <param name="applicationInfo"></param>
            <param name="result"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlUserAccessLogger.Log(System.String,System.String,System.String,System.String,WB.IIIParty.Commons.Logger.UserAccessResults)">
            <summary>
            
            </summary>
            <param name="userName"></param>
            <param name="group"></param>
            <param name="workstationInfo"></param>
            <param name="applicationInfo"></param>
            <param name="result"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.SqlUserAccessLoggerConfig">
            <summary>
            Implementa un LoggerConfig per il logger SqlLogger
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlUserAccessLoggerConfig.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,WB.IIIParty.Commons.Data.ICommandToTable)">
            <summary>
            Costruttore
            </summary>
            <param name="_loggerName">Nome del logger</param>
            <param name="_schema">Nome del gestore del database</param>
            <param name="_database">Database contenente la tabella di storicizzazione</param>
            <param name="_userName">Utente Sql</param>
            <param name="_password">Password dell'utente Sql</param>
            <param name="_tableName">Nome della tabella di storicizzazione</param>
            <param name="_commandToTable">Interfaccia di comunicazione con l'istanza Sql</param>
        </member>
        <member name="P:WB.IIIParty.Commons.Logger.SqlUserAccessLoggerConfig.WB#IIIParty#Commons#Logger#ILoggerConfig#Name">
            <summary>
            Nome del logger.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlUserAccessLoggerConfig.Create">
            <summary>
            Crea un'istanza di SqlLogger relativa al LoggerConfig corrente
            </summary>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.UserAccessResults">
            <summary>
            Enumera gli esiti di autenticazione
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.UserAccessResults.LogInOk">
            <summary>
            LogIn eseguito
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.UserAccessResults.LogInException">
            <summary>
            Errore non specificato durante l'autenticazione
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.UserAccessResults.LogInUserError">
            <summary>
            Utente errato
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.UserAccessResults.LogInPasswordError">
            <summary>
            Password errata
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.UserAccessResults.LogInUserAlreadyLogger">
            <summary>
            Utente già loggato al sistema
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.UserAccessResults.LogInAdministratorAlreadyLogged">
            <summary>
            Un altro amministratore già loggato al sistema
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.UserAccessResults.LogOutOk">
            <summary>
            LogOut eseguito
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.UserAccessResults.LogOutException">
            <summary>
            Errore non specificato durante l'autenticazione
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.IUserAccessLog">
            <summary>
            Interfaccia generica di Log dell'esito di autenticazione utente
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.IUserAccessLog.Log(System.String,System.Int32,System.String,System.String,WB.IIIParty.Commons.Logger.UserAccessResults)">
            <summary>
            Inserisce un log di esito di una autenticazione utente
            </summary>
            <param name="userName">Nome utente</param>
            <param name="group">Gruppo di appartenenza</param>
            <param name="workstationInfo">Postazione di accesso dell'operatore</param>
            <param name="applicationInfo"></param>
            <param name="result">Esito dell'operazione di autenticazione</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.IUserAccessLog.Log(System.String,System.String,System.String,System.String,WB.IIIParty.Commons.Logger.UserAccessResults)">
            <summary>
            Inserisce un log di esito di una autenticazione utente
            </summary>
            <param name="userName">Nome utente</param>
            <param name="group">Gruppo di appartenenza</param>
            <param name="workstationInfo">Postazione di accesso dell'operatore</param>
            <param name="applicationInfo"></param>
            <param name="result">Esito dell'operazione di autenticazione</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.LogLevels">
            <summary>
            Enumera i livelli di Log
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.LogLevels.Disabled">
            <summary>
            Log disabilitati
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.LogLevels.Error">
            <summary>
            Log di Errore
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.LogLevels.Warning">
            <summary>
            Log di Warning
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.LogLevels.Info">
            <summary>
            Log Informativi
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.LogLevels.Debug">
            <summary>
            Log di Debug
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Logger.LogLevels.Trace">
            <summary>
            Log Verbosi
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.CircularFileMessageLogger">
            <summary>
            Implementa un Logger su un file con interfaccia ILog
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.CircularFileMessageLogger.#ctor(WB.IIIParty.Commons.Logger.CircularFileMessageLoggerConfig)">
            <summary>
            Costruttore
            </summary>
            <param name="config">Configurazione</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.CircularFileMessageLogger.Log(WB.IIIParty.Commons.Logger.LogLevels,System.Object,System.String)">
            <summary>
             Inserisce un nuovo messaggio di Log
             </summary>
             <param name="level">Livello del log</param>
             <param name="caller">Oggetto chiamante</param>
             <param name="message">Messaggio di Log</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.CircularFileMessageLogger.Log(WB.IIIParty.Commons.Logger.LogLevels,System.String)">
            <summary>
            Inserisce un nuovo messaggio di Log
            </summary>
            <param name="level">Livello del log</param>
            <param name="message">Messaggio di Log</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.CircularFileMessageLogger.PrintLog(System.String,WB.IIIParty.Commons.Logger.LogLevels)">
            <summary>
            Stampo il messaggio di Log completo, sul file corretto (_A o _B).
            </summary>
            <param name="_messagePrint">Messaggio di Log</param>
            <param name="_level">Livello del log</param>
        </member>
        <member name="P:WB.IIIParty.Commons.Logger.CircularFileMessageLogger.LogLevel">
            <summary>
            Imposta o Ritorna il filtro del livello di log
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.CircularFileMessageLogger.CanLog(WB.IIIParty.Commons.Logger.LogLevels)">
            <summary>
            Ritorna se il livello di log specificato è abilitato
            </summary>
            <param name="level">Livello di Log</param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.CircularFileMessageLogger.Dispose">
            <summary>
            Libera le risorse
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.CircularFileMessageLoggerConfig">
            <summary>
            Implementa un LoggerConfig per il logger CircularFileLogger
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.CircularFileMessageLoggerConfig.#ctor(System.String,WB.IIIParty.Commons.Logger.LogLevels,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="_loggerName">Nome del logger</param>
            <param name="_initialLevel">Livello di filtro dei messaggi di Log</param>
            <param name="_fileName">Nome del file di Log</param>
            <param name="_fileSize">Dimensione massima del file di Log</param>
        </member>
        <member name="P:WB.IIIParty.Commons.Logger.CircularFileMessageLoggerConfig.FileName">
            <summary>
            Ritorna il path e il nome del file di log
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Logger.CircularFileMessageLoggerConfig.FileSize">
            <summary>
            Ritorna la dimensione max per i file di log
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.CircularFileMessageLoggerConfig.Create">
            <summary>
            Crea un'istanza di FileLogger relativa al LoggerConfig corrente
            </summary>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.SqlMessageLogger">
            <summary>
            Implementa un Logger su un database SqlServer con interfaccia ILog
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlMessageLogger.#ctor(System.String,WB.IIIParty.Commons.Logger.LogLevels,WB.IIIParty.Commons.Logger.SqlMessageLoggerConfig,System.Boolean)">
            <summary>
            Costruttore SqlTraceLogger
            </summary>
            <param name="_name">Nome del logger</param>
            <param name="_initialLevel">Livello iniziale del logger</param>
            <param name="_config">SqlMessageLoggerConfig</param>
            <param name="_activeLogLevelFromRegistry">Abilita la possibilità di modificare il livello di log da registro</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlMessageLogger.Log(WB.IIIParty.Commons.Logger.LogLevels,System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="level"></param>
            <param name="caller"></param>
            <param name="message"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlMessageLogger.Log(WB.IIIParty.Commons.Logger.LogLevels,System.String)">
            <summary>
            
            </summary>
            <param name="level"></param>
            <param name="message"></param>
        </member>
        <member name="P:WB.IIIParty.Commons.Logger.SqlMessageLogger.LogLevel">
            <summary>
            Livello di log.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlMessageLogger.CanLog(WB.IIIParty.Commons.Logger.LogLevels)">
            <summary>
            
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.IMessageLog">
            <summary>
            Interfaccia generica di Log di Debug
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.IMessageLog.Log(WB.IIIParty.Commons.Logger.LogLevels,System.Object,System.String)">
            <summary>
            Inserisce un messaggio di log
            </summary>
            <param name="level">Livello del log</param>
            <param name="caller">Oggetto chiamante la funzione di log</param>
            <param name="message">Messaggio di log</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.IMessageLog.Log(WB.IIIParty.Commons.Logger.LogLevels,System.String)">
            <summary>
            Inserisce un messaggio di log
            </summary>
            <param name="level">Livello del log</param>
            <param name="message">Messaggio di log</param>
        </member>
        <member name="P:WB.IIIParty.Commons.Logger.IMessageLog.LogLevel">
            <summary>
            Imposta o Ritorna il livello di Log corrente
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.IMessageLog.CanLog(WB.IIIParty.Commons.Logger.LogLevels)">
            <summary>
            Ritorna se il livello di log specificato è abilitato
            </summary>
            <param name="level">Livello di Log</param>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.LoggerConfig">
            <summary>
            Implementa la classe base di configurazione di un Logger
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.LoggerConfig.#ctor(System.String,WB.IIIParty.Commons.Logger.LogLevels)">
            <summary>
            Costruttore
            </summary>
            <param name="_name">Nome del logger</param>
            <param name="_initialLevel">Filtro iniziale del livello di log</param>
        </member>
        <member name="P:WB.IIIParty.Commons.Logger.LoggerConfig.Name">
            <summary>
            Ritorna il nome del logger
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Logger.LoggerConfig.InitialLevel">
            <summary>
            Ritorna il livello di filtro iniziale di Log
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.LoggerManager">
            <summary>
            Gestore statico di Logger
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.LoggerManager.DuplicateNameException">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.LoggerManager.DuplicateNameException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.LoggerManager.InvalidLoggerNameException">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.LoggerManager.InvalidLoggerNameException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.LoggerManager.InvalidLoggerInterfaceException">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.LoggerManager.InvalidLoggerInterfaceException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.LoggerManager.CreateLogger(WB.IIIParty.Commons.Logger.ILoggerConfig)">
            <summary>
            Crea il logger configurato
            </summary>
            <param name="info">Logger</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.LoggerManager.GetLogger``1(System.String)">
            <summary>
            Ritorna il logger con il nome specificato che implementa l'interfaccia definita
            </summary>
            <typeparam name="T">Interfaccia di Log</typeparam>
            <param name="name">Nome del Logger</param>
            <returns>Logger</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.LoggerManager.DestroyLogger(System.String)">
            <summary>
            Distruggo il logger
            </summary>
            <param name="loggerName"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.LoggerManager.Dispose">
            <summary>
            Esegue la Dispose su tutti i logger che implementano l'interfaccia IDisposable
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Logger.SqlMessageLoggerConfig">
            <summary>
            Implementa un LoggerConfig per il logger SqlLogger
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlMessageLoggerConfig.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,WB.IIIParty.Commons.Logger.LogLevels,WB.IIIParty.Commons.Data.ICommandToTable)">
            <summary>
            Costruttore
            </summary>
            <param name="_loggerName">Nome del logger</param>
            <param name="_schema">Nome del gestore del database</param>
            <param name="_database">Database contenente la tabella di storicizzazione</param>
            <param name="_userName">Utente Sql</param>
            <param name="_password">Password dell'utente Sql</param>
            <param name="_tableName">Nome della tabella di storicizzazione</param>
            <param name="_commandToTable">Interfaccia di comunicazione con l'istanza Sql</param>
            <param name="_logLevel">Filtro iniziale di log</param>
        </member>
        <member name="P:WB.IIIParty.Commons.Logger.SqlMessageLoggerConfig.WB#IIIParty#Commons#Logger#ILoggerConfig#Name">
            <summary>
            Nome del logger.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Logger.SqlMessageLoggerConfig.Create">
            <summary>
            Crea un'istanza di SqlLogger relativa al LoggerConfig corrente
            </summary>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Media.ISoundBeepLoop">
            <summary>
            nterfaccia per implementare gli avvisi sonori, con beep macchina o wave.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.ISoundBeepLoop.Play">
            <summary>
            Play avviso sonoro
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.ISoundBeepLoop.Stop">
            <summary>
            Stop avviso sonoro
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.ISoundBeepLoop.EnableAudio">
            <summary>
            Abilita audio avviso sonoro
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.ISoundBeepLoop.DisableAudio">
            <summary>
            Disabilita audio avviso sonoro
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.ISoundBeepLoop.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Media.ISoundBeepLoop.IsActive">
            <summary>
            Ritorna lo stato dell'audio attivo o disattivo (True/False)
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Media.SoundBeepLoopMemoryState">
            <summary>
            Oggetto per la creazione di un allarme sonoro con menmorizzazione del'ultimo stato di eseguzione.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Media.SoundBeepLoopMemoryState.fileName">
            <summary>
            Nome del file su cui memorizzare lo stato.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Media.SoundBeepLoopMemoryState.soundBeepLoop">
            <summary>
            Oggetto per la creazione di un allarme sonoro.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Media.SoundBeepLoopMemoryState.messageLog">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoopMemoryState.#ctor(System.Int32,System.TimeSpan,System.TimeSpan,System.String,WB.IIIParty.Commons.Logger.IMessageLog)">
            <summary>
            Costruttore.
            </summary>
            <param name="_frequencyBeep">Frequenza del suono.</param>
            <param name="_durationBeep">Tempo di durata di ogni singolo suono.</param>
            <param name="_delayBeep">Ripete il suono ogni n millisecondi.</param>
            <param name="_fileName">Nome del file senza estensione e path.</param>
            <param name="_messageLog">IMessageLog</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoopMemoryState.#ctor(System.String,WB.IIIParty.Commons.Logger.IMessageLog)">
            <summary>
            Costruttore. Frenquenza suono=600, durata=100, ripetuto ogni 3 sec.
            </summary>
            <param name="_fileName">Nome del file senza estensione e path.</param>
            <param name="_messageLog">IMessageLog</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoopMemoryState.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Media.SoundBeepLoop">
            <summary>
            Oggetto per la creazione di un allarme sonoro.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Media.SoundBeepLoop.frequencyBeep">
            <summary>
            Frequenza del suono.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Media.SoundBeepLoop.durationBeep">
            <summary>
            Tempo di durata di ogni singolo suono.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Media.SoundBeepLoop.delayBeep">
            <summary>
            Ripete il suono ogni n millisecondi.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Media.SoundBeepLoop.workerThread">
            <summary>
            Thread eseguzione del sound.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Media.SoundBeepLoop.isActive">
            <summary>
            Determina se il controllo ? abilitato o disabilitato per l'eseguzione.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoop.#ctor(System.Int32,System.TimeSpan,System.TimeSpan)">
            <summary>
            Costruttore
            </summary>
            <param name="_frequencyBeep">Frequenza del suono.</param>
            <param name="_durationBeep">Tempo di durata di ogni singolo suono.</param>
            <param name="_delayBeep">Ripete il suono ogni n millisecondi.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoop.#ctor">
            <summary>
            Costruttore. Frenquenza suono=600, durata=100, ripetuto ogni 3 sec.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoop.SoundLoop">
            <summary>
            Se in stato di play esegue il suono.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoop.Stop">
            <summary>
            Interrompe il suono
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoop.Play">
            <summary>
            Esegue il suono.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoop.Enable">
            <summary>
            Attiva il thread per l'eseguzione del beep.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoop.Disable">
            <summary>
            Disabilit? il thread.
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Media.SoundBeepLoop.IsActive">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoop.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Media.SoundBeepLoopWaveMemoryState">
            <summary>
            Oggetto per la creazione di un allarme sonoro, con file Wave e menmorizzazione del'ultimo stato di eseguzione.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Media.SoundBeepLoopWaveMemoryState.fileName">
            <summary>
            Nome del file su cui memorizzare lo stato.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Media.SoundBeepLoopWaveMemoryState.soundBeepLoopWave">
            <summary>
            Oggetto per la creazione di un allarme sonoro.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Media.SoundBeepLoopWaveMemoryState.messageLog">
            <summary>
            IMessageLog
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoopWaveMemoryState.#ctor(System.String,System.TimeSpan,System.String,WB.IIIParty.Commons.Logger.IMessageLog)">
            <summary>
            Costruttore.
            </summary>
            <param name="_pathWave">Percorso del file wave da riprodurre, se null o stringa vuota usa il file di default.</param>        
            <param name="_delayBeep">Ripete il suono ogni n millisecondi.</param>
            <param name="_fileName">Nome del file senza estensione e path.</param>
            <param name="_messageLog">IMessageLog</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoopWaveMemoryState.#ctor(System.String,WB.IIIParty.Commons.Logger.IMessageLog)">
            <summary>
            Costruttore. Frenquenza suono=600, durata=100, ripetuto ogni 3 sec.
            </summary>
            <param name="_fileName">Nome del file senza estensione e path.</param>
            <param name="_messageLog">IMessageLog</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoopWaveMemoryState.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Media.SoundBeepLoopWave">
            <summary>
            Oggetto per la creazione di un allarme sonoro.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Media.SoundBeepLoopWave.soundPlayer">
            <summary>
            Oggetto SoundPlayer.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Media.SoundBeepLoopWave.pathWave">
            <summary>
            Path di default del file wave.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Media.SoundBeepLoopWave.delayBeep">
            <summary>
            Ripete il suono ogni n millisecondi.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Media.SoundBeepLoopWave.workerThread">
            <summary>
            Thread eseguzione del sound.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Media.SoundBeepLoopWave.isActive">
            <summary>
            Determina se il controllo ? abilitato o disabilitato per l'eseguzione.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoopWave.#ctor(System.String,System.TimeSpan)">
            <summary>
            Costruttore
            </summary>
            <param name="_pathWave">Percorso del file wave da riprodurre, se null o stringa vuota usa il file di default.</param>
            <param name="_delayBeep">Ripete il suono ogni n millisecondi.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoopWave.#ctor">
            <summary>
            Costruttore. Frenquenza suono=600, durata=100, ripetuto ogni 3 sec.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoopWave.SoundLoop">
            <summary>
            Se in stato di play esegue il suono.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoopWave.Stop">
            <summary>
            Interrompe il suono
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoopWave.Play">
            <summary>
            Esegue il suono.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoopWave.Enable">
            <summary>
            Attiva il thread per l'eseguzione del beep.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoopWave.Disable">
            <summary>
            Disabilit? il thread.
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Media.SoundBeepLoopWave.IsActive">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundBeepLoopWave.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Media.SoundLoopState">
            <summary>
            SoundLoopState memorizza lo stato da salvare per audio attivo o non attivo.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Media.SoundLoopState.#ctor">
            <summary>
            Oggetto per la memorizzazione dello stato dell'audio, attivo o disattivo.
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Media.SoundLoopState.IsActive">
            <summary>
            Stato audio attivo disattivo.
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientType">
            <summary>
            Lista di Client Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientType.Serial">
            <summary>
            Comunicazione seriale.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientType.TcpIp">
            <summary>
            Comunicazione TCP/IP.
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine">
            <summary>
            Motore per Client Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.mbTcpIpClientList">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.mbClientType">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.mbMasterList">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.mbCommunicationDriver">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.isStarted">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.messageLog">
            <summary>
            Oggetto per la creazione dei messaggi di log.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.SettingMbCliTcpIp">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.mbMasterTcpIp_onValueChanged(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster,WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint,System.Int32)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="mbPointChanged"></param>
            <param name="indexValueChanged"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.mbMasterTcpIp_onResponseReceived(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster,WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="mbPointResponse"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.ModbusClientEngine_onDataReceived(WB.IIIParty.Commons.Net.Protocols.Modbus.IModbusCommunication,System.Byte[])">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="modbusAdu"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.ModbusClientEngine_onTrace(WB.IIIParty.Commons.Protocol.IStream,WB.IIIParty.Commons.Protocol.TraceDirections,System.Byte[],System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.ModbusClientEngine_onDisconnect(WB.IIIParty.Commons.Net.Protocols.Modbus.IModbusCommunication)">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.ModbusClientEngine_onConnectFailure(WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication)">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.ModbusClientEngine_onConnect(WB.IIIParty.Commons.Net.Protocols.Modbus.IModbusCommunication)">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.Log(WB.IIIParty.Commons.Logger.LogLevels,System.String)">
            <summary>
            Metodo di utilizzo di messageLog.
            </summary>
            <param name="logLevel"></param>
            <param name="logMessage"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.#ctor(System.Collections.Generic.List{WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient},WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientType,WB.IIIParty.Commons.Logger.IMessageLog)">
            <summary>
            
            </summary>
            <param name="mbTcpIpCliList"></param>
            <param name="mbCliType"></param>
            <param name="msgLog"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.StartEngine">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.StopEngine">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.UpdateValue(System.String,WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint)">
            <summary>
            
            </summary>
            <param name="mbTcpIpClientName"></param>
            <param name="mbPoint"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.dConnectFailure">
            <summary>
            
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.onConnectFailure">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.dResponseReceived">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="mbPointResponse"></param>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.onResponseReceived">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.dValueChanged">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="mbPointResponse"></param>
            <param name="indexValueChanged"></param>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.onValueChanged">
            <summary>
            
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.onDataReceived">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.dOnConnect">
            <summary>
            
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.onConnect">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.dOnDisconnect">
            <summary>
            
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.onDisconnect">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.dOnTrace">
            <summary>
            
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.onTrace">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusClientEngine.IsStarted">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster">
            <summary>
            Client TCP/IP per protocollo Modbus 
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.masterName">
            <summary>
            Nome identificativo del Master Seriale.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.mbSlaveAddress">
            <summary>
            Indirizzo del dispositivo slave.  
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.mbTransmissionMode">
            <summary>
            Modalità di trasmissione seriale Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.mbCOMPort">
            <summary>
            Porta seriale COM
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.mbSerialBaudRate">
            <summary>
            Baud Rate seriale Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.mbSerialDataBits">
            <summary>
            Data Bits seriale Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.mbSerialStopBits">
            <summary>
            Stop Bits seriale Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.mbSerialParity">
            <summary>
            Parity seriale Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.mbTimeout">
            <summary>
            Timeout di comunicazione
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.mbPointList">
            <summary>
            Lista dei punti Modbus configurati. 
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.#ctor">
            <summary>
            Costruttore senza parametri.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.#ctor(System.String,System.Int16,WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineTransmissionMode,System.Int32,WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineBaudRate,WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineDataBits,WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineStopBits,WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineParity,System.TimeSpan)">
            <summary>
            Costruttore con i parametri di connessione.
            </summary>
            <param name="name">Nome del dispositivo</param>
            <param name="deviceAddress">Indirizzo del dispositivo</param>
            <param name="transmissionMode">Modalità di trasmissione</param>
            <param name="comPort">Porta COM</param>
            <param name="baudRate">Baud Rate</param>
            <param name="dataBits">Data Bits</param>
            <param name="stopBits">Stop Bits</param>
            <param name="parity">Parity</param>
            <param name="timeout">Timeout</param>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.MasterName">
            <summary>
            Nome identificativo del Master seriale.
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.SlaveAddress">
            <summary>
            Indirizzo del dispositivo slave.
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.TransmissionMode">
            <summary>
            Modalità di trasmissione seriale Modbus
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.COMPort">
            <summary>
            Porta seriale COM
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.SerialBaudRate">
            <summary>
            Baud Rate seriale Modbus
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.SerialDataBits">
            <summary>
            Data Bits seriale Modbus
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.SerialStopBits">
            <summary>
            Stop Bits seriale Modbus
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.SerialParity">
            <summary>
            Parity seriale Modbus
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.Timeout">
            <summary>
            Timeout di comunicazione
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusSerialMaster.MbPointList">
            <summary>
            Lista dei punti Modbus configurati.
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient">
            <summary>
            Client TCP/IP per protocollo Modbus 
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.clientName">
            <summary>
            Nome identificativo del Client TCP/IP.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.serverIpAddress">
            <summary>
            Indirizzo del Server Modbus TCP/IP a cui connettersi.  
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.serverPort">
            <summary>
            Porta del Server Modbus TCP/IP a cui connettersi.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.reconnectScanTime">
            <summary>
            Intervallo di tempo che intercorre tra ogni tentativo di riconnessione (sec).
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.connectionDelay">
            <summary>
            Tempo che definisce il ritardo massimo di connessione (sec).
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.deviceId">
            <summary>
            Identificativo del dispositivo.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.timeOut">
            <summary>
            Timeout per la ricezione delle risposte (sec).
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.scanTime">
            <summary>
            Intervallo di tempo che intercorre tra ogni invio di richiesta (sec).
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.mbPointList">
            <summary>
            Lista dei punti Modbus configurati. 
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.#ctor">
            <summary>
            Costruttore senza parametri.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.#ctor(System.String,System.Net.IPAddress,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Int32)">
            <summary>
            Costruttore con i parametri di connessione.
            </summary>
            <param name="name">Nome identificativo del Client TCP/IP.</param>
            <param name="svrIpAddr">Indirizzo del Server Modbus TCP/IP a cui connettersi.</param>
            <param name="svrPort">Porta del Server Modbus TCP/IP a cui connettersi.</param>
            <param name="reconnScanTime">Intervallo di tempo che intercorre tra ogni tentativo di riconnessione (sec).</param>
            <param name="connDelay">Tempo che definisce il ritardo massimo di connessione (sec).</param>
            <param name="timeout">Timeout per la ricezione delle risposte (sec).</param>
            <param name="scantime">Intervallo di tempo che intercorre tra ogni invio di richiesta (sec).</param>
            <param name="devId">Identificativo del dispositivo.</param>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.ClientName">
            <summary>
            Nome identificativo del Client TCP/IP.
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.ServerIpAddress">
            <summary>
            Indirizzo del Server Modbus TCP/IP a cui connettersi.
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.ServerPort">
            <summary>
            Porta del Server Modbus TCP/IP a cui connettersi.
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.ReconnectScanTime">
            <summary>
            Intervallo di tempo che intercorre tra ogni tentativo di riconnessione (sec).
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.ConnectionDelay">
            <summary>
            Tempo che definisce il ritardo massimo di connessione (sec).
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.TimeOut">
            <summary>
            imeout per la ricezione delle risposte (sec).
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.ScanTime">
            <summary>
            Intervallo di tempo che intercorre tra ogni invio di richiesta (sec).
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.DeviceId">
            <summary>
            Identificativo del dispositivo.
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Engine.ModbusTcpIpClient.MbPointList">
            <summary>
            Lista dei punti Modbus configurati.
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPointType">
            <summary>
            Tipi di Punti Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPointType.CoilStatus">
            <summary>
            Coils Status
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPointType.InputStatus">
            <summary>
            Input Status
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPointType.InputRegister">
            <summary>
            Input Register
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPointType.HoldingRegister">
            <summary>
            Holding Register
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusValueType">
            <summary>
            Tipo dei valori dei Punti Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusValueType.Boolean">
            <summary>
            Boolean
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusValueType.Int">
            <summary>
            Int16
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusValueType.Float">
            <summary>
            Float
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusAccessMode">
            <summary>
            Modalità di accesso ai Punti Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusAccessMode.Read">
            <summary>
            Read
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusAccessMode.Write">
            <summary>
            Write
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusAccessMode.ReadWrite">
            <summary>
            ReadWrite
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint">
            <summary>
            Interfaccia Modbus Point
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint.GetMbPointId">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint.SetMbPointId(System.String)">
            <summary>
            
            </summary>
            <param name="pointId"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint.GetMbPointType">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint.SetMbPointType(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPointType)">
            <summary>
            
            </summary>
            <param name="pointType"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint.GetMbAddress">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint.SetMbAddress(System.Int32)">
            <summary>
            
            </summary>
            <param name="address"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint.GetMbSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint.GetMbPointValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint.GetMbWriteValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint.GetMbExceptionCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint.SetMbSize(System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint.GetMbValueType">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint.SetMbValueType(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusValueType)">
            <summary>
            
            </summary>
            <param name="valueType"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint.GetMbAccessMode">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint.SetMbAccessMode(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusAccessMode)">
            <summary>
            
            </summary>
            <param name="accessMode"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint.SetMbExceptionCode(System.Int32)">
            <summary>
            
            </summary>
            <param name="exceptionCode"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusSerialLineFrame">
            <summary>
            Interfaccia di definizione del frame Modbus seriale
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusSerialLineFrame.CreateFrame(System.Int16,System.Byte[])">
            <summary>
            Creazione del frame Modbus
            </summary>
            <param name="dest">Destinazione</param>
            <param name="data">Dati da incapsulare nel frame Modbus</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusSerialLineFrame.ParseFrame(System.Byte[])">
            <summary>
            Analisi del frame Modbus
            </summary>
            <param name="frameReceived">Frame Modbus ricevuto</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusSerialLineFrame.CheckFrame(System.Byte[])">
            <summary>
            Controllo del frame Modbus
            </summary>
            <param name="frameReceived">Frame Modbus ricevuto</param>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusEntity">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusEntity.GetId">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusEntity.SetId(System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusEntity.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusEntity.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.mbClientId">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.mbCommunicationDriver">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.mbPointList">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.mbRequestList">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.mbScantime">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.mbTimeout">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.scannigThread">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.lastRequestSent">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.autoResetEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.transactionTable">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.messageLog">
            <summary>
            Oggetto per la creazione dei messaggi di log.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.onScan">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.Scan">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.SendReadRequest(System.Byte[])">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.mbCommunicationDriver_onDataReceived(WB.IIIParty.Commons.Net.Protocols.Modbus.IModbusCommunication,System.Byte[])">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="modbusAdu"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.Log(WB.IIIParty.Commons.Logger.LogLevels,System.String)">
            <summary>
            Metodo di utilizzo di messageLog.
            </summary>
            <param name="logLevel"></param>
            <param name="logMessage"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.#ctor(WB.IIIParty.Commons.Net.Protocols.Modbus.IModbusCommunication,System.Collections.Generic.Dictionary{System.String,WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint},System.TimeSpan,System.TimeSpan,WB.IIIParty.Commons.Logger.IMessageLog)">
            <summary>
            
            </summary>
            <param name="modbusDriver"></param>
            <param name="pointList"></param>
            <param name="scantime"></param>
            <param name="timeout"></param>
            <param name="msgLog"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.GetId">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.SetId(System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.SendWriteRequest(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint)">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.dResponseReceived">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="mbPointResponse"></param>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.onResponseReceived">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.dValueChanged">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="mbPointChanged"></param>
            <param name="indexValueChanged"></param>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.onValueChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.MbPointList">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusMaster.MessageLog">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.mbPointId">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.mbPointType">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.mbAddress">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.mbSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.mbExceptionCode">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.mbValueType">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.mbAccessMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.mbPointValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.mbWriteValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.#ctor(System.String,WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPointType,System.Int32,WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusValueType,WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusAccessMode)">
            <summary>
            Punto Modbus
            </summary>
            <param name="pointId">Nome del Punto Modbus</param>
            <param name="pointType">Tipo del Punto Modbus</param>
            <param name="address">Indirizzo del Punto Modbus</param>
            <param name="valType">Tipo del valore del Punto Modbus</param>
            <param name="accessMode">Modalità di accesso del Punto Modbus</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.GetMbPointId">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.SetMbPointId(System.String)">
            <summary>
            
            </summary>
            <param name="pointId"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.GetMbPointType">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.SetMbPointType(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPointType)">
            <summary>
            
            </summary>
            <param name="pointType"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.GetMbAddress">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.SetMbAddress(System.Int32)">
            <summary>
            
            </summary>
            <param name="address"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.GetMbSize">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.SetMbSize(System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.GetMbExceptionCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.SetMbExceptionCode(System.Int32)">
            <summary>
            
            </summary>
            <param name="exceptionCode"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.GetMbValueType">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.SetMbValueType(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusValueType)">
            <summary>
            
            </summary>
            <param name="valueType"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.GetMbAccessMode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.SetMbAccessMode(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusAccessMode)">
            <summary>
            
            </summary>
            <param name="accessMode"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.GetMbPointValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint.GetMbWriteValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusRequest">
            <summary>
            Richiesta Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusRequest.mbPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusRequest.readRequest">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusRequest.writeRequest">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusRequest.mbSettings">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusRequest.messageLog">
            <summary>
            Oggetto per la creazione dei messaggi di log.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusRequest.Create">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusRequest.Parse(System.Byte[])">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusRequest.GetByteArray(System.Int32)">
            <summary>
            
            </summary>
            <param name="functionCode"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusRequest.Log(WB.IIIParty.Commons.Logger.LogLevels,System.String)">
            <summary>
            Metodo di utilizzo di messageLog.
            </summary>
            <param name="logLevel"></param>
            <param name="logMessage"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusRequest.#ctor(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint,WB.IIIParty.Commons.Logger.IMessageLog)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="msgLog"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusRequest.#ctor(System.Byte[],WB.IIIParty.Commons.Logger.IMessageLog)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="msgLog"></param>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusRequest.MbPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusRequest.ReadRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusRequest.WriteRequest">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusResponse">
            <summary>
            Risposta Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusResponse.mbPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusResponse.readResponse">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusResponse.writeResponse">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusResponse.readData">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusResponse.mbSettings">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusResponse.messageLog">
            <summary>
            Oggetto per la creazione dei messaggi di log.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusResponse.Create">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusResponse.Parse(System.Byte[])">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusResponse.GetByteArray(System.Int32)">
            <summary>
            
            </summary>
            <param name="functionCode"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusResponse.Log(WB.IIIParty.Commons.Logger.LogLevels,System.String)">
            <summary>
            Metodo di utilizzo di messageLog.
            </summary>
            <param name="logLevel"></param>
            <param name="logMessage"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusResponse.#ctor(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusPoint,WB.IIIParty.Commons.Logger.IMessageLog)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="msgLog"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusResponse.#ctor(System.Byte[],WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint,WB.IIIParty.Commons.Logger.IMessageLog)">
            <summary>
            
            </summary>
            <param name="response"></param>
            <param name="point"></param>
            <param name="msgLog"></param>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusResponse.MbPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusResponse.ReadResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusResponse.WriteRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusResponse.ReadData">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineASCIIFrame">
            <summary>
            Frame ASCII Modbus seriale
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineASCIIFrame.start">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineASCIIFrame.destination">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineASCIIFrame.data">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineASCIIFrame.lRC">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineASCIIFrame.end">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineASCIIFrame.CStart">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineASCIIFrame.Destination">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineASCIIFrame.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineASCIIFrame.LRC">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineASCIIFrame.CEnd">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineASCIIFrame.CreateFrame(System.Int16,System.Byte[])">
            <summary>
            
            </summary>
            <param name="dest"></param>
            <param name="dataSend"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineASCIIFrame.ParseFrame(System.Byte[])">
            <summary>
            
            </summary>
            <param name="dataReceive"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineASCIIFrame.CheckFrame(System.Byte[])">
            <summary>
            
            </summary>
            <param name="dataReceive"></param>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineRTUFrame">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineRTUFrame.destination">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineRTUFrame.data">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineRTUFrame.cRC">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineRTUFrame.Destination">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineRTUFrame.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineRTUFrame.CRC">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineRTUFrame.CreateFrame(System.Int16,System.Byte[])">
            <summary>
            
            </summary>
            <param name="dest"></param>
            <param name="dataSend"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineRTUFrame.ParseFrame(System.Byte[])">
            <summary>
            
            </summary>
            <param name="dataReceive"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSerialLineRTUFrame.CheckFrame(System.Byte[])">
            <summary>
            
            </summary>
            <param name="dataReceive"></param>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSettings">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSettings.instance">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSettings.modbusCommandType">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSettings.#ctor">
            <summary>
            Costruttore
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSettings.GetInstance">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSettings.ModbusCommandType">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSlave">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSlave.GetId">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSlave.SetId(System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSlave.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.ModbusSlave.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.dDataReceived">
            <summary>
            Evento di avvenuta ricezione dati
            </summary>
            <param name="sender"></param>
            <param name="modbusAdu"> Unità ADU Modbus</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.IModbusCommunication">
            <summary>
            Interfaccia che definisce la comunicazione attraverso il protocollo Modbus.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.IModbusCommunication.IsConnected">
            <summary>
            Ritorna lo stato di connessione della comunicazione.
            </summary>
            <returns>Stato di connessione della comunicazione.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.IModbusCommunication.GetId">
            <summary>
            Ritorna il parametro Modbus Identifier.
            </summary>
            <returns>Modbus Identifier.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.IModbusCommunication.SetId(System.String)">
            <summary>
            Imposta il parametro Modbus Identifier.
            </summary>
            <param name="id">Modbus Identifier.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.IModbusCommunication.StartCommunication">
            <summary>
            Avvio della comunicazione.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.IModbusCommunication.CreateADU(System.Byte[])">
            <summary>
            Creazione dell'unità ADU Modbus.
            </summary>
            <param name="pdu">Unità PDU Modbus</param>
            <returns>Unità ADU Modbus</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.IModbusCommunication.SendModbusADU(System.Byte[])">
            <summary>
            Invio dell'unità ADU Modbus.
            </summary>
            <param name="modbusADU">Unità ADU Modbus</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.IModbusCommunication.ParseADU(System.Byte[])">
            <summary>
            Analisi dell'unità ADU Modbus
            </summary>
            <param name="adu">Unità ADU Modbus</param>
            <returns>Unità PDU Modbus</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.IModbusCommunication.StopCommunication">
            <summary>
            Arresto della comunicazione.
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Protocols.Modbus.IModbusCommunication.onDataReceived">
            <summary>
            Evento di avvenuta ricezione dati.
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.mbMasterSerialId">
            <summary>
            Identificativo del Master Modbus Seriale.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.StartTrigger">
            <summary>
            Carattere di inizio trigger
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.EndTrigger">
            <summary>
            Caratteri di fine trigger
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.mbSerialLineFrame">
            <summary>
            Frame seriale Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.mbDeviceAddress">
            <summary>
            Transaction ID Modbus.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.serialCOM">
            <summary>
            Oggetto che definisce la libreria seriale.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.mbTransmissionMode">
            <summary>
            Modalità di trasmissione seriale Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.mbCOMPort">
            <summary>
            Porta seriale COM
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.mbSerialBaudRate">
            <summary>
            Baud Rate seriale Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.mbSerialDataBits">
            <summary>
            Data Bits seriale Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.mbSerialStopBits">
            <summary>
            Stop Bits seriale Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.mbSerialParity">
            <summary>
            Parity seriale Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.mbTimeout">
            <summary>
            Timeout di comunicazione
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.isConnected">
            <summary>
            Stato della connessione.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.stringReceived">
            <summary>
            Stringa di ricezione dati
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.messageLog">
            <summary>
            Oggetto per la creazione dei messaggi di log.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.SettingSerialNET">
            <summary>
            Configurazione dell'oggetto della libreria SerialNET.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.serialCOM_OnForceClose(System.Int32)">
            <summary>
            
            </summary>
            <param name="ErrorCode"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.serialCOM_OnRead(System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.Swap(System.Byte[])">
            <summary>
            Ritorna l'array con i byte scambiati di posto specularmente.
            </summary>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.Log(WB.IIIParty.Commons.Logger.LogLevels,System.String)">
            <summary>
            Metodo di utilizzo di messageLog.
            </summary>
            <param name="logLevel"></param>
            <param name="logMessage"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.#ctor(System.Int16,WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineTransmissionMode,System.Int32,WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineBaudRate,WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineDataBits,WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineStopBits,WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineParity,System.TimeSpan)">
            <summary>
            Costruttore
            </summary>
            <param name="deviceAddress"></param>
            <param name="transmissionMode">Modalità di trasmissione</param>
            <param name="comPort">Porta COM</param>
            <param name="baudRate">Baud Rate</param>
            <param name="dataBits">Data Bits</param>
            <param name="stopBits">Stop Bits</param>
            <param name="parity">Parity</param>
            <param name="timeout">Timeout</param>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.MbDeviceAddress">
            <summary>
            Modbus Transaction Id
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.MessageLog">
            <summary>
            Messag Log
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.dMessageReceived">
            <summary>
            
            </summary>
            <param name="dataReceived"></param>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.onMessageReceived">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.IsConnected">
            <summary>
            Ritorna lo stato di connessione della comunicazione.
            </summary>
            <returns>Stato di connessione della comunicazione.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.GetId">
            <summary>
            Ritorna il parametro Modbus Identifier.
            </summary>
            <returns>Modbus Identifier.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.SetId(System.String)">
            <summary>
            Imposta il parametro Modbus Identifier.
            </summary>
            <param name="id">Modbus Identifier.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.CreateADU(System.Byte[])">
            <summary>
            Creazione dell'unità ADU Modbus.
            </summary>
            <param name="pdu">Unità PDU Modbus</param>
            <returns>Unità ADU Modbus</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.SendModbusADU(System.Byte[])">
            <summary>
            Invio dell'unità ADU Modbus.
            </summary>
            <param name="modbusADU">Unità ADU Modbus</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.ParseADU(System.Byte[])">
            <summary>
            Analisi dell'unità ADU Modbus
            </summary>
            <param name="adu">Unità ADU Modbus</param>
            <returns>Unità PDU Modbus</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.StartCommunication">
            <summary>
            Avvio della comunicazione.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.StopCommunication">
            <summary>
            Arresto della comunicazione.
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialMasterCommunication.onDataReceived">
            <summary>
            Evento di avvenuta ricezione dati.
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialSlaveCommunication">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialSlaveCommunication.IsConnected">
            <summary>
            Ritorna lo stato di connessione della comunicazione.
            </summary>
            <returns>Stato di connessione della comunicazione.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialSlaveCommunication.GetId">
            <summary>
            Ritorna il parametro Modbus Identifier.
            </summary>
            <returns>Modbus Identifier.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialSlaveCommunication.SetId(System.String)">
            <summary>
            Imposta il parametro Modbus Identifier.
            </summary>
            <param name="id">Modbus Identifier.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialSlaveCommunication.StartCommunication">
            <summary>
            Avvio della comunicazione.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialSlaveCommunication.CreateADU(System.Byte[])">
            <summary>
            Creazione dell'unità ADU Modbus.
            </summary>
            <param name="pdu">Unità PDU Modbus</param>
            <returns>Unità ADU Modbus</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialSlaveCommunication.SendModbusADU(System.Byte[])">
            <summary>
            Invio dell'unità ADU Modbus.
            </summary>
            <param name="modbusADU">Unità ADU Modbus</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialSlaveCommunication.ParseADU(System.Byte[])">
            <summary>
            Analisi dell'unità ADU Modbus
            </summary>
            <param name="adu">Unità ADU Modbus</param>
            <returns>Unità PDU Modbus</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialSlaveCommunication.StopCommunication">
            <summary>
            Arresto della comunicazione.
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusSerialSlaveCommunication.onDataReceived">
            <summary>
            Evento di avvenuta ricezione dati.
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication">
            <summary>
            Comunicazione Client Modbus TCP/IP 
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.mbClientTcpIpId">
            <summary>
            Identificativo del Client Modbus TCP/IP.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.transactionID">
            <summary>
            Transaction ID Modbus.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.protocolID">
            <summary>
            Protocol Id Modbus.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.dataLength">
            <summary>
            Data Lenght Modbus.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.unitID">
            <summary>
            Unit Id Modbus.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.client">
            <summary>
            Client TCP/IP.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.ipAddress">
            <summary>
            Indirizzo IP del server TCP/IP.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.tcpPort">
            <summary>
            Port del server TCP/IP.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.reconnectionScanTime">
            <summary>
            Intervallo di riconnessione.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.connectionDelay">
            <summary>
            Ritardo di connesssione.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.isConnected">
            <summary>
            Stato della connessione.
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.messageLog">
            <summary>
            Oggetto per la creazione dei messaggi di log.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.Swap(System.Byte[])">
            <summary>
            Ritorna l'array con i byte scambiati di posto specularmente.
            </summary>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.client_ConnectFailure">
            <summary>
            Gestione dell'evento di connessione fallita.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.client_DataReceived(System.Byte[])">
            <summary>
            Gestione dell'evento di avvenuta ricezionedei dati.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.client_OnConnect">
            <summary>
            Gestione dell'evento di avvenuta connessione
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.client_OnDisconnect">
            <summary>
            Gestione dell'evento di avvenuta disconnessione.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.client_OnTrace(WB.IIIParty.Commons.Protocol.IStream,WB.IIIParty.Commons.Protocol.TraceDirections,System.Byte[],System.String)">
            <summary>
            Gestione dell'evento di OnTrace
            </summary>
            <param name="sender">Mittente</param>
            <param name="direction">Direzione del messaggio</param>
            <param name="data">Messaggio</param>
            <param name="description">Descrizione</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.Log(WB.IIIParty.Commons.Logger.LogLevels,System.String)">
            <summary>
            Metodo di utilizzo di messageLog.
            </summary>
            <param name="logLevel"></param>
            <param name="logMessage"></param>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.TransactionID">
            <summary>
            Modbus Transaction Id
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.ProtocolID">
            <summary>
            Modbus Protocol Id
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.DataLength">
            <summary>
            Modbus Data Length
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.UnitID">
            <summary>
            Modbus Unit Id
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.MessageLog">
            <summary>
            Messag Log
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.#ctor(System.String,System.Int32,System.Int16,System.TimeSpan,System.TimeSpan)">
            <summary>
            Costruttore
            </summary>
            <param name="ipServerAddr">Indirizzo IP del server</param>
            <param name="port">Porta del server</param>
            <param name="slaveID">Modbus Slave Id</param>
            <param name="reconnScanTime">Tempo di riconnessione</param>
            <param name="connDelay">Ritardo di connessione</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.dConnectFailure">
            <summary>
            Connessione fallita.
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.onConnectFailure">
            <summary>
            Evento di connessione fallita.
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.onDataReceived">
            <summary>
            Evento di avvenuta ricezione dati.
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.dOnConnect">
            <summary>
            Connessione
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.onConnect">
            <summary>
            Evento di avvenuta connessione
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.dOnDisconnect">
            <summary>
            Disconnessione
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.onDisconnect">
            <summary>
            Evento di avvenuta disconnessione
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.dOnTrace">
            <summary>
            Trace
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.onTrace">
            <summary>
            Evento di Trace
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.IsConnected">
            <summary>
            Ritorna lo stato di connessione della comunicazione.
            </summary>
            <returns>Stato di connessione della comunicazione.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.GetId">
            <summary>
            Ritorna il parametro Modbus Identifier.
            </summary>
            <returns>Modbus Identifier.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.SetId(System.String)">
            <summary>
            Imposta il parametro Modbus Identifier.
            </summary>
            <param name="id">Modbus Identifier.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.CreateADU(System.Byte[])">
            <summary>
            Creazione dell'unità ADU Modbus.
            </summary>
            <param name="pdu">Unità PDU Modbus</param>
            <returns>Unità ADU Modbus</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.ParseADU(System.Byte[])">
            <summary>
            Analisi dell'unità ADU Modbus
            </summary>
            <param name="adu">Unità ADU Modbus</param>
            <returns>Unità PDU Modbus</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.StartCommunication">
            <summary>
            Avvio della comunicazione.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.StopCommunication">
            <summary>
            Arresto della comunicazione.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPClientCommunication.SendModbusADU(System.Byte[])">
            <summary>
            Invio dell'unità ADU Modbus.
            </summary>
            <param name="modbusADU">Unità ADU Modbus</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPServerCommunication">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPServerCommunication.IsConnected">
            <summary>
            Ritorna lo stato di connessione della comunicazione.
            </summary>
            <returns>Stato di connessione della comunicazione.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPServerCommunication.GetId">
            <summary>
            Ritorna il parametro Modbus Identifier.
            </summary>
            <returns>Modbus Identifier.</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPServerCommunication.SetId(System.String)">
            <summary>
            Imposta il parametro Modbus Identifier.
            </summary>
            <param name="id">Modbus Identifier.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPServerCommunication.StartCommunication">
            <summary>
            Avvio della comunicazione.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPServerCommunication.CreateADU(System.Byte[])">
            <summary>
            Creazione dell'unità ADU Modbus.
            </summary>
            <param name="pdu">Unità PDU Modbus</param>
            <returns>Unità ADU Modbus</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPServerCommunication.SendModbusADU(System.Byte[])">
            <summary>
            Invio dell'unità ADU Modbus.
            </summary>
            <param name="modbusADU">Unità ADU Modbus</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPServerCommunication.ParseADU(System.Byte[])">
            <summary>
            Analisi dell'unità ADU Modbus
            </summary>
            <param name="adu">Unità ADU Modbus</param>
            <returns>Unità PDU Modbus</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPServerCommunication.StopCommunication">
            <summary>
            Arresto della comunicazione.
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Protocols.Modbus.ModbusTCPIPServerCommunication.onDataReceived">
            <summary>
            Evento di avvenuta ricezione dati.
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ModbusPDU">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ModbusPDU.MbCreateReqPDU(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint)">
            <summary>
             Creazione di una richiesta Modbus PDU.  
            </summary>
            <param name="point">Punto Modbus</param>
            <returns>Richiesta serializzata</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ModbusPDU.MbParseReqPDU(System.Byte[],WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint@)">
            <summary>
            Parsing di una risposta Modbus PDU.
            </summary>
            <param name="requestData">Richiesta serializzata</param>
            <param name="point">Punto Modbus</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ModbusPDU.MbCreateRspPDU(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint)">
            <summary>
             Creazione di una risposta Modbus PDU. 
            </summary>
            <param name="point">Punto Modbus</param>
            <returns>Risposta serializzata</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ModbusPDU.MbParseRspPDU(System.Byte[],WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint@)">
            <summary>
             Parsing di una risposta Modbus PDU.
            </summary>
            <param name="responseData">Risposta serializzata</param>
            /// <param name="point">Punto Modbus</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadCoils">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadCoils.MbCreateReqPDU(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadCoils.MbParseReqPDU(System.Byte[],WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint@)">
            <summary>
            
            </summary>
            <param name="requestData"></param>
            <param name="point"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadCoils.MbCreateRspPDU(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadCoils.MbParseRspPDU(System.Byte[],WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint@)">
            <summary>
            
            </summary>
            <param name="responseData"></param>
            <param name="point"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadCoils.Convert(System.Collections.IEnumerable,System.Int16[]@)">
            <summary>
            
            </summary>
            <param name="myList"></param>
            <param name="result"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadHoldingRegisters">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadHoldingRegisters.MbCreateReqPDU(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadHoldingRegisters.MbParseReqPDU(System.Byte[],WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint@)">
            <summary>
            
            </summary>
            <param name="requestData"></param>
            <param name="point"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadHoldingRegisters.MbCreateRspPDU(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadHoldingRegisters.MbParseRspPDU(System.Byte[],WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint@)">
            <summary>
            
            </summary>
            <param name="responseData"></param>
            <param name="point"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadInputDiscretes">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadInputDiscretes.MbCreateReqPDU(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadInputDiscretes.MbParseReqPDU(System.Byte[],WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint@)">
            <summary>
            
            </summary>
            <param name="requestData"></param>
            <param name="point"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadInputDiscretes.MbCreateRspPDU(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadInputDiscretes.MbParseRspPDU(System.Byte[],WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint@)">
            <summary>
            
            </summary>
            <param name="responseData"></param>
            <param name="point"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadInputDiscretes.Convert(System.Collections.IEnumerable,System.Int16[]@)">
            <summary>
            
            </summary>
            <param name="myList"></param>
            <param name="result"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadInputRegisters">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadInputRegisters.MbCreateReqPDU(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadInputRegisters.MbParseReqPDU(System.Byte[],WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint@)">
            <summary>
            
            </summary>
            <param name="requestData"></param>
            <param name="point"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadInputRegisters.MbCreateRspPDU(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.ReadInputRegisters.MbParseRspPDU(System.Byte[],WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint@)">
            <summary>
            
            </summary>
            <param name="responseData"></param>
            <param name="point"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.WriteMultipleCoils">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.WriteMultipleCoils.MbCreateReqPDU(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint)">
            <summary>
            Creazione del PDU di richiesta Modbus
            </summary>
            <param name="point">Punto Modbus</param>
            <returns>Serializzazione del PDU di richiesta Modbus</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.WriteMultipleCoils.MbParseReqPDU(System.Byte[],WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint@)">
            <summary>
            
            </summary>
            <param name="requestData"></param>
            <param name="point">Punto Modbus</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.WriteMultipleCoils.MbCreateRspPDU(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint)">
            <summary>
            Creazione del PDU di richiesta Modbus
            </summary>
            <param name="point">Punto Modbus</param>
            <returns>Serializzazione del PDU di richiesta Modbus</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.WriteMultipleCoils.MbParseRspPDU(System.Byte[],WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint@)">
            <summary>
            
            </summary>
            <param name="responseData"></param>
            <param name="point"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.WriteMultipleRegisters">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.WriteMultipleRegisters.MbCreateReqPDU(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.WriteMultipleRegisters.MbParseReqPDU(System.Byte[],WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint@)">
            <summary>
            
            </summary>
            <param name="requestData"></param>
            <param name="point"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.WriteMultipleRegisters.MbCreateRspPDU(WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.PDU.WriteMultipleRegisters.MbParseRspPDU(System.Byte[],WB.IIIParty.Commons.Net.Protocols.Modbus.Entity.IModbusPoint@)">
            <summary>
            
            </summary>
            <param name="responseData"></param>
            <param name="point"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineTransmissionMode">
            <summary>
            Modalità di trasmissione seriale Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineTransmissionMode.RTU">
            <summary>
            RTU
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineTransmissionMode.ASCII">
            <summary>
            ASCII
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineBaudRate">
            <summary>
             Baud Rate seriale Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineBaudRate.BR_9600">
            <summary>
            Baud Rate 9600
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineBaudRate.BR_14400">
            <summary>
            Baud Rate 14400
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineBaudRate.BR_19200">
            <summary>
            Baud Rate 19200
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineBaudRate.BR_38400">
            <summary>
            Baud Rate 38400
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineBaudRate.BR_56000">
            <summary>
            Baud Rate 56000
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineDataBits">
            <summary>
            Data Bits seriale Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineDataBits.DB_7">
            <summary>
            Bata Bit 7
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineDataBits.DB_8">
            <summary>
            Data Bit 8
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineStopBits">
            <summary>
            Stop Bits seriale Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineStopBits.SB_1">
            <summary>
            Stop Bit 0
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineStopBits.SB_1_5">
            <summary>
            Stop Bit 1
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineStopBits.SB_2">
            <summary>
            Stop Bit 2
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineParity">
            <summary>
            Parity seriale Modbus
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineParity.NONE">
            <summary>
            Nessuna Parità
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineParity.ODD">
            <summary>
            Parità Pari
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineParity.EVEN">
            <summary>
            Parità Dispari
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineParity.MARK">
            <summary>
            Parità Mark
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineParity.SPACE">
            <summary>
            Parità Space
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineUtil">
            <summary>
            Classe contenente metodi statici di utilità
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineUtil.CreateCRC(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineUtil.ShiftRightOne(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineUtil.CreateLRC(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineUtil.ConvertToASCII(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineUtil.ConvertFromASCII(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineUtil.CheckResponseReceivedOnSerialLine(System.Byte[],WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.SerialLineTransmissionMode)">
            <summary>
            
            </summary>
            <param name="dataReceived"></param>
            <param name="transmissionMode"></param>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.TransactionIDGenerator">
            <summary>
            Generatore di Transaction ID
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.TransactionIDGenerator.TransacID">
            <summary>
            Transaction ID
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.TransactionIDGenerator.Istance">
            <summary>
            Istanza del generatore di Transaction ID
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Protocols.Modbus.Utility.TransactionIDGenerator.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2">
            <summary>
            Classe per la definizione del client ridondante
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.trLog">
            <summary>
            Log
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.strParserPrim">
            <summary>
            Stream parser per l'inizializzazione del client
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.strParserSec">
            <summary>
            Stream parser per l'inizializzazione del client
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.clientPrinc">
            <summary>
            Client principale
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.clientSec">
            <summary>
            Client secondario
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.infoServerPrimary">
            <summary>
            Struttura che memorizza i dati dei server primario
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.infoServerSecondary">
            <summary>
            Struttura che memorizza i dati dei server secondario
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.primaryConnected">
            <summary>
            Stato di connessione client primario
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.secondaryConnected">
            <summary>
            Stato di connessione client secondario
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.reconnectScanTime">
            <summary>
            Tempo tra un tentativo di riconnessione ed un atro
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.reconnectionThread">
            <summary>
            Thread di riconnessione
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.disconnect">
            <summary>
            True se si è utilizzato il metodo disconnect
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.OnConnect">
            <summary>
            Notifica la connessione avvenuta ad almeno uno dei server
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.OnDisconnect">
            <summary>
            Notifica la disconnessione da tutti e due i server
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.OnServerConnect">
            <summary>
            Notifica la connessione avvenuta ad un server
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.OnServerDisconnect">
            <summary>
            Notifica la disconnessione da un server
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.#ctor(System.String,System.Int32,System.String,System.Int32,System.TimeSpan,WB.IIIParty.Commons.Logger.ITraceLog,WB.IIIParty.Commons.Protocol.IMessageParser,System.TimeSpan)">
            <summary>
            Costruttore di definizione
            </summary>
            <param name="primaryIpAddress">Indirizzo ip del server primario</param>
            <param name="primaryPort">Porta del server primario</param>
            <param name="secondaryIpAddress">Indirizzo ip del server secondario</param>
            <param name="secondaryPort">Porta del server secondario</param>
            <param name="reconnectScanTime">Tempo di riconnessione</param>
            <param name="tr">Trace logger</param>
            <param name="_parser">Parser dei messaggi di protocollo</param>
            <param name="_syncTimeout">Timeout di esecuzione dei messaggi in modlaità sincrona</param>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.IsConnected">
            <summary>
            Ritorna lo stato di connessione ad un server (stato di connesso = 1 solo server connesso)
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.IsPrimaryConnected">
            <summary>
            Ritorna lo stato di connessione al server primario
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.IsSecondaryConnected">
            <summary>
            Ritorna lo stato di connessione al server secondarion
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.InfoServerPrimary">
            <summary>
            Ritorna le informazioni del server primary
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.InfoServerSecondary">
            <summary>
            Ritorna le informazioni del server secondary
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.PrimaryStream">
            <summary>
            Ritorna l'interfaccia stream del primo client tcp
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.SecondaryStream">
            <summary>
            Ritorna l'interfaccia stream del secondo client tcp
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.ForceDisconnect">
            <summary>
            Metodo per la chiusura della connessione che non termina il thread di riconnessione
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.Disconnect">
            <summary>
            Metodo per la disconnessione dei client
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.Connect">
            <summary>
            Metodo per la connessione dei client
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.clientPrinc_OnConnect">
            <summary>
            Client principale connesso
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.clientSec_OnConnect">
            <summary>
            Client secondario connesso
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.clientPrinc_OnDisconnect">
            <summary>
            Client primario disconnesso
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.clientSec_OnDisconnect">
            <summary>
            Client secondario disconnesso
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.KillConnectionThread">
            <summary>
            Metodo per l'uccisione del Thread di riconnessione
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.StartConnectionThread">
            <summary>
            Metodo per l'attivazione del thread di riconnessione
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.CheckReconnect">
            <summary>
            Thread di riconnessione
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.clientPrinc_OnTrace(WB.IIIParty.Commons.Protocol.IStream,WB.IIIParty.Commons.Protocol.TraceDirections,System.Byte[],System.String)">
            <summary>
            Evento on trace del client primario
            </summary>
            <param name="sender"></param>
            <param name="direction"></param>
            <param name="data"></param>
            <param name="description"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.clientSec_OnTrace(WB.IIIParty.Commons.Protocol.IStream,WB.IIIParty.Commons.Protocol.TraceDirections,System.Byte[],System.String)">
            <summary>
            Evento ontrace del client secondario
            </summary>
            <param name="sender"></param>
            <param name="direction"></param>
            <param name="data"></param>
            <param name="description"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.strParserPrim_MessageReceived(WB.IIIParty.Commons.Protocol.IMessage,WB.IIIParty.Commons.Protocol.MessageValidationException)">
            <summary>
            Ricezione dei messaggi 
            </summary>
            <param name="msg">messaggio ricevuto</param>
            <param name="error">eventuale eccezione</param>       
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.strParserSec_MessageReceived(WB.IIIParty.Commons.Protocol.IMessage,WB.IIIParty.Commons.Protocol.MessageValidationException)">
            <summary>
            Ricezione dei messaggi 
            </summary>
            <param name="msg">messaggio ricevuto</param>
            <param name="error">eventuale eccezione</param>       
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.strParserPrim_OnMessageParseError(WB.IIIParty.Commons.Protocol.MessageParseException)">
            <summary>
            Errore nel parse dei dati 
            </summary>
            <param name="error">errore</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.strParserSec_OnMessageParseError(WB.IIIParty.Commons.Protocol.MessageParseException)">
            <summary>
            Errore nel parse dei dati 
            </summary>
            <param name="error">errore</param>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.MessageReceived">
            <summary>
            Notifica la ricezione di un messaggio da uno dei due server
            </summary>         
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.OnMessageParseError">
            <summary>
            Errore di parsing del messaggio
            </summary>        
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.Send(WB.IIIParty.Commons.Protocol.IMessage)">
            <summary>
            Invia il messaggio al server connesso
            </summary>
            <param name="msg">messaggio da inviare</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.Dispose">
            <summary>
            Metodo per la distruzione degli oggetti
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.SendSync(WB.IIIParty.Commons.Protocol.IMessage,System.Collections.Generic.List{WB.IIIParty.Commons.Protocol.IMessage}@,System.Collections.Generic.List{WB.IIIParty.Commons.Protocol.MessageValidationException}@)">
            <summary>
            Invia un messaggio request-response in modalità sincrona
            </summary>
            <param name="msgIn">Messaggio di richiesta</param>
            <param name="msgOut">Messaggi di risposta</param>
            <param name="vEx">Eccezioni di validazione</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.SendSync(WB.IIIParty.Commons.Protocol.IMessage,System.Collections.Generic.List{WB.IIIParty.Commons.Protocol.IMessage}@,System.Collections.Generic.List{WB.IIIParty.Commons.Protocol.MessageValidationException}@,System.TimeSpan)">
            <summary>
            Invia un messaggio request-response in modalità sincrona
            </summary>
            <param name="msgIn">Messaggio di richiesta</param>
            <param name="msgOut">Messaggi di risposta</param>
            <param name="vEx">Eccezioni di validazione</param>
            <param name="timeout">Timeout ricezione risposta</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcpType2.SendAsync(WB.IIIParty.Commons.Protocol.IMessage,WB.IIIParty.Commons.Protocol.dAsyncCallback,System.Object)">
            <summary>
            Invia un messaggio request-response in modalità asincrona
            </summary>
            <param name="msg">Messaggio di richiesta</param>
            <param name="callback">Callback di risposta</param>
            <param name="extra">Include dati extra che vengono notificati alla callback</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.HTTPPostClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.HTTPPostClient.#ctor(System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Costruttore connessione con proxy.
            </summary>
            <param name="_url">Indirizzo server web.</param>
            <param name="_timeout">Timeout</param>
            <param name="_proxyIp">Indirizzo del proxy.</param>
            <param name="_proxyPort">Porta del proxy.</param>
            <param name="_userNameForProxy">Credenziali di accesso per il proxy, nome utente</param>
            <param name="_passwordForProxy">Credenziali di accesso per il proxy, password</param>
            <param name="_dominioForProxy">Credenziali di accesso per il proxy, dominio</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.HTTPPostClient.#ctor(System.String,System.Int32)">
            <summary>
            Costruttore connessione senza proxy.
            </summary>
            <param name="_url">Indirizzo server web.</param>
            <param name="_timeout">Timeout</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.HTTPPostClient.OnDataReceived(System.Byte[])">
            <summary>
            Gestione dell'evento di ricezione dei dati.
            </summary>
            <param name="_data"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.HTTPPostClient.OnAsyncDataReceived(System.Byte[])">
            <summary>
            Gestione dell'evento di ricezione dei dati.
            </summary>
            <param name="_data"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.HTTPPostClient.FireOnTrace(WB.IIIParty.Commons.Protocol.TraceDirections,System.Byte[],System.String)">
            <summary>
            Gestione dell'evento di Trace.
            </summary>
            <param name="_direction"></param>
            <param name="_data"></param>
            <param name="_deascription"></param>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.HTTPPostClient.OnTrace">
            <summary>
            
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.HTTPPostClient.DataReceived">
            <summary>
            
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.HTTPPostClient.AsyncDataReceived">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.HTTPPostClient.SendAsync(System.Byte[])">
            <summary>
            
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.HTTPPostClient.Send(System.Byte[])">
            <summary>
            
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.Pinger">
            <summary>
            Diagnostica lo stato di connessione alla rete dei dispositivi ed avvisa quando cambiano stato
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.Pinger.#ctor(System.Net.IPAddress,System.TimeSpan,System.Int32)">
            <summary>
            Costruttore
            </summary>
            <param name="ip">Indirizzo IP del dispositivo da controllare</param>
            <param name="sTime">Tempo di gap tra un ping e l'altro</param>
            <param name="rCount">numero di tentativi falliti prima di dichiarare che il dispositivo è disconnesso</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.Pinger.#ctor(System.Net.IPAddress,System.TimeSpan,System.Int32,System.Int32)">
            <summary>
            Costruttore
            </summary>
            <param name="ip">Indirizzo IP del dispositivo da controllare</param>
            <param name="sTime">Tempo di gap tra un ping e l'altro</param>
            <param name="rCount">numero di tentativi falliti prima di dichiarare che il dispositivo è disconnesso</param>
            <param name="Ttl">numero massimo di router che possono essere attraversati dal pacchetto</param>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.Pinger.IpAddress">
            <summary>
            Ritorna l'indirizzo IP
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.Pinger.ScanTime">
            <summary>
            Ritorna il tempo di scansione
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.Pinger.Ttl">
            <summary>
            Ritorna il time to live
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.Pinger.Status">
            <summary>
            ritorna lo stato misurato del dispositivo
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.Pinger.Start">
            <summary>
            Lancia il Thread
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.Pinger.Stop">
            <summary>
            Ferma il thread
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.Pinger.OnStatusChanged">
            <summary>
            Verifica se l'oggetto si è iscritto all'evento ed in caso positivo lo genera
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.Pinger.IsAlive">
            <summary>
            Pinga il dispositivo e ne ritorna lo stato
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.Pinger.LifeChanged">
            <summary>
            Verifica lo stato del dispositivo
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.PingerStatusChangedEventArgs">
            <summary>
            Contiene i dati da inviare nel caso un dispositivo lanci l'evento
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.PingerStatusChangedEventArgs.#ctor(System.Net.IPAddress,System.Boolean)">
            <summary>
            Costruttore
            </summary>
            <param name="_address">Indirizzo IP del dispositivo che genera l'evento</param>
            <param name="_status">Stato del dispositivo (true = connesso, false = disconnesso)</param>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.PingerStatusChangedEventArgs.Address">
            <summary>
            Ritorna l'indirizzo del dispositivo
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.PingerStatusChangedEventArgs.Status">
            <summary>
            Ritorna lo stato del dispositivo (true = connesso, false = disconnesso)
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.Servers">
            <summary>
            Enumera i server gestiti dalla connessione
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.Servers.Primary">
            <summary>
            Server primario
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.Servers.Sencodary">
            <summary>
            Server secondario
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.ServerInfo">
            <summary>
            Contiene le informazioni di un server
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.ServerInfo.Server">
            <summary>
            Tipologia di server
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.ServerInfo.IpAddress">
            <summary>
            Indirizzo ip
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.ServerInfo.Port">
            <summary>
            Porta
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.ConnectEvent">
            <summary>
            Delega la notifica della connessione avvenuta ad uno dei server
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.DisconnectEvent">
            <summary>
            Delega la notifica della disconnessione da tutti e due i server
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.ServerConnectEvent">
            <summary>
            Delega la notifica della connessione avvenuta ad un server
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.ServerDisconnectEvent">
            <summary>
            Delaga la notifica della disconnessione da un server
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp">
            <summary>
            Classe per la definizione del client ridondante
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.trLog">
            <summary>
            Log
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.strParserPrim">
            <summary>
            Stream parser per l'inizializzazione del client
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.strParserSec">
            <summary>
            Stream parser per l'inizializzazione del client
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.clientPrinc">
            <summary>
            Client principale
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.clientSec">
            <summary>
            Client secondario
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.infoServerPrimary">
            <summary>
            Struttura che memorizza i dati dei server primario
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.infoServerSecondary">
            <summary>
            Struttura che memorizza i dati dei server secondario
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.primaryConnected">
            <summary>
            Stato di connessione client primario
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.secondaryConnected">
            <summary>
            Stato di connessione client secondario
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.isRedundant">
            <summary>
            
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.OnConnect">
            <summary>
            Notifica la connessione avvenuta ad almeno uno dei server
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.OnDisconnect">
            <summary>
            Notifica la disconnessione da tutti e due i server
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.OnServerConnect">
            <summary>
            Notifica la connessione avvenuta ad un server
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.OnServerDisconnect">
            <summary>
            Notifica la disconnessione da un server
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.#ctor(System.String,System.Int32,System.TimeSpan,WB.IIIParty.Commons.Logger.ITraceLog,WB.IIIParty.Commons.Protocol.IMessageParser,System.TimeSpan)">
            <summary>
            Costruttore di definizione
            </summary>
            <param name="primaryIpAddress">Indirizzo ip del server primario</param>
            <param name="primaryPort">Porta del server primario</param>
            <param name="reconnectScanTime">Tempo di riconnessione</param>
            <param name="tr">Trace logger</param>
            <param name="_parser">Interfaccia di parsing dei messaggi</param>
            <param name="_syncTimeout">Timeout di invio messaggi in modalità sincrona</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.#ctor(System.String,System.Int32,System.String,System.Int32,System.TimeSpan,WB.IIIParty.Commons.Logger.ITraceLog,WB.IIIParty.Commons.Protocol.IMessageParser,System.TimeSpan)">
            <summary>
            Costruttore di definizione
            </summary>
            <param name="primaryIpAddress">Indirizzo ip del server primario</param>
            <param name="primaryPort">Porta del server primario</param>
            <param name="secondaryIpAddress">Indirizzo ip del server secondario</param>
            <param name="secondaryPort">Porta del server secondario</param>
            <param name="reconnectScanTime">Tempo di riconnessione</param>
            <param name="tr">Trace logger</param>
            <param name="_parser">Parser dei messaggi di protocollo</param>
            <param name="_syncTimeout">Timeout di esecuzione dei messaggi in modlaità sincrona</param>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.IsConnected">
            <summary>
            Ritorna lo stato di connessione ad un server (stato di connesso = 1 solo server connesso)
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.IsPrimaryConnected">
            <summary>
            Ritorna lo stato di connessione al server primario
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.IsRedundant">
            <summary>
            Ritorna se abilitata la ridondanza di client
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.IsSecondaryConnected">
            <summary>
            Ritorna lo stato di connessione al server secondarion
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.InfoServerPrimary">
            <summary>
            Ritorna le informazioni del server primary
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.InfoServerSecondary">
            <summary>
            Ritorna le informazioni del server secondary
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.PrimaryStream">
            <summary>
            Ritorna l'interfaccia stream del primo client tcp
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.SecondaryStream">
            <summary>
            Ritorna l'interfaccia stream del secondo client tcp
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.Disconnect">
            <summary>
            Metodo per la disconnessione dei client
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.ForceDisconnect">
            <summary>
            Metodo per la chiusura della connessione che non termina il thread di riconnessione
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.Connect">
            <summary>
            Metodo per la connessione dei client
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.clientPrinc_OnConnect">
            <summary>
            Client principale connesso
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.clientSec_OnConnect">
            <summary>
            Client secondario connesso
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.EvaluateConnectionState">
            <summary>
            Metodo per la vzalutazione della connessione
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.clientPrinc_OnDisconnect">
            <summary>
            Client primario disconnesso
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.clientSec_OnDisconnect">
            <summary>
            Client secondario disconnesso
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.clientPrinc_OnTrace(WB.IIIParty.Commons.Protocol.IStream,WB.IIIParty.Commons.Protocol.TraceDirections,System.Byte[],System.String)">
            <summary>
            Evento on trace del client primario
            </summary>
            <param name="sender"></param>
            <param name="direction"></param>
            <param name="data"></param>
            <param name="description"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.clientSec_OnTrace(WB.IIIParty.Commons.Protocol.IStream,WB.IIIParty.Commons.Protocol.TraceDirections,System.Byte[],System.String)">
            <summary>
            Evento ontrace del client secondario
            </summary>
            <param name="sender"></param>
            <param name="direction"></param>
            <param name="data"></param>
            <param name="description"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.strParserPrim_MessageReceived(WB.IIIParty.Commons.Protocol.IMessage,WB.IIIParty.Commons.Protocol.MessageValidationException)">
            <summary>
            Ricezione dei messaggi 
            </summary>
            <param name="msg">messaggio ricevuto</param>
            <param name="error">eventuale eccezione</param>       
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.strParserSec_MessageReceived(WB.IIIParty.Commons.Protocol.IMessage,WB.IIIParty.Commons.Protocol.MessageValidationException)">
            <summary>
            Ricezione dei messaggi 
            </summary>
            <param name="msg">messaggio ricevuto</param>
            <param name="error">eventuale eccezione</param>       
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.strParserPrim_OnMessageParseError(WB.IIIParty.Commons.Protocol.MessageParseException)">
            <summary>
            Errore nel parse dei dati 
            </summary>
            <param name="error">errore</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.strParserSec_OnMessageParseError(WB.IIIParty.Commons.Protocol.MessageParseException)">
            <summary>
            Errore nel parse dei dati 
            </summary>
            <param name="error">errore</param>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.MessageReceived">
            <summary>
            Notifica la ricezione di un messaggio da uno dei due server
            </summary>         
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.OnMessageParseError">
            <summary>
            Errore di parsing del messaggio
            </summary>        
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.Send(WB.IIIParty.Commons.Protocol.IMessage)">
            <summary>
            Invia il messaggio al server connesso
            </summary>
            <param name="msg">messaggio da inviare</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.Dispose">
            <summary>
            Metodo per la distruzione degli oggetti
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.SendSync(WB.IIIParty.Commons.Protocol.IMessage,System.Collections.Generic.List{WB.IIIParty.Commons.Protocol.IMessage}@,System.Collections.Generic.List{WB.IIIParty.Commons.Protocol.MessageValidationException}@)">
            <summary>
            Invia un messaggio request-response in modalità sincrona
            </summary>
            <param name="msgIn">Messaggio di richiesta</param>
            <param name="msgOut">Messaggi di risposta</param>
            <param name="vEx">Eccezioni di validazione</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.SendAsync(WB.IIIParty.Commons.Protocol.IMessage,WB.IIIParty.Commons.Protocol.dAsyncCallback,System.Object)">
            <summary>
            Invia un messaggio request-response in modalità asincrona
            </summary>
            <param name="msg">Messaggio di richiesta</param>
            <param name="callback">Callback di risposta</param>
            <param name="extra">Include dati extra che vengono notificati alla callback</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.RedundantClientTcp.SendSync(WB.IIIParty.Commons.Protocol.IMessage,System.Collections.Generic.List{WB.IIIParty.Commons.Protocol.IMessage}@,System.Collections.Generic.List{WB.IIIParty.Commons.Protocol.MessageValidationException}@,System.TimeSpan)">
            <summary>
            Invia un messaggio request-response in modalità sincrona
            </summary>
            <param name="msgIn">Messaggio di richiesta</param>
            <param name="msgOut">Messaggi di risposta</param>
            <param name="vEx">Eccezioni di validazione</param>
            <param name="timeout">Timeout ricezione risposta</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.TcpServerConnection">
            <summary>
            Implementa una connessione TCP/IP lato Server
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.TcpServerConnection.DataReceived">
            <summary>
            Avvenuta ricezione dati: evento da concatenare all'evento OnReceive  
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.TcpServerConnection.DisconnectEventHandler">
            <summary>
            Notifica la Disconnessione di un Client
            </summary>
            <param name="sender">ServerTCP</param>
            <param name="e">Parametri</param>
            <param name="DisconnectByServer">Indica se l'implementatore ha richiamato la disconnessione del Socket</param>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.TcpServerConnection.OnDisconnect">
            <summary>
            Delega la ricezione di un evento OnDisconnect
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.TcpServerConnection.ConnectionId">
            <summary>
            Ritorna l'identificativo univoco della connessione
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.TcpServerConnection.Handle">
            <summary>
            Ritorna l'identificativo univoco della connessione
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.TcpServerConnection.Connected">
            <summary>
            Client Connesso
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.TcpServerConnection.RemoteEndPoint">
            <summary>
            Client Remoto
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpServerConnection.#ctor(System.Net.Sockets.Socket,System.Int32)">
            <summary>Associa la classe TcpServerConnection a un Soket esistente</summary>
            <param name="client">Socket Connesso</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpServerConnection.Send(System.Byte[])">
            <summary>Invia dati al Socket</summary>
            <param name="byte_data">Dati da inviare</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpServerConnection.DisconnectSocket(System.Boolean)">
            <summary>Disconnette tutti i Sockets</summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.TcpServerConnection.OnTrace">
            <summary>
            Implementa l'evento di Trace del flusso di dati
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.TCPEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TCPEventArgs.#ctor(System.Byte[],System.String,System.Net.EndPoint)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="socketkey"></param>
            <param name="endpoint"></param>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.TCPEventArgs.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.TCPEventArgs.SocketKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.TCPEventArgs.EndPoint">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.TcpServer">
            <summary>Implementa un Server TCP</summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpServer.#ctor(System.Int32)">
            <summary>
            Costruttore
            </summary>
            <param name="port">Porta di ricezione</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpServer.#ctor">
            <summary>Costruttore</summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.TcpServer.LocalPort">
            <summary>
            Porta di ricezione TCP
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.TcpServer.InputBuffer">
            <summary>
            Dimensione del buffer di ricezione
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.TcpServer.ActiveConnections">
            <summary>
            Connessioni Correnti
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.TcpServer.ActiveConnectionsCount">
            <summary>
            Numero di Connessioni Correnti
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.TcpServer.LocalIpAddress">
            <summary>
            Indirizzo sul quale viene effettuato il Bind
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.TcpServer.ConnectEventHandler">
            <summary>
            Delega l'evento BeginConnect
            </summary>
            <param name="sender">Oggetto TcpServerConnection</param>
            <param name="e">Args</param>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.TcpServer.BeginConnect">
            <summary>
            Implementa l'evento di connessione
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.TcpServer.DisconnectEventHandler">
            <summary>
            Delega l'evento BeginConnect
            </summary>
            <param name="sender">Oggetto TcpServerConnection</param>
            <param name="e">Args</param>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.TcpServer.BeginDisconnect">
            <summary>
            Implementa l'evento di disconnessione
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpServer.Start">
            <summary>Abilita il Server</summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpServer.Stop">
            <summary>Disabilita il Server</summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpServer.Disconnect(System.String)">
            <summary>Disconnette un Client</summary>
            <param name="connectionId">Identificativo della connessione</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpServer.Disconnect">
            <summary>Disconnette tutti i Clients</summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpServer.disconnect_socket(System.Net.Sockets.Socket)">
            <summary>Disconnette un Client da un oggetto Socket</summary>
            <param name="socket">Socket</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpServer.BeginAccept(System.IAsyncResult)">
            <summary>Evento Connessione Avvenuta</summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpServer.DisconnectSocket(System.Object,WB.IIIParty.Commons.Net.Sockets.TCPEventArgs,System.Boolean)">
            <summary>
            Client Disconnesso
            </summary>
            <param name="sender">Client</param>
            <param name="e">Parametri</param>
            <param name="DisconnectByServer">Indica se il socket è stato disconnesso dall'implementatore</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.UdpDriver">
            <summary>
            Implementa un Driver Udp
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.UdpDriver.#ctor(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Costruttore
            </summary>
            <param name="_localPort">Porta locale di ricezione</param>
            <param name="_remotePort">Porta remota di ricezione</param>
            <param name="_remoteIpAddress">Indirizzo Ip remoto</param>
            <param name="_inputBufferSize">Lunghezza in bytes del buffer di ricezione</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.UdpDriver.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Costruttore
            </summary>
            <param name="_localPort">Porta locale di ricezione</param>
            <param name="_remotePort">Porta remota di ricezione</param>
            <param name="_remoteIpAddress">Indirizzo Ip remoto</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.UdpDriver.#ctor(System.Int32,System.String,System.Int32,System.String)">
            <summary>
            Costruttore
            </summary>
            <param name="_localPort">Porta locale di ricezione</param>
            <param name="localIpAddress">Indirizzo Ip locale</param>
            <param name="_remotePort">Porta remota di ricezione</param>
            <param name="_remoteIpAddress">Indirizzo Ip remoto</param>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.UdpDriver.LocalEndPoint">
            <summary>
            EndPoint locale
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.UdpDriver.RemoteEndPoint">
            <summary>
            EndPoint remoto
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.UdpDriver.IsRunning">
            <summary>
            Indica se il Driver è in esecuzione
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.UdpDriver.InputBufferSize">
            <summary>
            Ritorna la lunghezza in bytes del buffer di ricezione
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.UdpDriver.Start">
            <summary>
            Avvia il driver Udp
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.UdpDriver.Stop">
            <summary>
            ferma il driver Udp
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.UdpDriver.ChangeLocalAddress(System.String,System.Int32)">
            <summary>
            Modifica la porta di ricezione locale
            </summary>
            <param name="_localaddress"></param>
            <param name="_localPort"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.UdpDriver.ChangeLocalPort(System.Int32)">
            <summary>
            Modifica la porta di ricezione locale
            </summary>
            <param name="_localPort"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.UdpDriver.ChangeRemoteAddress(System.Int32,System.String)">
            <summary>
            Modifica l'indirizzo Ip Remoto
            </summary>
            <param name="_remotePort"></param>
            <param name="_remoteIpAddress"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.UdpDriver.SendData(System.Byte[])">
            <summary>
            Invia un array di bytes sul socket
            </summary>
            <param name="msg">Array di bytes</param>
            <returns>Ritorna il numero di bytes inviati</returns>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.UdpDriver.DataReceived">
            <summary>
            Implementa l'evento di ricezione di un array di bytes
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.UdpDriver.Send(System.Byte[])">
            <summary>
            Invia un array di bytes sul socket
            </summary>
            <param name="msg">Array di bytes</param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.UdpDriver.Dispose">
            <summary>
            Ferma il driver e libera le risorse
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.UdpDriver.OnTrace">
            <summary>
            Implementa l'evento di Trace
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.TcpClient">
            <summary>
            Implemenat un Client TCP/IP
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.TcpClient.ConnectEvent">
            <summary>
            Delega l'evento di connessione del Socket
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Net.Sockets.TcpClient.DisconnectEvent">
            <summary>
            Delega l'evento di disconnessione del Socket
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Net.Sockets.TcpClient.autoreconnect">
            <summary>
            TRUE se il client prevede il tentativo di riconnessione automatica 
            in caso di disconnessione. False, altrimenti.
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.TcpClient.DataReceived">
            <summary>
            Implementa l'evento di avvenuta ricezione dati
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.TcpClient.OnConnect">
            <summary>
            Implementa l'evento di avvenuta connessione
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.TcpClient.OnDisconnect">
            <summary>
            Implementa l'evento di avvenuta disconnessione
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.TcpClient.ConnectFailure">
            <summary>
            Implementa l'evento di connessione fallita
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpClient.#ctor(System.String,System.Int32,System.TimeSpan,System.Boolean,System.Int32)">
            <summary>
            Costruttore
            </summary>
            <param name="address">Indirizzo Ip del server</param>
            <param name="port">Porta di ascolto del server</param>
            <param name="reconnectscantime">Tempo di riconnessione automatica</param>
            <param name="_autoreconnect"> True per abilitare il tentativo di riconnessione al server.</param>
            <param name="inputBufferLength"> Lunghezza in bytes del buffer di input.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpClient.#ctor(System.String,System.Int32,System.TimeSpan,System.Boolean)">
            <summary>
            Costruttore AutoReconnect custom -  - Buffer di input a 1024
            </summary>
            <param name="address"></param>
            <param name="port"></param>
            <param name="reconnectscantime"></param>
            <param name="_autoreconnect"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpClient.#ctor(System.String,System.Int32,System.TimeSpan)">
            <summary>
            Costruttore AutoReconnect abilitato - Buffer di input a 1024
            </summary>
            <param name="address">Indirizzo Ip del server</param>
            <param name="port">Porta di ascolto del server</param>
            <param name="reconnectscantime">Tempo di riconnessione automatica</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpClient.CheckConnectionThread">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpClient.ReinizializeSocket">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.TcpClient.IsConnected">
            <summary>
            Ritorna lo stato di connessione del socket.
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.TcpClient.LocalEndPoint">
            <summary>
            Ritorna l'end point locale del socket (null se socket non connesso)
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Net.Sockets.TcpClient.RemoteEndPoint">
            <summary>
            Ritorna l'end point remoto del socket (null se socket non connesso)
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpClient.CloseConnection">
            <summary>
            Chiude la connessione ma non disabilita il Driver
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpClient.ConnectWait(System.TimeSpan)">
            <summary>
            Abilita il Client TcpIp e attende la prima connessione
            </summary>
            <param name="connectTimeout">Imposta il timeout di attesa alla prima connessione</param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpClient.WaitForConnected(System.TimeSpan)">
            <summary>
            Attende lo stato di connessione del socket
            </summary>
            <param name="connectTimeout">Imposta il timeout di attesa dello stato di connesso</param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpClient.Connect(System.TimeSpan)">
            <summary>
            Abilita il Client TcpIp
            </summary>
            <param name="connectdelay">Imposta un ritardo sul primo tentativo di connessione</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpClient.Disconnect">
            <summary>
            Disabilita il Client TcpIp
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpClient.Send(System.Byte[])">
            <summary>
            Invia un array di bytes sul Socket
            </summary>
            <param name="byteToSend">Dati da inviare</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpClient.SendData(System.Byte[])">
            <summary>
            Invia un array di bytes sul Socket
            </summary>
            <param name="byteToSend">Dati da inviare</param>
            <returns>Ritorna il numero di bytes da inviare</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Net.Sockets.TcpClient.Dispose">
            <summary>
            Disabilita il Client Tcp e libera le risorse allocate
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Net.Sockets.TcpClient.OnTrace">
            <summary>
            Implementa l'evento di Trace
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.Serialization.BinaryMessageSerializer">
            <summary>
            Implemena l'interfaccia IMessageParser per la serializzazione binaria di messaggi su uno stream
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.BinaryMessageSerializer.CanReadLength(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.BinaryMessageSerializer.GetLength(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.BinaryMessageSerializer.ParseMessage(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.BinaryMessageSerializer.SerializeMessage(WB.IIIParty.Commons.Protocol.IMessage)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.BinaryMessageSerializer.SerializeIsSupported">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.Serialization.CustomMessageSerializer">
            <summary>
            Implemena l'interfaccia IMessageParser per la serializzazione binaria di messaggi su uno stream
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.Serialization.CustomMessageSerializer.MessageMap">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.CustomMessageSerializer.#ctor(System.String,System.Reflection.Assembly)">
            <summary>
            Questo costruttore a differenza degli altri serializzatori 
            specializzati deve raccogliere informazioni relative alla classe
            in cui viene usato in modo da creare delle tabelle hash di
            associazione : MessageID/IMessage e Ordine/Property
            Queste tabelle hash verranno successivamente utilizzate nei
            metodi ParseMessage e SerializeMessage in modo da ricomporre
            le caratteristiche del messaggio.
            Per identificare le classi e le proprietà utili allo scopo
            sono state create le classi "AttributeMessage" e "AttributeProperty"
            </summary>
            <param name="nmspace"></param>
            <param name="assembly"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.CustomMessageSerializer.ExportDocument">
            <summary>
            Metodo per esportazione documento.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.CustomMessageSerializer.TableAddRow(AODL.Document.Content.Tables.Table,AODL.Document.TextDocuments.TextDocument,System.String,System.String,System.String,System.String)">
            <summary>
            Aggiunge una riga alla tabella
            </summary>
            <param name="table"></param>
            <param name="document"></param>
            <param name="pname"></param>
            <param name="ptype"></param>
            <param name="psize"></param>
            <param name="pdesc"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.CustomMessageSerializer.GetTypeSize(System.Type)">
            <summary>
            Return descriptive size of a Type
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.CustomMessageSerializer.AddPageBreak(AODL.Document.TextDocuments.TextDocument)">
            <summary>
            Add a page break to the document
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.CustomMessageSerializer.CreateParagraph(AODL.Document.TextDocuments.TextDocument,System.String,System.String)">
            <summary>
            Creazione di un paragrafo
            </summary>
            <param name="document"></param>
            <param name="stile"></param>
            <param name="testo"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.CustomMessageSerializer.CanReadLength(System.Byte[])">
            <summary>
            Determina le condizioni minime per poter conoscere 
            la lunghezza del messaggio
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.CustomMessageSerializer.GetLength(System.Byte[])">
            <summary>
            Ritorna la lunghezza del messaggio
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.CustomMessageSerializer.ParseMessage(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.CustomMessageSerializer.ParseMessage(System.Byte[],System.Boolean)">
            <summary>
            Deserializza:
            Converte un array di bytes solitamente ricevuto tramite TCP
            in una classe IMessage da poter usare nell'applicazione
            </summary>
            <param name="data"></param>
            <param name="foo"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.CustomMessageSerializer.SerializeMessage(WB.IIIParty.Commons.Protocol.IMessage)">
            <summary>
            Serializza:
            Converte una generica classe IMessage in un array di bytes
            da poter inviare tramite TCP
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.CustomMessageSerializer.SerializeMessage(System.Object)">
            <summary>
            Serializza:
            Converte una generica classe IMessage in un array di bytes
            da poter inviare tramite TCP
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.CustomMessageSerializer.SerializeIsSupported">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.Serialization.MessageInfo">
            <summary>
            Definisce la classe contenitore delle informazioni di ogni messaggio
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.MessageInfo.ord2prop">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.MessageInfo.msgtype">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.Serialization.StringTypeEnum">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.StringTypeEnum.Null">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.StringTypeEnum.Ascii">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.StringTypeEnum.Unicode">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.Serialization.PropertyOrderInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.Serialization.PropertyOrderInfo.OrderNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.Serialization.PropertyOrderInfo.PropInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.Serialization.PropertyOrderInfo.StringType">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.Serialization.PropertyOrderInfo.IsClass">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.Serialization.PropertyOrderInfo.IsList">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.Serialization.PropertyOrderInfo.IsArray">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.Serialization.PropertyOrderInfo.IsEnum">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.Serialization.TetMessageAttribute">
            <summary>
            Definisce la classe base da cui utilizzare gli attributi per
            identificazione dei messaggi
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.Serialization.TetMessageAttribute.MsgId">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.TetMessageAttribute.#ctor(System.UInt16)">
            <summary>
            
            </summary>
            <param name="msgId"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.Serialization.TetBaseMessageAttribute">
            <summary>
            Attributo utilizzato per identificare un Message utilizzato come header del
            protocollo
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.TetBaseMessageAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.Serialization.TetPropertyAttribute">
            <summary>
            Definisce la classe base da cui utilizzare gli attributi per
            identificazione delle proprietà (componenti) dei messaggi
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.Serialization.TetPropertyAttribute.PropertyOrder">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.TetPropertyAttribute.#ctor(System.UInt16)">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.Serialization.TetPropertyUnicodeAttribute">
            <summary>
            Definisce l'attributo che indica una stringa di tipo unicode
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.TetPropertyUnicodeAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.Serialization.Exceptions.XmlSerializeException">
            <summary>
            Eccezione generata quando ci sono errori di serializazione del messaggio XML
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.Exceptions.XmlSerializeException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.Serialization.Exceptions.XmlDeserializeException">
            <summary>
            Eccezione generata quando ci sono errori di deserializazione del messaggio XML
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.Exceptions.XmlDeserializeException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.Serialization.Exceptions.SerializerNotFoundException">
            <summary>
            Eccezione generata quando non viene trovato un serializer valido per il messaggio XML
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.Exceptions.SerializerNotFoundException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.Serialization.IXmlMessageSerializerInfo">
            <summary>
            Definisce l'interfaccia che restituisce un serializer xml a partire dal tipo di messaggio
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.IXmlMessageSerializerInfo.GetXmlSerializer(System.String)">
            <summary>
            Ritorna il serializer del messaggio corrispondente
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.Serialization.TetTypes">
            <summary>
            Enumerato dei tipi gestiti
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.Bool">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.Byte">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.SByte">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.Short">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.Ushort">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.Int">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.UInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.Long">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ULong">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.Single">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.Double">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.String">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.Datetime">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.Timespan">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.Enum">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ArrayOfBool">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ArrayOfByte">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ArrayOfSByte">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ArrayOfShort">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ArrayOfUshort">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ArrayOfInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ArrayOfUInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ArrayOfLong">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ArrayOfULong">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ArrayOfSingle">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ArrayOfDouble">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ArrayOfString">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ArrayOfDatetime">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ArrayOfTimespan">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ArrayOfEnum">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ListOfBool">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ListOfByte">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ListOfSByte">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ListOfShort">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ListOfUshort">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ListOfInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ListOfUInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ListOfLong">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ListOfULong">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ListOfSingle">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ListOfDouble">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ListOfString">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ListOfDatetime">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ListOfTimespan">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetTypes.ListOfEnum">
            <summary>
            
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.Serialization.TetByteFiller">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.Serialization.TetByteFiller.LastByte">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.Serialization.TetByteFiller.LastBit">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.Serialization.TetByteFiller.Data">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.Serialization.TetByteFiller.typeDict">
            <summary>
            Lista/enumerato che ha lo scopo di facilitare la comprensione
            dei tipi usati nel codice per la specializzazione
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.TetByteFiller.#ctor">
            <summary>
            Costruttore
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.TetByteFiller.IsList(System.Type)">
            <summary>
            Ritorna true se il tipo passato come parametro non fa
            parte della lista dei tipi supportati
            </summary>
            <param name="caino"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.TetByteFiller.IsArray(System.Type)">
            <summary>
            Ritorna true se il tipo passato come parametro non fa
            parte della lista dei tipi supportati
            </summary>
            <param name="caino"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.TetByteFiller.IsClass(System.Type)">
            <summary>
            Ritorna true se il tipo passato come parametro non fa
            parte della lista dei tipi supportati
            </summary>
            <param name="caino"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.TetByteFiller.GetSize">
            <summary>
            Ritorna la dimensione dello stream di byte
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.TetByteFiller.GetSize(System.Type)">
            <summary>
            
            </summary>
            <param name="tipo"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.TetByteFiller.Serialize(WB.IIIParty.Commons.Protocol.Serialization.PropertyOrderInfo,System.Object)">
            <summary>
            Ritorna l'array di bytes rappresentante l'oggetto passato
            </summary>
            <param name="poi"></param>
            <param name="idata"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.TetByteFiller.DeserializeExternal(System.Int32,System.Byte[])">
            <summary>
            DeserializeExternal
            </summary>
            <param name="bytesLength"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.TetByteFiller.Deserialize(WB.IIIParty.Commons.Protocol.Serialization.PropertyOrderInfo,System.Byte[]@)">
            <summary>
            Ritorna l'oggetto del tipo assegnato convertito da un array di bytes
            </summary>
            <param name="poi"></param>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.TetByteFiller.Clear">
            <summary>
            Elimina tutti gli elementi dalle liste
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.TetByteFiller.ByteArrayToString(System.Byte[],System.Boolean)">
            <summary>
            
            </summary>
            <param name="arlist"></param>
            <param name="unicode"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.TetByteFiller.StringToByteArray(System.String,System.Boolean)">
            <summary>
            Trasforma una stringa in un array di bytes
            con la possibilità di scegliere se usare stringhe unicode oppure no
            </summary>
            <param name="testo"></param>
            <param name="unicode"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.TetByteFiller.BitArrayToByte(System.Int32,System.Boolean[])">
            <summary>
            Converte un Array di bits in un byte all'indice specificato
            </summary>
            <param name="byteindex">Serve in caso l'array sia più lungo di 8</param>
            <param name="bArray"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.TetByteFiller.GetStream">
            <summary>
            Ritorna l'array di bytes serializzato
            </summary>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.Serialization.XmlMessageSerializer">
            <summary>
            Implemena l'interfaccia IMessageParser per la serializzazione xml di messaggi su uno stream
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.XmlMessageSerializer.#ctor(WB.IIIParty.Commons.Protocol.Serialization.IXmlMessageSerializerInfo)">
            <summary>
            
            </summary>
            <param name="_xmlMessageSerializerInfo"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.XmlMessageSerializer.CanReadLength(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.XmlMessageSerializer.GetLength(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.XmlMessageSerializer.ParseMessage(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.XmlMessageSerializer.SerializeMessage(WB.IIIParty.Commons.Protocol.IMessage,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.XmlMessageSerializer.SerializeMessage(WB.IIIParty.Commons.Protocol.IMessage)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.Serialization.XmlMessageSerializer.SerializeIsSupported">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.dAsyncCallback">
            <summary>
            Delega la ricezione di un messaggio asincrono
            </summary>
            <param name="msg">Messaggio ricevuto</param>
            <param name="error">Eventuale eccezione di validazione generata</param>
            <param name="extra">Dati extra inclusi alla send async</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.TraceDirections">
            <summary>
            Definisce la direzione del flusso di bytes
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.TraceDirections.Input">
            <summary>
            Flusso di dati in Input
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.TraceDirections.Output">
            <summary>
            Flusso di dati in Output
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.dOnTrace">
            <summary>
            Delega la ricezione di un evento di Trace
            </summary>
            <param name="sender">Gestore del flusso di dati</param>
            <param name="direction">Direzione del flusso di dati</param>
            <param name="data">Flusso di dati scambiati</param>
            <param name="description">Dettaglio dell'evento di Trace</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.dOnMessageParseError">
            <summary>
            Delega la ricezione di un evento OnMessageParseError
            </summary>
            <param name="error">Errore di Parsing generato</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.MessageParseException">
            <summary>
            Eccezione di Parsing di un messaggio
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.MessageParseException.#ctor">
            <summary>
            Ctr1
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.MessageParseException.#ctor(System.String)">
            <summary>
            Ctr1
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.MessageValidationException">
            <summary>
            Eccezione di Validazione di un messaggio
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.MessageValidationException.#ctor">
            <summary>
            Ctr1
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.MessageValidationException.#ctor(System.String)">
            <summary>
            Ctr2
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.StreamParser">
            <summary>
            Implementa il parser di un protocollo
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.StreamParser.SyncArgs">
            <summary>
            Contiene le informazioni necessarie alla sincronizzazione sincrona
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.StreamParser.SyncArgs.#ctor(System.Threading.AutoResetEvent,System.Int32)">
            <summary>
            Costruttore
            </summary>
            <param name="_waitHandle"></param>
            <param name="_responseCount"></param>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.StreamParser.SyncArgs.WaitHandle">
            <summary>
            Ritorna il wait handle della richiesta sincrona
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.StreamParser.SyncArgs.RetMessage">
            <summary>
            Ritorna o imposta il messaggio di risposta
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.StreamParser.SyncArgs.ValidationException">
            <summary>
            Ritorna o imposta l'eccezione di validazione
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.StreamParser.SyncArgs.ResponseCount">
            <summary>
            Ritorna il numero di risposte aspettate
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.StreamParser.SyncArgs.ResponseCounter">
            <summary>
            Ritorna o imposta il numero di risposte ricevute
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.StreamParser.ASyncArgs">
            <summary>
            Contiene le informazioni necessarie alla sincronizzazione asincrona
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.StreamParser.ASyncArgs.#ctor(WB.IIIParty.Commons.Protocol.dAsyncCallback,System.Object)">
            <summary>
            
            </summary>
            <param name="_callback"></param>
            <param name="_extra"></param>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.StreamParser.ASyncArgs.Extra">
            <summary>
            Ritorna il dato custom
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.StreamParser.ASyncArgs.Callback">
            <summary>
            Ritorna la callback di risposta
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.StreamParser.dOnError">
            <summary>
            Delega la notifica di un evento di errore
            </summary>
            <param name="ex">Eccezione generata</param>
        </member>
        <member name="E:WB.IIIParty.Commons.Protocol.StreamParser.OnError">
            <summary>
            Implementa l'evento OnError
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.StreamParser.#ctor(WB.IIIParty.Commons.Protocol.IStream,WB.IIIParty.Commons.Protocol.IMessageParser)">
            <summary>
            Costruttore
            </summary>
            <param name="_stream">IStream di scambio di dati</param>
            <param name="_parser">Parser dei messaggi</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.StreamParser.#ctor(WB.IIIParty.Commons.Protocol.IStream,WB.IIIParty.Commons.Protocol.IMessageParser,System.TimeSpan)">
            <summary>
            Costruttore
            </summary>
            <param name="_stream">IStream di scambio di dati</param>
            <param name="_parser">Parser dei messaggi</param>
            <param name="_syncTimeout">Timeout di invio sincrono</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.StreamParser.ResetInputData">
            <summary>
            Pulisce il buffer di ricezione sullo StreamParser
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Protocol.StreamParser.MessageReceived">
            <summary>
            Implementa l'evento di ricezione di un messaggio
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Protocol.StreamParser.OnMessageParseError">
            <summary>
            Delega la ricezione di un messaggio
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.StreamParser.Send(WB.IIIParty.Commons.Protocol.IMessage)">
            <summary>
            Invia un messaggio
            </summary>
            <param name="msg">messaggio da inviare</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.StreamParser.SendSync(WB.IIIParty.Commons.Protocol.IMessage,System.Collections.Generic.List{WB.IIIParty.Commons.Protocol.IMessage}@,System.Collections.Generic.List{WB.IIIParty.Commons.Protocol.MessageValidationException}@,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="msgIn"></param>
            <param name="msgOut"></param>
            <param name="vEx"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.StreamParser.SendSync(WB.IIIParty.Commons.Protocol.IMessage,System.Collections.Generic.List{WB.IIIParty.Commons.Protocol.IMessage}@,System.Collections.Generic.List{WB.IIIParty.Commons.Protocol.MessageValidationException}@)">
            <summary>
            
            </summary>
            <param name="msgIn"></param>
            <param name="msgOut"></param>
            <param name="vEx"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.StreamParser.SendAsync(WB.IIIParty.Commons.Protocol.IMessage,WB.IIIParty.Commons.Protocol.dAsyncCallback,System.Object)">
            <summary>
            
            </summary>
            <param name="msg"></param>
            <param name="callback"></param>
            <param name="extra"></param>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.IMessageParser">
            <summary>
            Definisce l'interfaccia di Parsing di un messaggio necessaria a StreamParser per la decodifica del flusso di dati
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.IMessageParser.CanReadLength(System.Byte[])">
            <summary>
            Ritorna se dai dati a disposizione è possibile calcolare la lunghezza COMPLESSIVA del messaggio
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.IMessageParser.GetLength(System.Byte[])">
            <summary>
            Ritorna la lunghezza COMPLESSIVA del messaggio
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.IMessageParser.ParseMessage(System.Byte[])">
            <summary>
            Effettua la deserializzazione di un messaggio da un array di byte
            Errori di parsing devono essere generati ereditando da MessageParseException
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.IMessageParser.SerializeMessage(WB.IIIParty.Commons.Protocol.IMessage)">
            <summary>
            Effettua la serializzazione di un messaggio in un array di byte
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.IMessageParser.SerializeIsSupported">
            <summary>
            Ritorna se la classe può serializzare un oggetto
            </summary>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.MessageTypes">
            <summary>
            Enumera le tipologie di messaggio
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.MessageTypes.SyncNotSupported">
            <summary>
            Sincronizzazione dei messaggi non supportata
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.MessageTypes.Request">
            <summary>
            Richiesta
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.MessageTypes.Response">
            <summary>
            Risposta
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.MessageTypes.Notification">
            <summary>
            Notifica
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.IMessage">
            <summary>
            Definisce l'interfaccia di un messaggio
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.IMessage.GetByteArray">
            <summary>
            Serializza il messaggio corrente in un array di bytes
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.IMessage.Validate">
            <summary>
            Effettua una validazione del contenuto del messaggio
            Errori di validazione devono essere generati ereditando da MessageValidationException
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.IMessage.Display">
            <summary>
            Ritorna una stringa contenente la stampa dei campi del messaggio
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.IMessage.MessageType">
            <summary>
            Ritorna la tipologia di messaggio
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.IMessage.SyncRef">
            <summary>
            Ritorna il riferimento di sincronizzazione
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Protocol.IMessage.ResponseCount">
            <summary>
            Ritorna il numero di messaggi di tipologia Response attesi dopo l'invio di un messaggio di tipo Request
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.dDataReceived">
            <summary>
            Delega la ricezione di un array di bytes
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.IStream">
            <summary>
            Interfaccia di scambio di un flusso di bytes bidirezionale
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Protocol.IStream.OnTrace">
            <summary>
            Evento che notifica il trace dei dati inviati e ricevuti
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Protocol.IStream.DataReceived">
            <summary>
            Evento di ricezione dati
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.IStream.Send(System.Byte[])">
            <summary>
            Invia un array di dati
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.dMessageReceived">
            <summary>
            Delega la ricezione di un messaggio
            </summary>
            <param name="msg">Messaggio ricevuto</param>
            <param name="error">Eventuale eccezione di validazione generata</param>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.SyncResult">
            <summary>
            Enumera i risultati di  invio sincrono
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.SyncResult.Ok">
            <summary>
            Corretto
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.SyncResult.Timeout">
            <summary>
            Timeout
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.SyncResult.NotAvaiable">
            <summary>
            Invio sincrono non disponibile
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.ASyncResult">
            <summary>
            Enumera i risultati di  invio asincrono
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.ASyncResult.Ok">
            <summary>
            Corretto
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Protocol.ASyncResult.NotAvaiable">
            <summary>
            Invio asincrono non disponibile
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Protocol.IProtocol">
            <summary>
            Definisce l'interfaccia di ricezione e invio di messaggi di un protocollo generico
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Protocol.IProtocol.MessageReceived">
            <summary>
            Notifica la ricezione di un messaggio
            Notifica la generazione di un errore di validazione di un messaggio quando il parametro error è diverso da null
            </summary>
        </member>
        <member name="E:WB.IIIParty.Commons.Protocol.IProtocol.OnMessageParseError">
            <summary>
            Notifica la generazione di un errore di parsing
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.IProtocol.Send(WB.IIIParty.Commons.Protocol.IMessage)">
            <summary>
            Invia un messaggio
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.IProtocol.SendSync(WB.IIIParty.Commons.Protocol.IMessage,System.Collections.Generic.List{WB.IIIParty.Commons.Protocol.IMessage}@,System.Collections.Generic.List{WB.IIIParty.Commons.Protocol.MessageValidationException}@)">
            <summary>
            Invia un messaggio request-response in modalità sincrona
            </summary>
            <param name="msgIn">Messaggio di richiesta</param>
            <param name="msgOut">Messaggi di risposta</param>
            <param name="vEx">Eccezioni di validazione</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.IProtocol.SendSync(WB.IIIParty.Commons.Protocol.IMessage,System.Collections.Generic.List{WB.IIIParty.Commons.Protocol.IMessage}@,System.Collections.Generic.List{WB.IIIParty.Commons.Protocol.MessageValidationException}@,System.TimeSpan)">
            <summary>
            Invia un messaggio request-response in modalità sincrona
            </summary>
            <param name="msgIn">Messaggio di richiesta</param>
            <param name="msgOut">Messaggi di risposta</param>
            <param name="vEx">Eccezioni di validazione</param>
            <param name="timeout">Timeout ricezione risposta</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Protocol.IProtocol.SendAsync(WB.IIIParty.Commons.Protocol.IMessage,WB.IIIParty.Commons.Protocol.dAsyncCallback,System.Object)">
            <summary>
            Invia un messaggio request-response in modalità asincrona
            </summary>
            <param name="msg">Messaggio di richiesta</param>
            <param name="callback">Callback di risposta</param>
            <param name="extra">Include dati extra che vengono notificati alla callback</param>
        </member>
        <member name="T:WB.IIIParty.Commons.TimeStamp.CustomTimeStamp">
            <summary>
            Data -  ora 
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.TimeStamp.CustomTimeStamp.GetTimeStamp">
            <summary>
            Data-ora attuale in UTC.
            </summary>
            <returns>Stringa che rappresenta la data-ora nel formato specificato.</returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Interfaces.IEnabler">
            <summary>
            Definisce l'interfaccia di Abilitazione e Disabilitazione delle funzionalità di una classe
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Interfaces.IEnabler.Enable">
            <summary>
            Abilita le funzionalità dell'oggetto
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Interfaces.IEnabler.Disable">
            <summary>
            Disabilita le funzionalità dell'oggetto
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Interfaces.IEnabler.IsEnable">
            <summary>
            Ritorna l'abilitazione delle funzionalità dell'oggetto
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Interfaces.IEnabler.Initialize">
            <summary>
            Inizializza l'oggetto per rendere attivabili le funzionalità
            </summary>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.IO.Directory">
            <summary>
            Implementa metodi di utility con le directory
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.IO.Directory.SetCurrentDirectory(System.String)">
            <summary>
            Imposta il path passato come working directory corrente
            </summary>
            <returns>Path</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.IO.Directory.SetCurrentDirectory">
            <summary>
            Imposta il path dell'assembly di esecuzione come working directory corrente
            </summary>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.IO.Directory.GetCurrentDirectory">
            <summary>
            Ritorna il path dell'assembly di esecuzione
            </summary>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Security.Cryptography.RijndaelStringCryptography">
            <summary>
            Tools di Codifica e Decodifica Rijndael
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Security.Cryptography.RijndaelStringCryptography.EncodeToFile(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Codifica una stringa di testo su un file con algoritmo Rijndael
            </summary>
            <param name="str">Stringa da codificare</param>
            <param name="file">File di destinazione</param>
            <param name="overwrite">Sovrascrive il file se esiste</param>
            <param name="key">Chiave di codifica a 256 bit</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Security.Cryptography.RijndaelStringCryptography.DecodeFromFile(System.String,System.String)">
            <summary>
            Decodifica un file su una stringa di testo con algoritmo Rijndael
            </summary>
            <param name="file">File da decodificare</param>
            <param name="key">Chiave di codifica a 256 bit</param>
            <returns>Stringa decodificata</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Security.Cryptography.RijndaelStringCryptography.EncodeToFile(System.String,System.String,System.Boolean)">
            <summary>
            Codifica una stringa di testo su un file con una chiave di codifica definita con algoritmo Rijndael
            </summary>
            <param name="str">Stringa da codificare</param>
            <param name="file">File di destinazione</param>
            <param name="overwrite">Sovrascrive il file se esiste</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Security.Cryptography.RijndaelStringCryptography.DecodeFromFile(System.String)">
            <summary>
            Decodifica un file su una stringa di testo con una chiave di codifica definita con algoritmo Rijndael
            </summary>
            <param name="file">File da decodificare</param>
            <returns>Stringa decodificata</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Security.Cryptography.RijndaelStringCryptography.Encode(System.String,System.String)">
            <summary>
            Codifica una stringa con algoritmo Rijndael
            </summary>
            <param name="str">Stringa da codificare</param>
            <param name="key">Chiave di codifica a 256 bit</param>
            <returns>Ritorna la stringa codificata</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Security.Cryptography.RijndaelStringCryptography.Encode(System.String)">
            <summary>
            Codifica una stringa con algoritmo Rijndael
            </summary>
            <param name="str">Stringa da codificare</param>
            <returns>Ritorna la stringa codificata</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Security.Cryptography.RijndaelStringCryptography.Decode(System.String,System.String)">
            <summary>
            Decodifica una stringa con algoritmo Rijndael
            </summary>
            <param name="str">Stringa da decodificare</param>
            <param name="key">Chiave di codifica a 256 bit</param>
            <returns>Ritorna la stringa decodificata</returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Security.Cryptography.RijndaelStringCryptography.Decode(System.String)">
            <summary>
            Decodifica una stringa con algoritmo Rijndael
            </summary>
            <param name="str">Stringa da decodificare</param>
            <returns>Ritorna la stringa decodificata</returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Windows.Forms.FormKeepAlive">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.FormKeepAlive.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.FormKeepAlive.Enable">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.FormKeepAlive.Disable">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.FormKeepAlive.IsEnable">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.FormKeepAlive.Initialize">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Windows.Forms.FormKeepAlive.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.FormKeepAlive.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.FormKeepAlive.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Windows.Forms.KeyboardChangeLanguage">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.KeyboardChangeLanguage.#ctor">
            <summary>
            Keyboard change language
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Windows.Forms.KeyboardChangeLanguage.LanguageManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.KeyboardChangeLanguage.Inizialize(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Inizializza il controllo.
            </summary>
            <param name="_languagesConfigured">Imposta le lingue che da visualizzare, se null o vuota quelle di default, se non presenti tra quelle installate non viene visualizzata.</param>
        </member>
        <member name="P:WB.IIIParty.Commons.Windows.Forms.KeyboardChangeLanguage.CurrentSelectLanguage">
            <summary>
            Return the current select language.
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Windows.Forms.KeyboardChangeLanguage.dUpdateLanguage">
            <summary>
            
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Windows.Forms.KeyboardChangeLanguage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.KeyboardChangeLanguage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.KeyboardChangeLanguage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Windows.Forms.MultiMonitorManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.MultiMonitorManager.ShowWindow(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="window"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.MultiMonitorManager.ActiveWindow(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="window"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.MultiMonitorManager.WindowTopMost(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="window"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.MultiMonitorManager.MoveWindow(System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="window"></param>
            <param name="monitor"></param>
            <returns></returns>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.MultiMonitorManager.MoveWindow(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="window"></param>
            <param name="monitor"></param>
            <returns></returns>
        </member>
        <member name="T:WB.IIIParty.Commons.Windows.Forms.PictureBoxEx">
            <summary>
            Implementa una PictureBox avanzata
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.PictureBoxEx.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Windows.Forms.PictureBoxEx.RenderImage">
            <summary>
            Stretch dell'immagine
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Windows.Forms.PictureBoxEx.StretchImage">
            <summary>
            Stretch dell'immagine
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Windows.Forms.PictureBoxEx.CenterImage">
            <summary>
            Stretch dell'immagine
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Windows.Forms.PictureBoxEx.RotationAngle">
            <summary>
            Angolo di rotazione dell'immagine
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Windows.Forms.PictureBoxEx.VerticalFlip">
            <summary>
            Flip verticale
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Windows.Forms.PictureBoxEx.HorizontalFlip">
            <summary>
            Flip orizzontale
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Windows.Forms.PictureBoxEx.Opacity">
            <summary>
            Opacità
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Windows.Forms.PictureBoxEx.Image">
            <summary>
            Immagine renderizzata
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Windows.Forms.PictureBoxEx.InterpolationMode">
            <summary>
            Tipo di interpolazione durante la renderizzazione dell'immagine
            </summary>
        </member>
        <member name="P:WB.IIIParty.Commons.Windows.Forms.PictureBoxEx.Padding">
            <summary>
            Padding di renderizzazione dell'immagine all'interno del controllo
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.PictureBoxEx.OnHandleCreated(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.PictureBoxEx.OnMove(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.PictureBoxEx.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:WB.IIIParty.Commons.Windows.Forms.PictureBoxEx.CreateParams">
            <summary>
            
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.PictureBoxEx.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.PictureBoxEx.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:WB.IIIParty.Commons.Windows.Forms.RijndaelTextEditor">
            <summary>
            La classe RijndaelTextEditor implementa un controllo di tipologia text editor 
            che consente di caricare e salvare file crittografati tramite l’algoritmo Rijndael, 
            implementa inoltre funzionalità di Highlights dei linguaggi di programmazione più comuni.
            </summary>
        </member>
        <member name="T:WB.IIIParty.Commons.Windows.Forms.RijndaelTextEditor.RijndaelTextEditorHighlights">
            <summary>
            Elenca i linguaggi di programmazione supportati dal controllo
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Windows.Forms.RijndaelTextEditor.RijndaelTextEditorHighlights.None">
            <summary>
            Nessun HighLights
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Windows.Forms.RijndaelTextEditor.RijndaelTextEditorHighlights.Cpp">
            <summary>
            HighLights linguaggio di programmazione C++ .NET
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Windows.Forms.RijndaelTextEditor.RijndaelTextEditorHighlights.Html">
            <summary>
            HighLights linguaggio di programmazione Html
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Windows.Forms.RijndaelTextEditor.RijndaelTextEditorHighlights.CSharp">
            <summary>
            HighLights linguaggio di programmazione C# .NET
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Windows.Forms.RijndaelTextEditor.RijndaelTextEditorHighlights.Java">
            <summary>
            HighLights linguaggio di programmazione Java
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Windows.Forms.RijndaelTextEditor.RijndaelTextEditorHighlights.JavaScript">
            <summary>
            HighLights linguaggio di programmazione JavaScript
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Windows.Forms.RijndaelTextEditor.RijndaelTextEditorHighlights.Php">
            <summary>
            HighLights linguaggio di programmazione Php
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Windows.Forms.RijndaelTextEditor.RijndaelTextEditorHighlights.VbNet">
            <summary>
            HighLights linguaggio di programmazione VisualBasic .NET
            </summary>
        </member>
        <member name="F:WB.IIIParty.Commons.Windows.Forms.RijndaelTextEditor.RijndaelTextEditorHighlights.Xml">
            <summary>
            HighLights linguaggio di programmazione Xml
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.RijndaelTextEditor.#ctor">
            <summary>
            Implementa il costruttore della classe RijndaelTextEditor
            </summary>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.RijndaelTextEditor.SetHighlighting(WB.IIIParty.Commons.Windows.Forms.RijndaelTextEditor.RijndaelTextEditorHighlights)">
            <summary>
            Imposta la configurazione Highlights
            </summary>
            <param name="hl">Linguaggio di programmazione</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.RijndaelTextEditor.LoadFromFile(System.String,System.String)">
            <summary>
            Visualizza un file crittografato sul controllo 
            </summary>
            <param name="path">File sorgente</param>
            <param name="key">Chiave di decodifica</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.RijndaelTextEditor.LoadFromFile(System.String)">
            <summary>
            Visualizza un file crittografato sul controllo con una chiave di codifica definita con algoritmo Rijndael
            </summary>
            <param name="path">File sorgente</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.RijndaelTextEditor.SaveToFile(System.String,System.String,System.Boolean)">
            <summary>
            Salva su un file crittografato il testo visualizzato sul controllo 
            </summary>
            <param name="path">File sorgente</param>
            <param name="key">Chiave di codifica</param>
            <param name="overwrite">Sovrascive il file se esiste</param>
        </member>
        <member name="M:WB.IIIParty.Commons.Windows.Forms.RijndaelTextEditor.SaveToFile(System.String,System.Boolean)">
            <summary>
            Salva su un file crittografato il testo visualizzato sul controllo con una chiave di codifica definita con algoritmo Rijndael
            </summary>
            <param name="path">File di destinazione</param>
            <param name="overwrite">Sovrascive il file se esiste</param>
        </member>
    </members>
</doc>
